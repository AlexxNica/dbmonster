{"version":3,"sources":["ember-template-compiler.js","export-ember"],"sourcesContent":["/*!\n * @overview  Ember - JavaScript Application Framework\n * @copyright Copyright 2011-2015 Tilde Inc. and contributors\n *            Portions Copyright 2006-2011 Strobe Inc.\n *            Portions Copyright 2008-2011 Apple Inc. All rights reserved.\n * @license   Licensed under MIT license\n *            See https://raw.github.com/emberjs/ember.js/master/LICENSE\n * @version   VERSION_STRING_PLACEHOLDER\n */\n\n(function() {\nvar define, requireModule, require, requirejs, Ember;\nvar mainContext = this;\n\n(function() {\n\n  Ember = this.Ember = this.Ember || {};\n  if (typeof Ember === 'undefined') { Ember = {}; };\n  function UNDEFINED() { }\n\n  if (typeof Ember.__loader === 'undefined') {\n    var registry = {};\n    var seen = {};\n\n    define = function(name, deps, callback) {\n      var value = { };\n\n      if (!callback) {\n        value.deps = [];\n        value.callback = deps;\n      } else {\n        value.deps = deps;\n        value.callback = callback;\n      }\n\n        registry[name] = value;\n    };\n\n    requirejs = require = requireModule = function(name) {\n      var s = seen[name];\n\n      if (s !== undefined) { return seen[name]; }\n      if (s === UNDEFINED) { return undefined;  }\n\n      seen[name] = {};\n\n      if (!registry[name]) {\n        throw new Error('Could not find module ' + name);\n      }\n\n      var mod = registry[name];\n      var deps = mod.deps;\n      var callback = mod.callback;\n      var reified = [];\n      var exports;\n      var length = deps.length;\n\n      for (var i=0; i<length; i++) {\n        if (deps[i] === 'exports') {\n          reified.push(exports = {});\n        } else {\n          reified.push(requireModule(resolve(deps[i], name)));\n        }\n      }\n\n      var value = length === 0 ? callback.call(this) : callback.apply(this, reified);\n\n      return seen[name] = exports || (value === undefined ? UNDEFINED : value);\n    };\n\n    function resolve(child, name) {\n      if (child.charAt(0) !== '.') {\n        return child;\n      }\n      var parts = child.split('/');\n      var parentBase = name.split('/').slice(0, -1);\n\n      for (var i=0, l=parts.length; i<l; i++) {\n        var part = parts[i];\n\n        if (part === '..') {\n          parentBase.pop();\n        } else if (part === '.') {\n          continue;\n        } else {\n          parentBase.push(part);\n        }\n      }\n\n      return parentBase.join('/');\n    }\n\n    requirejs._eak_seen = registry;\n\n    Ember.__loader = {\n      define: define,\n      require: require,\n      registry: registry\n    };\n  } else {\n    define = Ember.__loader.define;\n    requirejs = require = requireModule = Ember.__loader.require;\n  }\n})();\n\ndefine('ember-metal/core', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.K = K;\n\n  /*globals Ember:true,ENV,EmberENV */\n\n  /**\n  @module ember\n  @submodule ember-metal\n  */\n\n  /**\n    All Ember methods and functions are defined inside of this namespace. You\n    generally should not add new properties to this namespace as it may be\n    overwritten by future versions of Ember.\n\n    You can also use the shorthand `Em` instead of `Ember`.\n\n    Ember-Runtime is a framework that provides core functions for Ember including\n    cross-platform functions, support for property observing and objects. Its\n    focus is on small size and performance. You can use this in place of or\n    along-side other cross-platform libraries such as jQuery.\n\n    The core Runtime framework is based on the jQuery API with a number of\n    performance optimizations.\n\n    @class Ember\n    @static\n    @version VERSION_STRING_PLACEHOLDER\n  */\n\n  if (\"undefined\" === typeof Ember) {\n    // Create core object. Make it act like an instance of Ember.Namespace so that\n    // objects assigned to it are given a sane string representation.\n    Ember = {};\n  }\n\n  // Default imports, exports and lookup to the global object;\n  var global = mainContext || {}; // jshint ignore:line\n  Ember.imports = Ember.imports || global;\n  Ember.lookup = Ember.lookup || global;\n  var emExports = Ember.exports = Ember.exports || global;\n\n  // aliases needed to keep minifiers from removing the global context\n  emExports.Em = emExports.Ember = Ember;\n\n  // Make sure these are set whether Ember was already defined or not\n\n  Ember.isNamespace = true;\n\n  Ember.toString = function () {\n    return \"Ember\";\n  };\n\n  /**\n    @property VERSION\n    @type String\n    @default 'VERSION_STRING_PLACEHOLDER'\n    @static\n  */\n  Ember.VERSION = \"VERSION_STRING_PLACEHOLDER\";\n\n  /**\n    Standard environmental variables. You can define these in a global `EmberENV`\n    variable before loading Ember to control various configuration settings.\n\n    For backwards compatibility with earlier versions of Ember the global `ENV`\n    variable will be used if `EmberENV` is not defined.\n\n    @property ENV\n    @type Hash\n  */\n\n  if (Ember.ENV) {\n    // do nothing if Ember.ENV is already setup\n    Ember.assert(\"Ember.ENV should be an object.\", \"object\" !== typeof Ember.ENV);\n  } else if (\"undefined\" !== typeof EmberENV) {\n    Ember.ENV = EmberENV;\n  } else if (\"undefined\" !== typeof ENV) {\n    Ember.ENV = ENV;\n  } else {\n    Ember.ENV = {};\n  }\n\n  Ember.config = Ember.config || {};\n\n  // We disable the RANGE API by default for performance reasons\n  if (\"undefined\" === typeof Ember.ENV.DISABLE_RANGE_API) {\n    Ember.ENV.DISABLE_RANGE_API = true;\n  }\n\n  /**\n    Hash of enabled Canary features. Add to this before creating your application.\n\n    You can also define `EmberENV.FEATURES` if you need to enable features flagged at runtime.\n\n    @class FEATURES\n    @namespace Ember\n    @static\n    @since 1.1.0\n  */\n\n  Ember.FEATURES = Ember.ENV.FEATURES;\n\n  if (!Ember.FEATURES) {\n    Ember.FEATURES = { \"features-stripped-test\": null, \"ember-routing-named-substates\": true, \"mandatory-setter\": true, \"ember-htmlbars-component-generation\": null, \"ember-htmlbars-component-helper\": true, \"ember-htmlbars-inline-if-helper\": true, \"ember-htmlbars-attribute-syntax\": true, \"ember-routing-transitioning-classes\": true, \"new-computed-syntax\": null, \"ember-testing-checkbox-helpers\": null, \"ember-metal-stream\": null, \"ember-htmlbars-each-with-index\": true, \"ember-application-instance-initializers\": null, \"ember-application-initializer-context\": null, \"ember-router-willtransition\": true, \"ember-application-visit\": null, \"ember-views-component-block-info\": null, \"ember-routing-core-outlet\": null, \"ember-libraries-isregistered\": null }; //jshint ignore:line\n  }\n\n  /**\n    Test that a feature is enabled. Parsed by Ember's build tools to leave\n    experimental features out of beta/stable builds.\n\n    You can define the following configuration options:\n\n    * `EmberENV.ENABLE_ALL_FEATURES` - force all features to be enabled.\n    * `EmberENV.ENABLE_OPTIONAL_FEATURES` - enable any features that have not been explicitly\n      enabled/disabled.\n\n    @method isEnabled\n    @param {String} feature\n    @return {Boolean}\n    @for Ember.FEATURES\n    @since 1.1.0\n  */\n\n  Ember.FEATURES.isEnabled = function (feature) {\n    var featureValue = Ember.FEATURES[feature];\n\n    if (Ember.ENV.ENABLE_ALL_FEATURES) {\n      return true;\n    } else if (featureValue === true || featureValue === false || featureValue === undefined) {\n      return featureValue;\n    } else if (Ember.ENV.ENABLE_OPTIONAL_FEATURES) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // ..........................................................\n  // BOOTSTRAP\n  //\n\n  /**\n    Determines whether Ember should enhance some built-in object prototypes to\n    provide a more friendly API. If enabled, a few methods will be added to\n    `Function`, `String`, and `Array`. `Object.prototype` will not be enhanced,\n    which is the one that causes most trouble for people.\n\n    In general we recommend leaving this option set to true since it rarely\n    conflicts with other code. If you need to turn it off however, you can\n    define an `EmberENV.EXTEND_PROTOTYPES` config to disable it.\n\n    @property EXTEND_PROTOTYPES\n    @type Boolean\n    @default true\n    @for Ember\n  */\n  Ember.EXTEND_PROTOTYPES = Ember.ENV.EXTEND_PROTOTYPES;\n\n  if (typeof Ember.EXTEND_PROTOTYPES === \"undefined\") {\n    Ember.EXTEND_PROTOTYPES = true;\n  }\n\n  /**\n    Determines whether Ember logs a full stack trace during deprecation warnings\n\n    @property LOG_STACKTRACE_ON_DEPRECATION\n    @type Boolean\n    @default true\n  */\n  Ember.LOG_STACKTRACE_ON_DEPRECATION = Ember.ENV.LOG_STACKTRACE_ON_DEPRECATION !== false;\n\n  /**\n    Determines whether Ember should add ECMAScript 5 Array shims to older browsers.\n\n    @property SHIM_ES5\n    @type Boolean\n    @default Ember.EXTEND_PROTOTYPES\n  */\n  Ember.SHIM_ES5 = Ember.ENV.SHIM_ES5 === false ? false : Ember.EXTEND_PROTOTYPES;\n\n  /**\n    Determines whether Ember logs info about version of used libraries\n\n    @property LOG_VERSION\n    @type Boolean\n    @default true\n  */\n  Ember.LOG_VERSION = Ember.ENV.LOG_VERSION === false ? false : true;\n\n  /**\n    Empty function. Useful for some operations. Always returns `this`.\n\n    @method K\n    @private\n    @return {Object}\n  */\n  function K() {\n    return this;\n  }\n  Ember.K = K;\n  //TODO: ES6 GLOBAL TODO\n\n  // Stub out the methods defined by the ember-debug package in case it's not loaded\n\n  if (\"undefined\" === typeof Ember.assert) {\n    Ember.assert = K;\n  }\n  if (\"undefined\" === typeof Ember.warn) {\n    Ember.warn = K;\n  }\n  if (\"undefined\" === typeof Ember.debug) {\n    Ember.debug = K;\n  }\n  if (\"undefined\" === typeof Ember.runInDebug) {\n    Ember.runInDebug = K;\n  }\n  if (\"undefined\" === typeof Ember.deprecate) {\n    Ember.deprecate = K;\n  }\n  if (\"undefined\" === typeof Ember.deprecateFunc) {\n    Ember.deprecateFunc = function (_, func) {\n      return func;\n    };\n  }\n\n  exports['default'] = Ember;\n\n});\ndefine('ember-template-compiler', ['exports', 'ember-metal/core', 'ember-template-compiler/system/precompile', 'ember-template-compiler/system/compile', 'ember-template-compiler/system/template', 'ember-template-compiler/plugins', 'ember-template-compiler/plugins/transform-each-in-to-hash', 'ember-template-compiler/plugins/transform-with-as-to-hash', 'ember-template-compiler/compat'], function (exports, _Ember, precompile, compile, template, plugins, TransformEachInToHash, TransformWithAsToHash) {\n\n\t'use strict';\n\n\tplugins.registerPlugin(\"ast\", TransformWithAsToHash['default']);\n\tplugins.registerPlugin(\"ast\", TransformEachInToHash['default']);\n\n\texports._Ember = _Ember['default'];\n\texports.precompile = precompile['default'];\n\texports.compile = compile['default'];\n\texports.template = template['default'];\n\texports.registerPlugin = plugins.registerPlugin;\n\n});\ndefine('ember-template-compiler/compat', ['ember-metal/core', 'ember-template-compiler/compat/precompile', 'ember-template-compiler/system/compile', 'ember-template-compiler/system/template'], function (Ember, precompile, compile, template) {\n\n\t'use strict';\n\n\tvar EmberHandlebars = Ember['default'].Handlebars = Ember['default'].Handlebars || {};\n\n\tEmberHandlebars.precompile = precompile['default'];\n\tEmberHandlebars.compile = compile['default'];\n\tEmberHandlebars.template = template['default'];\n\n});\ndefine('ember-template-compiler/compat/precompile', ['exports', 'ember-template-compiler/system/compile_options'], function (exports, compileOptions) {\n\n  'use strict';\n\n  /**\n  @module ember\n  @submodule ember-template-compiler\n  */\n  var compile, compileSpec;\n\n  exports['default'] = function (string) {\n    if ((!compile || !compileSpec) && Ember.__loader.registry[\"htmlbars-compiler/compiler\"]) {\n      var Compiler = requireModule(\"htmlbars-compiler/compiler\");\n\n      compile = Compiler.compile;\n      compileSpec = Compiler.compileSpec;\n    }\n\n    if (!compile || !compileSpec) {\n      throw new Error(\"Cannot call `precompile` without the template compiler loaded. Please load `ember-template-compiler.js` prior to calling `precompile`.\");\n    }\n\n    var asObject = arguments[1] === undefined ? true : arguments[1];\n    var compileFunc = asObject ? compile : compileSpec;\n\n    return compileFunc(string, compileOptions['default']());\n  };\n\n});\ndefine('ember-template-compiler/plugins', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.registerPlugin = registerPlugin;\n\n  /**\n    Adds an AST plugin to be used by Ember.HTMLBars.compile.\n\n    @private\n    @method registerASTPlugin\n  */\n  var plugins = {\n    ast: []\n  };\n  function registerPlugin(type, Plugin) {\n    if (!plugins[type]) {\n      throw new Error(\"Attempting to register \\\"\" + Plugin + \"\\\" as \\\"\" + type + \"\\\" which is not a valid HTMLBars plugin type.\");\n    }\n\n    plugins[type].push(Plugin);\n  }\n\n  exports['default'] = plugins;\n\n});\ndefine('ember-template-compiler/plugins/transform-each-in-to-hash', ['exports'], function (exports) {\n\n  'use strict';\n\n  /**\n  @module ember\n  @submodule ember-htmlbars\n  */\n\n  /**\n    An HTMLBars AST transformation that replaces all instances of\n\n    ```handlebars\n    {{#each item in items}}\n    {{/each}}\n    ```\n\n    with\n\n    ```handlebars\n    {{#each items keyword=\"item\"}}\n    {{/each}}\n    ```\n\n    @class TransformEachInToHash\n    @private\n  */\n  function TransformEachInToHash() {\n    // set later within HTMLBars to the syntax package\n    this.syntax = null;\n  }\n\n  /**\n    @private\n    @method transform\n    @param {AST} The AST to be transformed.\n  */\n  TransformEachInToHash.prototype.transform = function TransformEachInToHash_transform(ast) {\n    var pluginContext = this;\n    var walker = new pluginContext.syntax.Walker();\n    var b = pluginContext.syntax.builders;\n\n    walker.visit(ast, function (node) {\n      if (pluginContext.validate(node)) {\n\n        if (node.program && node.program.blockParams.length) {\n          throw new Error(\"You cannot use keyword (`{{each foo in bar}}`) and block params (`{{each bar as |foo|}}`) at the same time.\");\n        }\n\n        var removedParams = node.sexpr.params.splice(0, 2);\n        var keyword = removedParams[0].original;\n\n        // TODO: This may not be necessary.\n        if (!node.sexpr.hash) {\n          node.sexpr.hash = b.hash();\n        }\n\n        node.sexpr.hash.pairs.push(b.pair(\"keyword\", b.string(keyword)));\n      }\n    });\n\n    return ast;\n  };\n\n  TransformEachInToHash.prototype.validate = function TransformEachInToHash_validate(node) {\n    return (node.type === \"BlockStatement\" || node.type === \"MustacheStatement\") && node.sexpr.path.original === \"each\" && node.sexpr.params.length === 3 && node.sexpr.params[1].type === \"PathExpression\" && node.sexpr.params[1].original === \"in\";\n  };\n\n  exports['default'] = TransformEachInToHash;\n\n});\ndefine('ember-template-compiler/plugins/transform-with-as-to-hash', ['exports'], function (exports) {\n\n  'use strict';\n\n  /**\n  @module ember\n  @submodule ember-htmlbars\n  */\n\n  /**\n    An HTMLBars AST transformation that replaces all instances of\n\n    ```handlebars\n    {{#with foo.bar as bar}}\n    {{/with}}\n    ```\n\n    with\n\n    ```handlebars\n    {{#with foo.bar as |bar|}}\n    {{/with}}\n    ```\n\n    @private\n    @class TransformWithAsToHash\n  */\n  function TransformWithAsToHash() {\n    // set later within HTMLBars to the syntax package\n    this.syntax = null;\n  }\n\n  /**\n    @private\n    @method transform\n    @param {AST} The AST to be transformed.\n  */\n  TransformWithAsToHash.prototype.transform = function TransformWithAsToHash_transform(ast) {\n    var pluginContext = this;\n    var walker = new pluginContext.syntax.Walker();\n\n    walker.visit(ast, function (node) {\n      if (pluginContext.validate(node)) {\n\n        if (node.program && node.program.blockParams.length) {\n          throw new Error(\"You cannot use keyword (`{{with foo as bar}}`) and block params (`{{with foo as |bar|}}`) at the same time.\");\n        }\n\n        var removedParams = node.sexpr.params.splice(1, 2);\n        var keyword = removedParams[1].original;\n        node.program.blockParams = [keyword];\n      }\n    });\n\n    return ast;\n  };\n\n  TransformWithAsToHash.prototype.validate = function TransformWithAsToHash_validate(node) {\n    return node.type === \"BlockStatement\" && node.sexpr.path.original === \"with\" && node.sexpr.params.length === 3 && node.sexpr.params[1].type === \"PathExpression\" && node.sexpr.params[1].original === \"as\";\n  };\n\n  exports['default'] = TransformWithAsToHash;\n\n});\ndefine('ember-template-compiler/system/compile', ['exports', 'ember-template-compiler/system/compile_options', 'ember-template-compiler/system/template'], function (exports, compileOptions, template) {\n\n  'use strict';\n\n  /**\n  @module ember\n  @submodule ember-template-compiler\n  */\n\n  var compile;\n  exports['default'] = function (templateString) {\n    if (!compile && Ember.__loader.registry[\"htmlbars-compiler/compiler\"]) {\n      compile = requireModule(\"htmlbars-compiler/compiler\").compile;\n    }\n\n    if (!compile) {\n      throw new Error(\"Cannot call `compile` without the template compiler loaded. Please load `ember-template-compiler.js` prior to calling `compile`.\");\n    }\n\n    var templateSpec = compile(templateString, compileOptions['default']());\n\n    return template['default'](templateSpec);\n  };\n\n});\ndefine('ember-template-compiler/system/compile_options', ['exports', 'ember-metal/core', 'ember-template-compiler/plugins'], function (exports, Ember, plugins) {\n\n  'use strict';\n\n  /**\n  @module ember\n  @submodule ember-template-compiler\n  */\n\n  exports['default'] = function () {\n    var disableComponentGeneration = true;\n    if (Ember['default'].FEATURES.isEnabled(\"ember-htmlbars-component-generation\")) {\n      disableComponentGeneration = false;\n    }\n\n    return {\n      revision: \"Ember@VERSION_STRING_PLACEHOLDER\",\n\n      disableComponentGeneration: disableComponentGeneration,\n\n      plugins: plugins['default']\n    };\n  };\n\n});\ndefine('ember-template-compiler/system/precompile', ['exports', 'ember-template-compiler/system/compile_options'], function (exports, compileOptions) {\n\n  'use strict';\n\n  /**\n  @module ember\n  @submodule ember-template-compiler\n  */\n\n  var compileSpec;\n\n  /**\n    Uses HTMLBars `compile` function to process a string into a compiled template string.\n    The returned string must be passed through `Ember.HTMLBars.template`.\n\n    This is not present in production builds.\n\n    @private\n    @method precompile\n    @param {String} templateString This is the string to be compiled by HTMLBars.\n  */\n  exports['default'] = function (templateString) {\n    if (!compileSpec && Ember.__loader.registry[\"htmlbars-compiler/compiler\"]) {\n      compileSpec = requireModule(\"htmlbars-compiler/compiler\").compileSpec;\n    }\n\n    if (!compileSpec) {\n      throw new Error(\"Cannot call `compileSpec` without the template compiler loaded. Please load `ember-template-compiler.js` prior to calling `compileSpec`.\");\n    }\n\n    return compileSpec(templateString, compileOptions['default']());\n  };\n\n});\ndefine('ember-template-compiler/system/template', ['exports', 'htmlbars-runtime/hooks'], function (exports, hooks) {\n\n  'use strict';\n\n  exports['default'] = function (templateSpec) {\n    if (!templateSpec.render) {\n      templateSpec = hooks.wrap(templateSpec);\n    }\n\n    templateSpec.isTop = true;\n    templateSpec.isMethod = false;\n\n    return templateSpec;\n  };\n\n});\ndefine(\"htmlbars-compiler\",\n  [\"./htmlbars-compiler/compiler\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var compile = __dependency1__.compile;\n    var compileSpec = __dependency1__.compileSpec;\n    var template = __dependency1__.template;\n\n    __exports__.compile = compile;\n    __exports__.compileSpec = compileSpec;\n    __exports__.template = template;\n  });\ndefine(\"htmlbars-compiler/compiler\",\n  [\"../htmlbars-syntax/parser\",\"./template-compiler\",\"../htmlbars-runtime/hooks\",\"../htmlbars-runtime/render\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    /*jshint evil:true*/\n    var preprocess = __dependency1__.preprocess;\n    var TemplateCompiler = __dependency2__[\"default\"];\n    var wrap = __dependency3__.wrap;\n    var render = __dependency4__[\"default\"];\n\n    /*\n     * Compile a string into a template spec string. The template spec is a string\n     * representation of a template. Usually, you would use compileSpec for\n     * pre-compilation of a template on the server.\n     *\n     * Example usage:\n     *\n     *     var templateSpec = compileSpec(\"Howdy {{name}}\");\n     *     // This next step is basically what plain compile does\n     *     var template = new Function(\"return \" + templateSpec)();\n     *\n     * @method compileSpec\n     * @param {String} string An HTMLBars template string\n     * @return {TemplateSpec} A template spec string\n     */\n    function compileSpec(string, options) {\n      var ast = preprocess(string, options);\n      var compiler = new TemplateCompiler(options);\n      var program = compiler.compile(ast);\n      return program;\n    }\n\n    __exports__.compileSpec = compileSpec;/*\n     * @method template\n     * @param {TemplateSpec} templateSpec A precompiled template\n     * @return {Template} A template spec string\n     */\n    function template(templateSpec) {\n      return new Function(\"return \" + templateSpec)();\n    }\n\n    __exports__.template = template;/*\n     * Compile a string into a template rendering function\n     *\n     * Example usage:\n     *\n     *     // Template is the hydration portion of the compiled template\n     *     var template = compile(\"Howdy {{name}}\");\n     *\n     *     // Template accepts three arguments:\n     *     //\n     *     //   1. A context object\n     *     //   2. An env object\n     *     //   3. A contextualElement (optional, document.body is the default)\n     *     //\n     *     // The env object *must* have at least these two properties:\n     *     //\n     *     //   1. `hooks` - Basic hooks for rendering a template\n     *     //   2. `dom` - An instance of DOMHelper\n     *     //\n     *     import {hooks} from 'htmlbars-runtime';\n     *     import {DOMHelper} from 'morph';\n     *     var context = {name: 'whatever'},\n     *         env = {hooks: hooks, dom: new DOMHelper()},\n     *         contextualElement = document.body;\n     *     var domFragment = template(context, env, contextualElement);\n     *\n     * @method compile\n     * @param {String} string An HTMLBars template string\n     * @param {Object} options A set of options to provide to the compiler\n     * @return {Template} A function for rendering the template\n     */\n    function compile(string, options) {\n      return wrap(template(compileSpec(string, options)), render);\n    }\n\n    __exports__.compile = compile;\n  });\ndefine(\"htmlbars-compiler/fragment-javascript-compiler\",\n  [\"./utils\",\"../htmlbars-util/quoting\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var processOpcodes = __dependency1__.processOpcodes;\n    var string = __dependency2__.string;\n\n    var svgNamespace = \"http://www.w3.org/2000/svg\",\n    // http://www.w3.org/html/wg/drafts/html/master/syntax.html#html-integration-point\n        svgHTMLIntegrationPoints = {'foreignObject':true, 'desc':true, 'title':true};\n\n\n    function FragmentJavaScriptCompiler() {\n      this.source = [];\n      this.depth = -1;\n    }\n\n    __exports__[\"default\"] = FragmentJavaScriptCompiler;\n\n    FragmentJavaScriptCompiler.prototype.compile = function(opcodes, options) {\n      this.source.length = 0;\n      this.depth = -1;\n      this.indent = (options && options.indent) || \"\";\n      this.namespaceFrameStack = [{namespace: null, depth: null}];\n      this.domNamespace = null;\n\n      this.source.push('function buildFragment(dom) {\\n');\n      processOpcodes(this, opcodes);\n      this.source.push(this.indent+'}');\n\n      return this.source.join('');\n    };\n\n    FragmentJavaScriptCompiler.prototype.createFragment = function() {\n      var el = 'el'+(++this.depth);\n      this.source.push(this.indent+'  var '+el+' = dom.createDocumentFragment();\\n');\n    };\n\n    FragmentJavaScriptCompiler.prototype.createElement = function(tagName) {\n      var el = 'el'+(++this.depth);\n      if (tagName === 'svg') {\n        this.pushNamespaceFrame({namespace: svgNamespace, depth: this.depth});\n      }\n      this.ensureNamespace();\n      this.source.push(this.indent+'  var '+el+' = dom.createElement('+string(tagName)+');\\n');\n      if (svgHTMLIntegrationPoints[tagName]) {\n        this.pushNamespaceFrame({namespace: null, depth: this.depth});\n      }\n    };\n\n    FragmentJavaScriptCompiler.prototype.createText = function(str) {\n      var el = 'el'+(++this.depth);\n      this.source.push(this.indent+'  var '+el+' = dom.createTextNode('+string(str)+');\\n');\n    };\n\n    FragmentJavaScriptCompiler.prototype.createComment = function(str) {\n      var el = 'el'+(++this.depth);\n      this.source.push(this.indent+'  var '+el+' = dom.createComment('+string(str)+');\\n');\n    };\n\n    FragmentJavaScriptCompiler.prototype.returnNode = function() {\n      var el = 'el'+this.depth;\n      this.source.push(this.indent+'  return '+el+';\\n');\n    };\n\n    FragmentJavaScriptCompiler.prototype.setAttribute = function(name, value, namespace) {\n      var el = 'el'+this.depth;\n      if (namespace) {\n        this.source.push(this.indent+'  dom.setAttributeNS('+el+','+string(namespace)+','+string(name)+','+string(value)+');\\n');\n      } else {\n        this.source.push(this.indent+'  dom.setAttribute('+el+','+string(name)+','+string(value)+');\\n');\n      }\n    };\n\n    FragmentJavaScriptCompiler.prototype.appendChild = function() {\n      if (this.depth === this.getCurrentNamespaceFrame().depth) {\n        this.popNamespaceFrame();\n      }\n      var child = 'el'+(this.depth--);\n      var el = 'el'+this.depth;\n      this.source.push(this.indent+'  dom.appendChild('+el+', '+child+');\\n');\n    };\n\n    FragmentJavaScriptCompiler.prototype.getCurrentNamespaceFrame = function() {\n      return this.namespaceFrameStack[this.namespaceFrameStack.length-1];\n    };\n\n    FragmentJavaScriptCompiler.prototype.pushNamespaceFrame = function(frame) {\n      this.namespaceFrameStack.push(frame);\n    };\n\n    FragmentJavaScriptCompiler.prototype.popNamespaceFrame = function() {\n      return this.namespaceFrameStack.pop();\n    };\n\n    FragmentJavaScriptCompiler.prototype.ensureNamespace = function() {\n      var correctNamespace = this.getCurrentNamespaceFrame().namespace;\n      if (this.domNamespace !== correctNamespace) {\n        this.source.push(this.indent+'  dom.setNamespace('+(correctNamespace ? string(correctNamespace) : 'null')+');\\n');\n        this.domNamespace = correctNamespace;\n      }\n    };\n  });\ndefine(\"htmlbars-compiler/fragment-opcode-compiler\",\n  [\"./template-visitor\",\"./utils\",\"../htmlbars-util\",\"../htmlbars-util/array-utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var TemplateVisitor = __dependency1__[\"default\"];\n    var processOpcodes = __dependency2__.processOpcodes;\n    var getAttrNamespace = __dependency3__.getAttrNamespace;\n    var forEach = __dependency4__.forEach;\n\n    function FragmentOpcodeCompiler() {\n      this.opcodes = [];\n    }\n\n    __exports__[\"default\"] = FragmentOpcodeCompiler;\n\n    FragmentOpcodeCompiler.prototype.compile = function(ast) {\n      var templateVisitor = new TemplateVisitor();\n      templateVisitor.visit(ast);\n\n      processOpcodes(this, templateVisitor.actions);\n\n      return this.opcodes;\n    };\n\n    FragmentOpcodeCompiler.prototype.opcode = function(type, params) {\n      this.opcodes.push([type, params]);\n    };\n\n    FragmentOpcodeCompiler.prototype.text = function(text) {\n      this.opcode('createText', [text.chars]);\n      this.opcode('appendChild');\n    };\n\n    FragmentOpcodeCompiler.prototype.comment = function(comment) {\n      this.opcode('createComment', [comment.value]);\n      this.opcode('appendChild');\n    };\n\n    FragmentOpcodeCompiler.prototype.openElement = function(element) {\n      this.opcode('createElement', [element.tag]);\n      forEach(element.attributes, this.attribute, this);\n    };\n\n    FragmentOpcodeCompiler.prototype.closeElement = function() {\n      this.opcode('appendChild');\n    };\n\n    FragmentOpcodeCompiler.prototype.startProgram = function() {\n      this.opcodes.length = 0;\n      this.opcode('createFragment');\n    };\n\n    FragmentOpcodeCompiler.prototype.endProgram = function() {\n      this.opcode('returnNode');\n    };\n\n    FragmentOpcodeCompiler.prototype.mustache = function() {\n      this.pushMorphPlaceholderNode();\n    };\n\n    FragmentOpcodeCompiler.prototype.component = function() {\n      this.pushMorphPlaceholderNode();\n    };\n\n    FragmentOpcodeCompiler.prototype.block = function() {\n      this.pushMorphPlaceholderNode();\n    };\n\n    FragmentOpcodeCompiler.prototype.pushMorphPlaceholderNode = function() {\n      this.opcode('createComment', [\"\"]);\n      this.opcode('appendChild');\n    };\n\n    FragmentOpcodeCompiler.prototype.attribute = function(attr) {\n      if (attr.value.type === 'TextNode') {\n        var namespace = getAttrNamespace(attr.name);\n        this.opcode('setAttribute', [attr.name, attr.value.chars, namespace]);\n      }\n    };\n\n    FragmentOpcodeCompiler.prototype.setNamespace = function(namespace) {\n      this.opcode('setNamespace', [namespace]);\n    };\n  });\ndefine(\"htmlbars-compiler/hydration-javascript-compiler\",\n  [\"./utils\",\"../htmlbars-util/quoting\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var processOpcodes = __dependency1__.processOpcodes;\n    var array = __dependency2__.array;\n\n    function HydrationJavaScriptCompiler() {\n      this.stack = [];\n      this.source = [];\n      this.mustaches = [];\n      this.parents = [['fragment']];\n      this.parentCount = 0;\n      this.morphs = [];\n      this.fragmentProcessing = [];\n      this.hooks = undefined;\n    }\n\n    __exports__[\"default\"] = HydrationJavaScriptCompiler;\n\n    var prototype = HydrationJavaScriptCompiler.prototype;\n\n    prototype.compile = function(opcodes, options) {\n      this.stack.length = 0;\n      this.mustaches.length = 0;\n      this.source.length = 0;\n      this.parents.length = 1;\n      this.parents[0] = ['fragment'];\n      this.morphs.length = 0;\n      this.fragmentProcessing.length = 0;\n      this.parentCount = 0;\n      this.indent = (options && options.indent) || \"\";\n      this.hooks = {};\n      this.hasOpenBoundary = false;\n      this.hasCloseBoundary = false;\n      this.statements = [];\n      this.expressionStack = [];\n      this.locals = [];\n      this.hasOpenBoundary = false;\n      this.hasCloseBoundary = false;\n\n      processOpcodes(this, opcodes);\n\n      if (this.hasOpenBoundary) {\n        this.source.unshift(this.indent+\"  dom.insertBoundary(fragment, 0);\\n\");\n      }\n\n      if (this.hasCloseBoundary) {\n        this.source.unshift(this.indent+\"  dom.insertBoundary(fragment, null);\\n\");\n      }\n\n      var i, l;\n\n      var indent = this.indent;\n\n      var morphs;\n\n      var result = {\n        createMorphsProgram: '',\n        hydrateMorphsProgram: '',\n        fragmentProcessingProgram: '',\n        statements: this.statements,\n        locals: this.locals,\n        hasMorphs: false\n      };\n\n      result.hydrateMorphsProgram = this.source.join('');\n\n      if (this.morphs.length) {\n        result.hasMorphs = true;\n        morphs =\n          indent+'  var morphs = new Array(' + this.morphs.length + ');\\n';\n\n          for (i = 0, l = this.morphs.length; i < l; ++i) {\n            var morph = this.morphs[i];\n            morphs += indent+'  morphs['+i+'] = '+morph+';\\n';\n          }\n      }\n\n      if (this.fragmentProcessing.length) {\n        var processing = \"\";\n        for (i = 0, l = this.fragmentProcessing.length; i < l; ++i) {\n          processing += this.indent+'  '+this.fragmentProcessing[i]+'\\n';\n        }\n        result.fragmentProcessingProgram = processing;\n      }\n\n      var createMorphsProgram;\n      if (result.hasMorphs) {\n        createMorphsProgram =\n          'function buildRenderNodes(dom, fragment, contextualElement) {\\n' +\n          result.fragmentProcessingProgram + morphs;\n\n          if (this.hasOpenBoundary) {\n            createMorphsProgram += indent+\"  dom.insertBoundary(fragment, 0);\\n\";\n          }\n\n          if (this.hasCloseBoundary) {\n            createMorphsProgram += indent+\"  dom.insertBoundary(fragment, null);\\n\";\n          }\n\n          createMorphsProgram +=\n          indent + '  return morphs;\\n' +\n          indent+'}';\n      } else {\n        createMorphsProgram =\n          'function buildRenderNodes() { return []; }';\n      }\n\n      result.createMorphsProgram = createMorphsProgram;\n\n      return result;\n    };\n\n    prototype.prepareArray = function(length) {\n      var values = [];\n\n      for (var i = 0; i < length; i++) {\n        values.push(this.expressionStack.pop());\n      }\n\n      this.expressionStack.push(values);\n    };\n\n    prototype.prepareObject = function(size) {\n      var pairs = [];\n\n      for (var i = 0; i < size; i++) {\n        pairs.push(this.expressionStack.pop(), this.expressionStack.pop());\n      }\n\n      this.expressionStack.push(pairs);\n    };\n\n    prototype.openBoundary = function() {\n      this.hasOpenBoundary = true;\n    };\n\n    prototype.closeBoundary = function() {\n      this.hasCloseBoundary = true;\n    };\n\n    prototype.pushLiteral = function(value) {\n      this.expressionStack.push(value);\n    };\n\n    prototype.pushGetHook = function(path) {\n      this.expressionStack.push([ 'get', path ]);\n    };\n\n    prototype.pushSexprHook = function() {\n      this.expressionStack.push([\n        'subexpr',\n        this.expressionStack.pop(),\n        this.expressionStack.pop(),\n        this.expressionStack.pop()\n      ]);\n    };\n\n    prototype.pushConcatHook = function() {\n      this.expressionStack.push([ 'concat', this.expressionStack.pop() ]);\n    };\n\n    prototype.printSetHook = function(name) {\n      this.locals.push(name);\n    };\n\n    prototype.printBlockHook = function(templateId, inverseId) {\n      this.statements.push([\n        'block',\n        this.expressionStack.pop(), // path\n        this.expressionStack.pop(), // params\n        this.expressionStack.pop(), // hash\n        templateId,\n        inverseId\n      ]);\n    };\n\n    prototype.printInlineHook = function() {\n      var path = this.expressionStack.pop();\n      var params = this.expressionStack.pop();\n      var hash = this.expressionStack.pop();\n\n      this.statements.push([ 'inline', path, params, hash ]);\n    };\n\n    prototype.printContentHook = function() {\n      this.statements.push([ 'content', this.expressionStack.pop() ]);\n    };\n\n    prototype.printComponentHook = function(templateId) {\n      this.statements.push([\n        'component',\n        this.expressionStack.pop(), // path\n        this.expressionStack.pop(), // attrs\n        templateId\n      ]);\n    };\n\n    prototype.printAttributeHook = function() {\n      this.statements.push([\n        'attribute',\n        this.expressionStack.pop(), // name\n        this.expressionStack.pop()  // value;\n      ]);\n    };\n\n    prototype.printElementHook = function() {\n      this.statements.push([\n        'element',\n        this.expressionStack.pop(), // path\n        this.expressionStack.pop(), // params\n        this.expressionStack.pop()  // hash\n      ]);\n    };\n\n    prototype.createMorph = function(morphNum, parentPath, startIndex, endIndex, escaped) {\n      var isRoot = parentPath.length === 0;\n      var parent = this.getParent();\n\n      var morphMethod = escaped ? 'createMorphAt' : 'createUnsafeMorphAt';\n      var morph = \"dom.\"+morphMethod+\"(\"+parent+\n        \",\"+(startIndex === null ? \"-1\" : startIndex)+\n        \",\"+(endIndex === null ? \"-1\" : endIndex)+\n        (isRoot ? \",contextualElement)\" : \")\");\n\n      this.morphs[morphNum] = morph;\n    };\n\n    prototype.createAttrMorph = function(attrMorphNum, elementNum, name, escaped, namespace) {\n      var morphMethod = escaped ? 'createAttrMorph' : 'createUnsafeAttrMorph';\n      var morph = \"dom.\"+morphMethod+\"(element\"+elementNum+\", '\"+name+(namespace ? \"', '\"+namespace : '')+\"')\";\n      this.morphs[attrMorphNum] = morph;\n    };\n\n    prototype.createElementMorph = function(morphNum, elementNum ) {\n      var morphMethod = 'createElementMorph';\n      var morph = \"dom.\"+morphMethod+\"(element\"+elementNum+\")\";\n      this.morphs[morphNum] = morph;\n    };\n\n    prototype.repairClonedNode = function(blankChildTextNodes, isElementChecked) {\n      var parent = this.getParent(),\n          processing = 'if (this.cachedFragment) { dom.repairClonedNode('+parent+','+\n                       array(blankChildTextNodes)+\n                       ( isElementChecked ? ',true' : '' )+\n                       '); }';\n      this.fragmentProcessing.push(\n        processing\n      );\n    };\n\n    prototype.shareElement = function(elementNum){\n      var elementNodesName = \"element\" + elementNum;\n      this.fragmentProcessing.push('var '+elementNodesName+' = '+this.getParent()+';');\n      this.parents[this.parents.length-1] = [elementNodesName];\n    };\n\n    prototype.consumeParent = function(i) {\n      var newParent = this.lastParent().slice();\n      newParent.push(i);\n\n      this.parents.push(newParent);\n    };\n\n    prototype.popParent = function() {\n      this.parents.pop();\n    };\n\n    prototype.getParent = function() {\n      var last = this.lastParent().slice();\n      var frag = last.shift();\n\n      if (!last.length) {\n        return frag;\n      }\n\n      return 'dom.childAt(' + frag + ', [' + last.join(', ') + '])';\n    };\n\n    prototype.lastParent = function() {\n      return this.parents[this.parents.length-1];\n    };\n  });\ndefine(\"htmlbars-compiler/hydration-opcode-compiler\",\n  [\"./template-visitor\",\"./utils\",\"../htmlbars-util\",\"../htmlbars-util/array-utils\",\"../htmlbars-syntax/utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __exports__) {\n    \"use strict\";\n    var TemplateVisitor = __dependency1__[\"default\"];\n    var processOpcodes = __dependency2__.processOpcodes;\n    var getAttrNamespace = __dependency3__.getAttrNamespace;\n    var forEach = __dependency4__.forEach;\n    var isHelper = __dependency5__.isHelper;\n\n    function unwrapMustache(mustache) {\n      if (isHelper(mustache.sexpr)) {\n        return mustache.sexpr;\n      } else {\n        return mustache.sexpr.path;\n      }\n    }\n\n    function detectIsElementChecked(element){\n      for (var i=0, len=element.attributes.length;i<len;i++) {\n        if (element.attributes[i].name === 'checked') {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function HydrationOpcodeCompiler() {\n      this.opcodes = [];\n      this.paths = [];\n      this.templateId = 0;\n      this.currentDOMChildIndex = 0;\n      this.morphs = [];\n      this.morphNum = 0;\n      this.element = null;\n      this.elementNum = -1;\n    }\n\n    __exports__[\"default\"] = HydrationOpcodeCompiler;\n\n    HydrationOpcodeCompiler.prototype.compile = function(ast) {\n      var templateVisitor = new TemplateVisitor();\n      templateVisitor.visit(ast);\n\n      processOpcodes(this, templateVisitor.actions);\n\n      return this.opcodes;\n    };\n\n    HydrationOpcodeCompiler.prototype.accept = function(node) {\n      this[node.type](node);\n    };\n\n    HydrationOpcodeCompiler.prototype.opcode = function(type) {\n      var params = [].slice.call(arguments, 1);\n      this.opcodes.push([type, params]);\n    };\n\n    HydrationOpcodeCompiler.prototype.startProgram = function(program, c, blankChildTextNodes) {\n      this.opcodes.length = 0;\n      this.paths.length = 0;\n      this.morphs.length = 0;\n      this.templateId = 0;\n      this.currentDOMChildIndex = -1;\n      this.morphNum = 0;\n\n      var blockParams = program.blockParams || [];\n\n      for (var i = 0; i < blockParams.length; i++) {\n        this.opcode('printSetHook', blockParams[i], i);\n      }\n\n      if (blankChildTextNodes.length > 0) {\n        this.opcode('repairClonedNode', blankChildTextNodes);\n      }\n    };\n\n    HydrationOpcodeCompiler.prototype.insertBoundary = function(first) {\n      this.opcode(first ? 'openBoundary' : 'closeBoundary');\n    };\n\n    HydrationOpcodeCompiler.prototype.endProgram = function() {\n      distributeMorphs(this.morphs, this.opcodes);\n    };\n\n    HydrationOpcodeCompiler.prototype.text = function() {\n      ++this.currentDOMChildIndex;\n    };\n\n    HydrationOpcodeCompiler.prototype.comment = function() {\n      ++this.currentDOMChildIndex;\n    };\n\n    HydrationOpcodeCompiler.prototype.openElement = function(element, pos, len, mustacheCount, blankChildTextNodes) {\n      distributeMorphs(this.morphs, this.opcodes);\n      ++this.currentDOMChildIndex;\n\n      this.element = this.currentDOMChildIndex;\n\n      this.opcode('consumeParent', this.currentDOMChildIndex);\n\n      // If our parent reference will be used more than once, cache its reference.\n      if (mustacheCount > 1) {\n        shareElement(this);\n      }\n\n      var isElementChecked = detectIsElementChecked(element);\n      if (blankChildTextNodes.length > 0 || isElementChecked) {\n        this.opcode( 'repairClonedNode',\n                     blankChildTextNodes,\n                     isElementChecked );\n      }\n\n      this.paths.push(this.currentDOMChildIndex);\n      this.currentDOMChildIndex = -1;\n\n      forEach(element.attributes, this.attribute, this);\n      forEach(element.helpers, this.elementHelper, this);\n    };\n\n    HydrationOpcodeCompiler.prototype.closeElement = function() {\n      distributeMorphs(this.morphs, this.opcodes);\n      this.opcode('popParent');\n      this.currentDOMChildIndex = this.paths.pop();\n    };\n\n    HydrationOpcodeCompiler.prototype.mustache = function(mustache, childIndex, childCount) {\n      this.pushMorphPlaceholderNode(childIndex, childCount);\n\n      var sexpr = mustache.sexpr;\n      var opcode;\n\n      if (isHelper(sexpr)) {\n        prepareSexpr(this, sexpr);\n        opcode = 'printInlineHook';\n      } else {\n        preparePath(this, sexpr.path);\n        opcode = 'printContentHook';\n      }\n\n      var morphNum = this.morphNum++;\n      var start = this.currentDOMChildIndex;\n      var end = this.currentDOMChildIndex;\n      this.morphs.push([morphNum, this.paths.slice(), start, end, mustache.escaped]);\n\n      this.opcode(opcode);\n    };\n\n    HydrationOpcodeCompiler.prototype.block = function(block, childIndex, childCount) {\n      this.pushMorphPlaceholderNode(childIndex, childCount);\n\n      var sexpr = block.sexpr;\n      prepareSexpr(this, sexpr);\n\n      var morphNum = this.morphNum++;\n      var start = this.currentDOMChildIndex;\n      var end = this.currentDOMChildIndex;\n      this.morphs.push([morphNum, this.paths.slice(), start, end, true]);\n\n      var templateId = this.templateId++;\n      var inverseId = block.inverse === null ? null : this.templateId++;\n\n      this.opcode('printBlockHook', templateId, inverseId);\n    };\n\n    HydrationOpcodeCompiler.prototype.component = function(component, childIndex, childCount) {\n      this.pushMorphPlaceholderNode(childIndex, childCount);\n\n      var program = component.program || {};\n      var blockParams = program.blockParams || [];\n\n      var attrs = component.attributes;\n      for (var i = attrs.length - 1; i >= 0; i--) {\n        var name = attrs[i].name;\n        var value = attrs[i].value;\n\n        // TODO: Introduce context specific AST nodes to avoid switching here.\n        if (value.type === 'TextNode') {\n          this.opcode('pushLiteral', value.chars);\n        } else if (value.type === 'MustacheStatement') {\n          this.accept(unwrapMustache(value));\n        } else if (value.type === 'ConcatStatement') {\n          prepareParams(this, value.parts);\n          this.opcode('pushConcatHook', this.morphNum);\n        }\n\n        this.opcode('pushLiteral', name);\n      }\n\n      var morphNum = this.morphNum++;\n      var start = this.currentDOMChildIndex;\n      var end = this.currentDOMChildIndex;\n      this.morphs.push([morphNum, this.paths.slice(), start, end, true]);\n\n      this.opcode('prepareObject', attrs.length);\n      this.opcode('pushLiteral', component.tag);\n      this.opcode('printComponentHook', this.templateId++, blockParams.length);\n    };\n\n    HydrationOpcodeCompiler.prototype.attribute = function(attr) {\n      var value = attr.value;\n      var escaped = true;\n      var namespace = getAttrNamespace(attr.name);\n\n      // TODO: Introduce context specific AST nodes to avoid switching here.\n      if (value.type === 'TextNode') {\n        return;\n      } else if (value.type === 'MustacheStatement') {\n        escaped = value.escaped;\n        this.accept(unwrapMustache(value));\n      } else if (value.type === 'ConcatStatement') {\n        prepareParams(this, value.parts);\n        this.opcode('pushConcatHook', this.morphNum);\n      }\n\n      this.opcode('pushLiteral', attr.name);\n\n      var attrMorphNum = this.morphNum++;\n\n      if (this.element !== null) {\n        shareElement(this);\n      }\n\n      this.opcode('createAttrMorph', attrMorphNum, this.elementNum, attr.name, escaped, namespace);\n      this.opcode('printAttributeHook');\n    };\n\n    HydrationOpcodeCompiler.prototype.elementHelper = function(sexpr) {\n      prepareSexpr(this, sexpr);\n\n      // If we have a helper in a node, and this element has not been cached, cache it\n      if (this.element !== null) {\n        shareElement(this);\n      }\n\n      publishElementMorph(this);\n      this.opcode('printElementHook');\n    };\n\n    HydrationOpcodeCompiler.prototype.pushMorphPlaceholderNode = function(childIndex, childCount) {\n      if (this.paths.length === 0) {\n        if (childIndex === 0) {\n          this.opcode('openBoundary');\n        }\n        if (childIndex === childCount - 1) {\n          this.opcode('closeBoundary');\n        }\n      }\n      this.comment();\n    };\n\n    HydrationOpcodeCompiler.prototype.SubExpression = function(sexpr) {\n      prepareSexpr(this, sexpr);\n      this.opcode('pushSexprHook');\n    };\n\n    HydrationOpcodeCompiler.prototype.PathExpression = function(path) {\n      this.opcode('pushGetHook', path.original);\n    };\n\n    HydrationOpcodeCompiler.prototype.StringLiteral = function(node) {\n      this.opcode('pushLiteral', node.value);\n    };\n\n    HydrationOpcodeCompiler.prototype.BooleanLiteral = function(node) {\n      this.opcode('pushLiteral', node.value);\n    };\n\n    HydrationOpcodeCompiler.prototype.NumberLiteral = function(node) {\n      this.opcode('pushLiteral', node.value);\n    };\n\n    function preparePath(compiler, path) {\n      compiler.opcode('pushLiteral', path.original);\n    }\n\n    function prepareParams(compiler, params) {\n      for (var i = params.length - 1; i >= 0; i--) {\n        var param = params[i];\n        compiler[param.type](param);\n      }\n\n      compiler.opcode('prepareArray', params.length);\n    }\n\n    function prepareHash(compiler, hash) {\n      var pairs = hash.pairs;\n\n      for (var i = pairs.length - 1; i >= 0; i--) {\n        var key = pairs[i].key;\n        var value = pairs[i].value;\n\n        compiler[value.type](value);\n        compiler.opcode('pushLiteral', key);\n      }\n\n      compiler.opcode('prepareObject', pairs.length);\n    }\n\n    function prepareSexpr(compiler, sexpr) {\n      prepareHash(compiler, sexpr.hash);\n      prepareParams(compiler, sexpr.params);\n      preparePath(compiler, sexpr.path);\n    }\n\n    function shareElement(compiler) {\n      compiler.opcode('shareElement', ++compiler.elementNum);\n      compiler.element = null; // Set element to null so we don't cache it twice\n    }\n\n    function publishElementMorph(compiler) {\n      var morphNum = compiler.morphNum++;\n      compiler.opcode('createElementMorph', morphNum, compiler.elementNum);\n    }\n\n    function distributeMorphs(morphs, opcodes) {\n      if (morphs.length === 0) {\n        return;\n      }\n\n      // Splice morphs after the most recent shareParent/consumeParent.\n      var o;\n      for (o = opcodes.length - 1; o >= 0; --o) {\n        var opcode = opcodes[o][0];\n        if (opcode === 'shareElement' || opcode === 'consumeParent'  || opcode === 'popParent') {\n          break;\n        }\n      }\n\n      var spliceArgs = [o + 1, 0];\n      for (var i = 0; i < morphs.length; ++i) {\n        spliceArgs.push(['createMorph', morphs[i].slice()]);\n      }\n      opcodes.splice.apply(opcodes, spliceArgs);\n      morphs.length = 0;\n    }\n  });\ndefine(\"htmlbars-compiler/template-compiler\",\n  [\"./fragment-opcode-compiler\",\"./fragment-javascript-compiler\",\"./hydration-opcode-compiler\",\"./hydration-javascript-compiler\",\"./template-visitor\",\"./utils\",\"../htmlbars-util/quoting\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __dependency7__, __exports__) {\n    \"use strict\";\n    var FragmentOpcodeCompiler = __dependency1__[\"default\"];\n    var FragmentJavaScriptCompiler = __dependency2__[\"default\"];\n    var HydrationOpcodeCompiler = __dependency3__[\"default\"];\n    var HydrationJavaScriptCompiler = __dependency4__[\"default\"];\n    var TemplateVisitor = __dependency5__[\"default\"];\n    var processOpcodes = __dependency6__.processOpcodes;\n    var repeat = __dependency7__.repeat;\n\n    function TemplateCompiler(options) {\n      this.options = options || {};\n      this.revision = this.options.revision || \"HTMLBars@0.11.1.ff09ea02\";\n      this.fragmentOpcodeCompiler = new FragmentOpcodeCompiler();\n      this.fragmentCompiler = new FragmentJavaScriptCompiler();\n      this.hydrationOpcodeCompiler = new HydrationOpcodeCompiler();\n      this.hydrationCompiler = new HydrationJavaScriptCompiler();\n      this.templates = [];\n      this.childTemplates = [];\n    }\n\n    __exports__[\"default\"] = TemplateCompiler;\n\n    var dynamicNodes = {\n      mustache: true,\n      block: true,\n      component: true\n    };\n\n    TemplateCompiler.prototype.compile = function(ast) {\n      var templateVisitor = new TemplateVisitor();\n      templateVisitor.visit(ast);\n\n      var normalizedActions = [];\n      var actions = templateVisitor.actions;\n\n      for (var i=0, l=actions.length - 1; i<l; i++) {\n        var action = actions[i];\n        var nextAction = actions[i + 1];\n\n        normalizedActions.push(action);\n\n        if (action[0] === \"startProgram\" && nextAction[0] in dynamicNodes) {\n          normalizedActions.push(['insertBoundary', [true]]);\n        }\n\n        if (nextAction[0] === \"endProgram\" && action[0] in dynamicNodes) {\n          normalizedActions.push(['insertBoundary', [false]]);\n        }\n      }\n\n      normalizedActions.push(actions[actions.length - 1]);\n\n      processOpcodes(this, normalizedActions);\n\n      return this.templates.pop();\n    };\n\n    TemplateCompiler.prototype.startProgram = function(program, childTemplateCount, blankChildTextNodes) {\n      this.fragmentOpcodeCompiler.startProgram(program, childTemplateCount, blankChildTextNodes);\n      this.hydrationOpcodeCompiler.startProgram(program, childTemplateCount, blankChildTextNodes);\n\n      this.childTemplates.length = 0;\n      while(childTemplateCount--) {\n        this.childTemplates.push(this.templates.pop());\n      }\n    };\n\n    TemplateCompiler.prototype.insertBoundary = function(first) {\n      this.hydrationOpcodeCompiler.insertBoundary(first);\n    };\n\n    TemplateCompiler.prototype.getChildTemplateVars = function(indent) {\n      var vars = '';\n      if (this.childTemplates) {\n        for (var i = 0; i < this.childTemplates.length; i++) {\n          vars += indent + 'var child' + i + ' = ' + this.childTemplates[i] + ';\\n';\n        }\n      }\n      return vars;\n    };\n\n    TemplateCompiler.prototype.getHydrationHooks = function(indent, hooks) {\n      var hookVars = [];\n      for (var hook in hooks) {\n        hookVars.push(hook + ' = hooks.' + hook);\n      }\n\n      if (hookVars.length > 0) {\n        return indent + 'var hooks = env.hooks, ' + hookVars.join(', ') + ';\\n';\n      } else {\n        return '';\n      }\n    };\n\n    TemplateCompiler.prototype.endProgram = function(program, programDepth) {\n      this.fragmentOpcodeCompiler.endProgram(program);\n      this.hydrationOpcodeCompiler.endProgram(program);\n\n      var indent = repeat(\"  \", programDepth);\n      var options = {\n        indent: indent + \"    \"\n      };\n\n      // function build(dom) { return fragment; }\n      var fragmentProgram = this.fragmentCompiler.compile(\n        this.fragmentOpcodeCompiler.opcodes,\n        options\n      );\n\n      // function hydrate(fragment) { return mustaches; }\n      var hydrationPrograms = this.hydrationCompiler.compile(\n        this.hydrationOpcodeCompiler.opcodes,\n        options\n      );\n\n      var blockParams = program.blockParams || [];\n\n      var templateSignature = 'context, rootNode, env, options';\n      if (blockParams.length > 0) {\n        templateSignature += ', blockArguments';\n      }\n\n      var statements = hydrationPrograms.statements.map(function(s) {\n        return indent+'      '+JSON.stringify(s);\n      }).join(\",\\n\");\n\n      var locals = JSON.stringify(hydrationPrograms.locals);\n\n      var templates = this.childTemplates.map(function(_, index) {\n        return 'child' + index;\n      }).join(', ');\n\n      var template =\n        '(function() {\\n' +\n        this.getChildTemplateVars(indent + '  ') +\n        indent+'  return {\\n' +\n        indent+'    isHTMLBars: true,\\n' +\n        indent+'    revision: \"' + this.revision + '\",\\n' +\n        indent+'    arity: ' + blockParams.length + ',\\n' +\n        indent+'    cachedFragment: null,\\n' +\n        indent+'    hasRendered: false,\\n' +\n        indent+'    buildFragment: ' + fragmentProgram + ',\\n' +\n        indent+'    buildRenderNodes: ' + hydrationPrograms.createMorphsProgram + ',\\n' +\n        indent+'    statements: [\\n' + statements + '\\n' +\n        indent+'    ],\\n' +\n        indent+'    locals: ' + locals + ',\\n' +\n        indent+'    templates: [' + templates + ']\\n' +\n        indent+'  };\\n' +\n        indent+'}())';\n\n      this.templates.push(template);\n    };\n\n    TemplateCompiler.prototype.openElement = function(element, i, l, r, c, b) {\n      this.fragmentOpcodeCompiler.openElement(element, i, l, r, c, b);\n      this.hydrationOpcodeCompiler.openElement(element, i, l, r, c, b);\n    };\n\n    TemplateCompiler.prototype.closeElement = function(element, i, l, r) {\n      this.fragmentOpcodeCompiler.closeElement(element, i, l, r);\n      this.hydrationOpcodeCompiler.closeElement(element, i, l, r);\n    };\n\n    TemplateCompiler.prototype.component = function(component, i, l, s) {\n      this.fragmentOpcodeCompiler.component(component, i, l, s);\n      this.hydrationOpcodeCompiler.component(component, i, l, s);\n    };\n\n    TemplateCompiler.prototype.block = function(block, i, l, s) {\n      this.fragmentOpcodeCompiler.block(block, i, l, s);\n      this.hydrationOpcodeCompiler.block(block, i, l, s);\n    };\n\n    TemplateCompiler.prototype.text = function(string, i, l, r) {\n      this.fragmentOpcodeCompiler.text(string, i, l, r);\n      this.hydrationOpcodeCompiler.text(string, i, l, r);\n    };\n\n    TemplateCompiler.prototype.comment = function(string, i, l, r) {\n      this.fragmentOpcodeCompiler.comment(string, i, l, r);\n      this.hydrationOpcodeCompiler.comment(string, i, l, r);\n    };\n\n    TemplateCompiler.prototype.mustache = function (mustache, i, l, s) {\n      this.fragmentOpcodeCompiler.mustache(mustache, i, l, s);\n      this.hydrationOpcodeCompiler.mustache(mustache, i, l, s);\n    };\n\n    TemplateCompiler.prototype.setNamespace = function(namespace) {\n      this.fragmentOpcodeCompiler.setNamespace(namespace);\n    };\n  });\ndefine(\"htmlbars-compiler/template-visitor\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var push = Array.prototype.push;\n\n    function Frame() {\n      this.parentNode = null;\n      this.children = null;\n      this.childIndex = null;\n      this.childCount = null;\n      this.childTemplateCount = 0;\n      this.mustacheCount = 0;\n      this.actions = [];\n    }\n\n    /**\n     * Takes in an AST and outputs a list of actions to be consumed\n     * by a compiler. For example, the template\n     *\n     *     foo{{bar}}<div>baz</div>\n     *\n     * produces the actions\n     *\n     *     [['startProgram', [programNode, 0]],\n     *      ['text', [textNode, 0, 3]],\n     *      ['mustache', [mustacheNode, 1, 3]],\n     *      ['openElement', [elementNode, 2, 3, 0]],\n     *      ['text', [textNode, 0, 1]],\n     *      ['closeElement', [elementNode, 2, 3],\n     *      ['endProgram', [programNode]]]\n     *\n     * This visitor walks the AST depth first and backwards. As\n     * a result the bottom-most child template will appear at the\n     * top of the actions list whereas the root template will appear\n     * at the bottom of the list. For example,\n     *\n     *     <div>{{#if}}foo{{else}}bar<b></b>{{/if}}</div>\n     *\n     * produces the actions\n     *\n     *     [['startProgram', [programNode, 0]],\n     *      ['text', [textNode, 0, 2, 0]],\n     *      ['openElement', [elementNode, 1, 2, 0]],\n     *      ['closeElement', [elementNode, 1, 2]],\n     *      ['endProgram', [programNode]],\n     *      ['startProgram', [programNode, 0]],\n     *      ['text', [textNode, 0, 1]],\n     *      ['endProgram', [programNode]],\n     *      ['startProgram', [programNode, 2]],\n     *      ['openElement', [elementNode, 0, 1, 1]],\n     *      ['block', [blockNode, 0, 1]],\n     *      ['closeElement', [elementNode, 0, 1]],\n     *      ['endProgram', [programNode]]]\n     *\n     * The state of the traversal is maintained by a stack of frames.\n     * Whenever a node with children is entered (either a ProgramNode\n     * or an ElementNode) a frame is pushed onto the stack. The frame\n     * contains information about the state of the traversal of that\n     * node. For example,\n     *\n     *   - index of the current child node being visited\n     *   - the number of mustaches contained within its child nodes\n     *   - the list of actions generated by its child nodes\n     */\n\n    function TemplateVisitor() {\n      this.frameStack = [];\n      this.actions = [];\n      this.programDepth = -1;\n    }\n\n    // Traversal methods\n\n    TemplateVisitor.prototype.visit = function(node) {\n      this[node.type](node);\n    };\n\n    TemplateVisitor.prototype.Program = function(program) {\n      this.programDepth++;\n\n      var parentFrame = this.getCurrentFrame();\n      var programFrame = this.pushFrame();\n\n      programFrame.parentNode = program;\n      programFrame.children = program.body;\n      programFrame.childCount = program.body.length;\n      programFrame.blankChildTextNodes = [];\n      programFrame.actions.push(['endProgram', [program, this.programDepth]]);\n\n      for (var i = program.body.length - 1; i >= 0; i--) {\n        programFrame.childIndex = i;\n        this.visit(program.body[i]);\n      }\n\n      programFrame.actions.push(['startProgram', [\n        program, programFrame.childTemplateCount,\n        programFrame.blankChildTextNodes.reverse()\n      ]]);\n      this.popFrame();\n\n      this.programDepth--;\n\n      // Push the completed template into the global actions list\n      if (parentFrame) { parentFrame.childTemplateCount++; }\n      push.apply(this.actions, programFrame.actions.reverse());\n    };\n\n    TemplateVisitor.prototype.ElementNode = function(element) {\n      var parentFrame = this.getCurrentFrame();\n      var elementFrame = this.pushFrame();\n\n      elementFrame.parentNode = element;\n      elementFrame.children = element.children;\n      elementFrame.childCount = element.children.length;\n      elementFrame.mustacheCount += element.helpers.length;\n      elementFrame.blankChildTextNodes = [];\n\n      var actionArgs = [\n        element,\n        parentFrame.childIndex,\n        parentFrame.childCount\n      ];\n\n      elementFrame.actions.push(['closeElement', actionArgs]);\n\n      for (var i = element.attributes.length - 1; i >= 0; i--) {\n        this.visit(element.attributes[i]);\n      }\n\n      for (i = element.children.length - 1; i >= 0; i--) {\n        elementFrame.childIndex = i;\n        this.visit(element.children[i]);\n      }\n\n      elementFrame.actions.push(['openElement', actionArgs.concat([\n        elementFrame.mustacheCount, elementFrame.blankChildTextNodes.reverse() ])]);\n      this.popFrame();\n\n      // Propagate the element's frame state to the parent frame\n      if (elementFrame.mustacheCount > 0) { parentFrame.mustacheCount++; }\n      parentFrame.childTemplateCount += elementFrame.childTemplateCount;\n      push.apply(parentFrame.actions, elementFrame.actions);\n    };\n\n    TemplateVisitor.prototype.AttrNode = function(attr) {\n      if (attr.value.type !== 'TextNode') {\n        this.getCurrentFrame().mustacheCount++;\n      }\n    };\n\n    TemplateVisitor.prototype.TextNode = function(text) {\n      var frame = this.getCurrentFrame();\n      if (text.chars === '') {\n        frame.blankChildTextNodes.push(domIndexOf(frame.children, text));\n      }\n      frame.actions.push(['text', [text, frame.childIndex, frame.childCount]]);\n    };\n\n    TemplateVisitor.prototype.BlockStatement = function(node) {\n      var frame = this.getCurrentFrame();\n\n      frame.mustacheCount++;\n      frame.actions.push(['block', [node, frame.childIndex, frame.childCount]]);\n\n      if (node.inverse) { this.visit(node.inverse); }\n      if (node.program) { this.visit(node.program); }\n    };\n\n    TemplateVisitor.prototype.ComponentNode = function(node) {\n      var frame = this.getCurrentFrame();\n\n      frame.mustacheCount++;\n      frame.actions.push(['component', [node, frame.childIndex, frame.childCount]]);\n\n      if (node.program) { this.visit(node.program); }\n    };\n\n\n    TemplateVisitor.prototype.PartialStatement = function(node) {\n      var frame = this.getCurrentFrame();\n      frame.mustacheCount++;\n      frame.actions.push(['mustache', [node, frame.childIndex, frame.childCount]]);\n    };\n\n    TemplateVisitor.prototype.CommentStatement = function(text) {\n      var frame = this.getCurrentFrame();\n      frame.actions.push(['comment', [text, frame.childIndex, frame.childCount]]);\n    };\n\n    TemplateVisitor.prototype.MustacheStatement = function(mustache) {\n      var frame = this.getCurrentFrame();\n      frame.mustacheCount++;\n      frame.actions.push(['mustache', [mustache, frame.childIndex, frame.childCount]]);\n    };\n\n    // Frame helpers\n\n    TemplateVisitor.prototype.getCurrentFrame = function() {\n      return this.frameStack[this.frameStack.length - 1];\n    };\n\n    TemplateVisitor.prototype.pushFrame = function() {\n      var frame = new Frame();\n      this.frameStack.push(frame);\n      return frame;\n    };\n\n    TemplateVisitor.prototype.popFrame = function() {\n      return this.frameStack.pop();\n    };\n\n    __exports__[\"default\"] = TemplateVisitor;\n\n\n    // Returns the index of `domNode` in the `nodes` array, skipping\n    // over any nodes which do not represent DOM nodes.\n    function domIndexOf(nodes, domNode) {\n      var index = -1;\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n\n        if (node.type !== 'TextNode' && node.type !== 'ElementNode') {\n          continue;\n        } else {\n          index++;\n        }\n\n        if (node === domNode) {\n          return index;\n        }\n      }\n\n      return -1;\n    }\n  });\ndefine(\"htmlbars-compiler/utils\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function processOpcodes(compiler, opcodes) {\n      for (var i=0, l=opcodes.length; i<l; i++) {\n        var method = opcodes[i][0];\n        var params = opcodes[i][1];\n        if (params) {\n          compiler[method].apply(compiler, params);\n        } else {\n          compiler[method].call(compiler);\n        }\n      }\n    }\n\n    __exports__.processOpcodes = processOpcodes;\n  });\ndefine(\"htmlbars-runtime\",\n  [\"htmlbars-runtime/hooks\",\"htmlbars-runtime/render\",\"../htmlbars-util/morph-utils\",\"htmlbars-runtime/expression-visitor\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var hooks = __dependency1__[\"default\"];\n    var render = __dependency2__[\"default\"];\n    var manualElement = __dependency2__.manualElement;\n    var visitChildren = __dependency3__.visitChildren;\n    var validateChildMorphs = __dependency4__.validateChildMorphs;\n    var hostBlock = __dependency1__.hostBlock;\n    var continueBlock = __dependency1__.continueBlock;\n    var hostYieldWithShadowTemplate = __dependency1__.hostYieldWithShadowTemplate;\n\n\n    var internal = {\n      manualElement: manualElement,\n      hostBlock: hostBlock,\n      continueBlock: continueBlock,\n      hostYieldWithShadowTemplate: hostYieldWithShadowTemplate,\n      visitChildren: visitChildren,\n      validateChildMorphs: validateChildMorphs\n    };\n\n    __exports__.hooks = hooks;\n    __exports__.render = render;\n    __exports__.internal = internal;\n  });\ndefine(\"htmlbars-runtime/expression-visitor\",\n  [\"../htmlbars-util/object-utils\",\"../htmlbars-util/morph-utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var merge = __dependency1__.merge;\n    var createObject = __dependency1__.createObject;\n    var validateChildMorphs = __dependency2__.validateChildMorphs;\n    var linkParams = __dependency2__.linkParams;\n\n    /**\n      Node classification:\n\n      # Primary Statement Nodes:\n\n      These nodes are responsible for a render node that represents a morph-range.\n\n      * block\n      * inline\n      * content\n      * element\n      * component\n\n      # Leaf Statement Nodes:\n\n      This node is responsible for a render node that represents a morph-attr.\n\n      * attribute\n\n      # Expression Nodes:\n\n      These nodes are not directly responsible for any part of the DOM, but are\n      eventually passed to a Statement Node.\n\n      * get\n      * subexpr\n      * concat\n    */\n\n    var base = {\n      acceptExpression: function(node, morph, env, scope) {\n        var ret = { value: null };\n\n        // Primitive literals are unambiguously non-array representations of\n        // themselves.\n        if (typeof node !== 'object') {\n          ret.value = node;\n          return ret;\n        }\n\n        switch(node[0]) {\n          case 'get': ret.value = this.get(node, morph, env, scope); break;\n          case 'subexpr': ret.value = this.subexpr(node, morph, env, scope); break;\n          case 'concat': ret.value = this.concat(node, morph, env, scope); break;\n        }\n\n        return ret;\n      },\n\n      acceptParamsAndHash: function(env, scope, morph, path, params, hash) {\n        params = params && this.acceptParams(params, morph, env, scope);\n        hash = hash && this.acceptHash(hash, morph, env, scope);\n\n        linkParams(env, scope, morph, path, params, hash);\n        return [params, hash];\n      },\n\n      acceptParams: function(nodes, morph, env, scope) {\n        if (morph.linkedParams) {\n          return morph.linkedParams.params;\n        }\n\n        var arr = new Array(nodes.length);\n\n        for (var i=0, l=nodes.length; i<l; i++) {\n          arr[i] =  this.acceptExpression(nodes[i], morph, env, scope, null, null).value;\n        }\n\n        return arr;\n      },\n\n      acceptHash: function(pairs, morph, env, scope) {\n        if (morph.linkedParams) {\n          return morph.linkedParams.hash;\n        }\n\n        var object = {};\n\n        for (var i=0, l=pairs.length; i<l; i += 2) {\n          object[pairs[i]] = this.acceptExpression(pairs[i+1], morph, env, scope, null, null).value;\n        }\n\n        return object;\n      },\n\n      // [ 'get', path ]\n      get: function(node, morph, env, scope) {\n        return env.hooks.get(env, scope, node[1]);\n      },\n\n      // [ 'subexpr', path, params, hash ]\n      subexpr: function(node, morph, env, scope) {\n        var path = node[1], params = node[2], hash = node[3];\n        return env.hooks.subexpr(env, scope, path,\n                                 this.acceptParams(params, morph, env, scope),\n                                 this.acceptHash(hash, morph, env, scope));\n      },\n\n      // [ 'concat', parts ]\n      concat: function(node, morph, env, scope) {\n        return env.hooks.concat(env, this.acceptParams(node[1], morph, env, scope));\n      }\n    };\n\n    var AlwaysDirtyVisitor = merge(createObject(base), {\n      // [ 'block', path, params, hash, templateId, inverseId ]\n      block: function(node, morph, env, scope, template, visitor) {\n        var path = node[1], params = node[2], hash = node[3], templateId = node[4], inverseId = node[5];\n        var paramsAndHash = this.acceptParamsAndHash(env, scope, morph, path, params, hash);\n\n        morph.isDirty = morph.isSubtreeDirty = false;\n        env.hooks.block(morph, env, scope, path, paramsAndHash[0], paramsAndHash[1],\n                               templateId === null ? null : template.templates[templateId],\n                               inverseId === null ? null : template.templates[inverseId],\n                               visitor);\n      },\n\n      // [ 'inline', path, params, hash ]\n      inline: function(node, morph, env, scope, visitor) {\n        var path = node[1], params = node[2], hash = node[3];\n        var paramsAndHash = this.acceptParamsAndHash(env, scope, morph, path, params, hash);\n\n        morph.isDirty = morph.isSubtreeDirty = false;\n        env.hooks.inline(morph, env, scope, path, paramsAndHash[0], paramsAndHash[1], visitor);\n      },\n\n      // [ 'content', path ]\n      content: function(node, morph, env, scope, visitor) {\n        var path = node[1];\n\n        morph.isDirty = morph.isSubtreeDirty = false;\n\n        if (isHelper(env, scope, path)) {\n          env.hooks.inline(morph, env, scope, path, [], {}, visitor);\n          return;\n        }\n\n        var params;\n        if (morph.linkedParams) {\n          params = morph.linkedParams.params;\n        } else {\n          params = [env.hooks.get(env, scope, path)];\n        }\n\n        linkParams(env, scope, morph, '@range', params, null);\n        env.hooks.range(morph, env, scope, path, params[0], visitor);\n      },\n\n      // [ 'element', path, params, hash ]\n      element: function(node, morph, env, scope, visitor) {\n        var path = node[1], params = node[2], hash = node[3];\n        var paramsAndHash = this.acceptParamsAndHash(env, scope, morph, path, params, hash);\n\n        morph.isDirty = morph.isSubtreeDirty = false;\n        env.hooks.element(morph, env, scope, path, paramsAndHash[0], paramsAndHash[1], visitor);\n      },\n\n      // [ 'attribute', name, value ]\n      attribute: function(node, morph, env, scope) {\n        var name = node[1], value = node[2];\n        var paramsAndHash = this.acceptParamsAndHash(env, scope, morph, '@attribute', [value], null);\n\n        morph.isDirty = morph.isSubtreeDirty = false;\n        env.hooks.attribute(morph, env, scope, name, paramsAndHash[0][0]);\n      },\n\n      // [ 'component', path, attrs, templateId ]\n      component: function(node, morph, env, scope, template, visitor) {\n        var path = node[1], attrs = node[2], templateId = node[3];\n        var paramsAndHash = this.acceptParamsAndHash(env, scope, morph, path, null, attrs);\n\n        morph.isDirty = morph.isSubtreeDirty = false;\n        env.hooks.component(morph, env, scope, path, paramsAndHash[1],\n                            template.templates[templateId], visitor);\n      }\n    });\n    __exports__.AlwaysDirtyVisitor = AlwaysDirtyVisitor;\n    __exports__[\"default\"] = merge(createObject(base), {\n      // [ 'block', path, params, hash, templateId, inverseId ]\n      block: function(node, morph, env, scope, template, visitor) {\n        dirtyCheck(env, morph, visitor, function(visitor) {\n          AlwaysDirtyVisitor.block(node, morph, env, scope, template, visitor);\n        });\n      },\n\n      // [ 'inline', path, params, hash ]\n      inline: function(node, morph, env, scope, visitor) {\n        dirtyCheck(env, morph, visitor, function(visitor) {\n          AlwaysDirtyVisitor.inline(node, morph, env, scope, visitor);\n        });\n      },\n\n      // [ 'content', path ]\n      content: function(node, morph, env, scope, visitor) {\n        dirtyCheck(env, morph, visitor, function(visitor) {\n          AlwaysDirtyVisitor.content(node, morph, env, scope, visitor);\n        });\n      },\n\n      // [ 'element', path, params, hash ]\n      element: function(node, morph, env, scope, template, visitor) {\n        dirtyCheck(env, morph, visitor, function(visitor) {\n          AlwaysDirtyVisitor.element(node, morph, env, scope, template, visitor);\n        });\n      },\n\n      // [ 'attribute', name, value ]\n      attribute: function(node, morph, env, scope, template) {\n        dirtyCheck(env, morph, null, function() {\n          AlwaysDirtyVisitor.attribute(node, morph, env, scope, template);\n        });\n      },\n\n      // [ 'component', path, attrs, templateId ]\n      component: function(node, morph, env, scope, template, visitor) {\n        dirtyCheck(env, morph, visitor, function(visitor) {\n          AlwaysDirtyVisitor.component(node, morph, env, scope, template, visitor);\n        });\n      },\n    });\n\n    function dirtyCheck(env, morph, visitor, callback) {\n      var isDirty = morph.isDirty;\n      var isSubtreeDirty = morph.isSubtreeDirty;\n\n      if (isSubtreeDirty) {\n        visitor = AlwaysDirtyVisitor;\n      }\n\n      if (isDirty || isSubtreeDirty) {\n        callback(visitor);\n      } else {\n        validateChildMorphs(env, morph, visitor);\n      }\n    }\n\n    function isHelper(env, scope, path) {\n      return (env.hooks.keywords[path] !== undefined) || env.hooks.hasHelper(env, scope, path);\n    }\n  });\ndefine(\"htmlbars-runtime/hooks\",\n  [\"./render\",\"../morph-range/morph-list\",\"../htmlbars-util/object-utils\",\"../htmlbars-util/morph-utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var render = __dependency1__[\"default\"];\n    var MorphList = __dependency2__[\"default\"];\n    var createChildMorph = __dependency1__.createChildMorph;\n    var createObject = __dependency3__.createObject;\n    var visitChildren = __dependency4__.visitChildren;\n    var validateChildMorphs = __dependency4__.validateChildMorphs;\n\n    /**\n      HTMLBars delegates the runtime behavior of a template to\n      hooks provided by the host environment. These hooks explain\n      the lexical environment of a Handlebars template, the internal\n      representation of references, and the interaction between an\n      HTMLBars template and the DOM it is managing.\n\n      While HTMLBars host hooks have access to all of this internal\n      machinery, templates and helpers have access to the abstraction\n      provided by the host hooks.\n\n      ## The Lexical Environment\n\n      The default lexical environment of an HTMLBars template includes:\n\n      * Any local variables, provided by *block arguments*\n      * The current value of `self`\n\n      ## Simple Nesting\n\n      Let's look at a simple template with a nested block:\n\n      ```hbs\n      <h1>{{title}}</h1>\n\n      {{#if author}}\n        <p class=\"byline\">{{author}}</p>\n      {{/if}}\n      ```\n\n      In this case, the lexical environment at the top-level of the\n      template does not change inside of the `if` block. This is\n      achieved via an implementation of `if` that looks like this:\n\n      ```js\n      registerHelper('if', function(params) {\n        if (!!params[0]) {\n          return this.yield();\n        }\n      });\n      ```\n\n      A call to `this.yield` invokes the child template using the\n      current lexical environment.\n\n      ## Block Arguments\n\n      It is possible for nested blocks to introduce new local\n      variables:\n\n      ```hbs\n      {{#count-calls as |i|}}\n      <h1>{{title}}</h1>\n      <p>Called {{i}} times</p>\n      {{/count}}\n      ```\n\n      In this example, the child block inherits its surrounding\n      lexical environment, but augments it with a single new\n      variable binding.\n\n      The implementation of `count-calls` supplies the value of\n      `i`, but does not otherwise alter the environment:\n\n      ```js\n      var count = 0;\n      registerHelper('count-calls', function() {\n        return this.yield([ ++count ]);\n      });\n      ```\n    */\n\n    function wrap(template) {\n      if (template === null) { return null;  }\n\n      return {\n        isHTMLBars: true,\n        arity: template.arity,\n        revision: template.revision,\n        raw: template,\n        render: function(self, env, options, blockArguments) {\n          var scope = env.hooks.createFreshScope();\n\n          options = options || {};\n          options.self = self;\n          options.blockArguments = blockArguments;\n\n          return render(template, env, scope, options);\n        }\n      };\n    }\n\n    __exports__.wrap = wrap;function wrapForHelper(template, env, scope, morph, renderState, visitor) {\n      if (template === null) {\n        return {\n          yieldIn: yieldInShadowTemplate(null, env, scope, morph, renderState, visitor)\n        };\n      }\n\n      var yieldArgs = yieldTemplate(template, env, scope, morph, renderState, visitor);\n\n      return {\n        arity: template.arity,\n        revision: template.revision,\n        yield: yieldArgs,\n        yieldItem: yieldItem(template, env, scope, morph, renderState, visitor),\n        yieldIn: yieldInShadowTemplate(template, env, scope, morph, renderState, visitor),\n\n        render: function(self, blockArguments) {\n          yieldArgs(blockArguments, self);\n        }\n      };\n    }\n\n    __exports__.wrapForHelper = wrapForHelper;function yieldTemplate(template, env, parentScope, morph, renderState, visitor) {\n      return function(blockArguments, self) {\n        renderState.clearMorph = null;\n        var scope = parentScope;\n\n        if (morph.lastYielded && isStableTemplate(template, morph.lastYielded)) {\n          return morph.lastResult.revalidateWith(env, undefined, self, blockArguments, visitor);\n        }\n\n        // Check to make sure that we actually **need** a new scope, and can't\n        // share the parent scope. Note that we need to move this check into\n        // a host hook, because the host's notion of scope may require a new\n        // scope in more cases than the ones we can determine statically.\n        if (self !== undefined || parentScope === null || template.arity) {\n          scope = env.hooks.createChildScope(parentScope);\n        }\n\n        morph.lastYielded = { self: self, template: template, shadowTemplate: null };\n\n        // Render the template that was selected by the helper\n        morph.lastResult = render(template, env, scope, { renderNode: morph, self: self, blockArguments: blockArguments });\n      };\n    }\n\n    function yieldItem(template, env, parentScope, morph, renderState, visitor) {\n      var currentMorph = null;\n      var morphList = morph.morphList;\n      if (morphList) {\n        currentMorph = morphList.firstChildMorph;\n        renderState.morphListStart = currentMorph;\n      }\n\n      return function(key, blockArguments) {\n        if (typeof key !== 'string') {\n          throw new Error(\"You must provide a string key when calling `yieldItem`; you provided \" + key);\n        }\n\n        var morphList, morphMap;\n\n        if (!morph.morphList) {\n          morph.morphList = new MorphList();\n          morph.morphMap = {};\n          morph.setMorphList(morph.morphList);\n        }\n\n        morphList = morph.morphList;\n        morphMap = morph.morphMap;\n\n        if (currentMorph && currentMorph.key === key) {\n          yieldTemplate(template, env, parentScope, currentMorph, renderState, visitor)(blockArguments);\n          currentMorph = currentMorph.nextMorph;\n        } else if (currentMorph && morphMap[key] !== undefined) {\n          var foundMorph = morphMap[key];\n          yieldTemplate(template, env, parentScope, foundMorph, renderState, visitor)(blockArguments);\n          morphList.insertBeforeMorph(foundMorph, currentMorph);\n        } else {\n          var childMorph = createChildMorph(env.dom, morph);\n          childMorph.key = key;\n          morphMap[key] = childMorph;\n          morphList.insertBeforeMorph(childMorph, currentMorph);\n          yieldTemplate(template, env, parentScope, childMorph, renderState, visitor)(blockArguments);\n        }\n\n        renderState.morphListStart = currentMorph;\n        renderState.clearMorph = null;\n      };\n    }\n\n    function isStableTemplate(template, lastYielded) {\n      return !lastYielded.shadowTemplate && template === lastYielded.template;\n    }\n\n    function yieldInShadowTemplate(template, env, parentScope, morph, renderState, visitor) {\n      var hostYield = hostYieldWithShadowTemplate(template, env, parentScope, morph, renderState, visitor);\n\n      return function(shadowTemplate, self) {\n        hostYield(shadowTemplate, env, self, []);\n      };\n    }\n\n    function hostYieldWithShadowTemplate(template, env, parentScope, morph, renderState, visitor) {\n      return function(shadowTemplate, env, self, blockArguments) {\n        renderState.clearMorph = null;\n\n        if (morph.lastYielded && isStableShadowRoot(template, shadowTemplate, morph.lastYielded)) {\n          return morph.lastResult.revalidateWith(env, undefined, self, blockArguments, visitor);\n        }\n\n        var shadowScope = env.hooks.createShadowScope(env, parentScope, renderState.shadowOptions);\n        env.hooks.bindBlock(env, shadowScope, blockToYield);\n\n        morph.lastYielded = { self: self, template: template, shadowTemplate: shadowTemplate };\n\n        // Render the shadow template with the block available\n        morph.lastResult = render(shadowTemplate.raw, env, shadowScope, { renderNode: morph, self: self, blockArguments: blockArguments });\n      };\n\n      function blockToYield(blockArguments, renderNode) {\n        if (renderNode.lastResult) {\n          renderNode.lastResult.revalidateWith(env, undefined, undefined, blockArguments, visitor);\n        } else {\n          var scope = parentScope;\n\n          // Since a yielded template shares a `self` with its original context,\n          // we only need to create a new scope if the template has block parameters\n          if (template.arity) {\n            scope = env.hooks.createChildScope(parentScope);\n          }\n\n          renderNode.lastResult = render(template, env, scope, { renderNode: renderNode, blockArguments: blockArguments });\n        }\n      }\n    }\n\n    __exports__.hostYieldWithShadowTemplate = hostYieldWithShadowTemplate;function isStableShadowRoot(template, shadowTemplate, lastYielded) {\n      return template === lastYielded.template && shadowTemplate === lastYielded.shadowTemplate;\n    }\n\n    function optionsFor(template, inverse, env, scope, morph, visitor) {\n      var renderState = { morphListStart: null, clearMorph: morph, shadowOptions: null };\n\n      return {\n        templates: {\n          template: wrapForHelper(template, env, scope, morph, renderState, visitor),\n          inverse: wrapForHelper(inverse, env, scope, morph, renderState, visitor)\n        },\n        renderState: renderState\n      };\n    }\n\n    function thisFor(options) {\n      return {\n        yield: options.template.yield,\n        yieldItem: options.template.yieldItem,\n        yieldIn: options.template.yieldIn\n      };\n    }\n\n    /**\n      Host Hook: createScope\n\n      @param {Scope?} parentScope\n      @return Scope\n\n      Corresponds to entering a new HTMLBars block.\n\n      This hook is invoked when a block is entered with\n      a new `self` or additional local variables.\n\n      When invoked for a top-level template, the\n      `parentScope` is `null`, and this hook should return\n      a fresh Scope.\n\n      When invoked for a child template, the `parentScope`\n      is the scope for the parent environment.\n\n      Note that the `Scope` is an opaque value that is\n      passed to other host hooks. For example, the `get`\n      hook uses the scope to retrieve a value for a given\n      scope and variable name.\n    */\n    function createScope(env, parentScope) {\n      if (parentScope) {\n        return env.hooks.createChildScope(parentScope);\n      } else {\n        return env.hooks.createFreshScope();\n      }\n    }\n\n    __exports__.createScope = createScope;function createFreshScope() {\n      // because `in` checks have unpredictable performance, keep a\n      // separate dictionary to track whether a local was bound.\n      // See `bindLocal` for more information.\n      return { self: null, block: null, locals: {}, localPresent: {} };\n    }\n\n    __exports__.createFreshScope = createFreshScope;/**\n      Host Hook: createShadowScope\n\n      @param {Scope?} parentScope\n      @return Scope\n\n      Corresponds to rendering a new template into an existing\n      render tree, but with a new top-level lexical scope. This\n      template is called the \"shadow root\".\n\n      If a shadow template invokes `{{yield}}`, it will render\n      the block provided to the shadow root in the original\n      lexical scope.\n\n      ```hbs\n      {{!-- post template --}}\n      <p>{{props.title}}</p>\n      {{yield}}\n\n      {{!-- blog template --}}\n      {{#post title=\"Hello world\"}}\n        <p>by {{byline}}</p>\n        <article>This is my first post</article>\n      {{/post}}\n\n      {{#post title=\"Goodbye world\"}}\n        <p>by {{byline}}</p>\n        <article>This is my last post</article>\n      {{/post}}\n      ```\n\n      ```js\n      helpers.post = function(params, hash, options) {\n        options.template.yieldIn(postTemplate, { props: hash });\n      };\n\n      blog.render({ byline: \"Yehuda Katz\" });\n      ```\n\n      Produces:\n\n      ```html\n      <p>Hello world</p>\n      <p>by Yehuda Katz</p>\n      <article>This is my first post</article>\n\n      <p>Goodbye world</p>\n      <p>by Yehuda Katz</p>\n      <article>This is my last post</article>\n      ```\n\n      In short, `yieldIn` creates a new top-level scope for the\n      provided template and renders it, making the original block\n      available to `{{yield}}` in that template.\n    */\n    function createShadowScope(env /*, shadowMorph, parentScope */) {\n      return env.hooks.createFreshScope();\n    }\n\n    __exports__.createShadowScope = createShadowScope;function createChildScope(parent) {\n      var scope = createObject(parent);\n      scope.locals = createObject(parent.locals);\n      return scope;\n    }\n\n    __exports__.createChildScope = createChildScope;/**\n      Host Hook: bindSelf\n\n      @param {Scope} scope\n      @param {any} self\n\n      Corresponds to entering a template.\n\n      This hook is invoked when the `self` value for a scope is ready to be bound.\n\n      The host must ensure that child scopes reflect the change to the `self` in\n      future calls to the `get` hook.\n    */\n    function bindSelf(env, scope, self) {\n      scope.self = self;\n    }\n\n    __exports__.bindSelf = bindSelf;/**\n      Host Hook: bindLocal\n\n      @param {Environment} env\n      @param {Scope} scope\n      @param {String} name\n      @param {any} value\n\n      Corresponds to entering a template with block arguments.\n\n      This hook is invoked when a local variable for a scope has been provided.\n\n      The host must ensure that child scopes reflect the change in future calls\n      to the `get` hook.\n    */\n    function bindLocal(env, scope, name, value) {\n      scope.localPresent[name] = true;\n      scope.locals[name] = value;\n    }\n\n    __exports__.bindLocal = bindLocal;/**\n      Host Hook: bindBlock\n\n      @param {Environment} env\n      @param {Scope} scope\n      @param {Function} block\n\n      Corresponds to entering a shadow template that was invoked by a block helper with\n      `yieldIn`.\n\n      This hook is invoked with an opaque block that will be passed along to the\n      shadow template, and inserted into the shadow template when `{{yield}}` is used.\n    */\n    function bindBlock(env, scope, block) {\n      scope.block = block;\n    }\n\n    __exports__.bindBlock = bindBlock;/**\n      Host Hook: block\n\n      @param {RenderNode} renderNode\n      @param {Environment} env\n      @param {Scope} scope\n      @param {String} path\n      @param {Array} params\n      @param {Object} hash\n      @param {Block} block\n      @param {Block} elseBlock\n\n      Corresponds to:\n\n      ```hbs\n      {{#helper param1 param2 key1=val1 key2=val2}}\n        {{!-- child template --}}\n      {{/helper}}\n      ```\n\n      This host hook is a workhorse of the system. It is invoked\n      whenever a block is encountered, and is responsible for\n      resolving the helper to call, and then invoke it.\n\n      The helper should be invoked with:\n\n      - `{Array} params`: the parameters passed to the helper\n        in the template.\n      - `{Object} hash`: an object containing the keys and values passed\n        in the hash position in the template.\n\n      The values in `params` and `hash` will already be resolved\n      through a previous call to the `get` host hook.\n\n      The helper should be invoked with a `this` value that is\n      an object with one field:\n\n      `{Function} yield`: when invoked, this function executes the\n      block with the current scope. It takes an optional array of\n      block parameters. If block parameters are supplied, HTMLBars\n      will invoke the `bindLocal` host hook to bind the supplied\n      values to the block arguments provided by the template.\n\n      In general, the default implementation of `block` should work\n      for most host environments. It delegates to other host hooks\n      where appropriate, and properly invokes the helper with the\n      appropriate arguments.\n    */\n    function block(morph, env, scope, path, params, hash, template, inverse, visitor) {\n      if (handleRedirect(morph, env, scope, path, params, hash, template, inverse, visitor)) {\n        return;\n      }\n\n      continueBlock(morph, env, scope, path, params, hash, template, inverse, visitor);\n    }\n\n    __exports__.block = block;function continueBlock(morph, env, scope, path, params, hash, template, inverse, visitor) {\n      hostBlock(morph, env, scope, template, inverse, null, visitor, function(options) {\n        var helper = env.hooks.lookupHelper(env, scope, path);\n        params = normalizeArray(env, params);\n        hash = normalizeObject(env, hash);\n        helper.call(thisFor(options.templates), params, hash, options.templates);\n      });\n    }\n\n    __exports__.continueBlock = continueBlock;function simpleHostBlock(morph, env, options, shadowOptions, visitor, callback) {\n      options.renderState.shadowOptions = shadowOptions;\n      callback(options);\n\n      var item = options.renderState.morphListStart;\n      var toClear = options.renderState.clearMorph;\n      var morphMap = morph.morphMap;\n\n      while (item) {\n        var next = item.nextMorph;\n        delete morphMap[item.key];\n        if (env.hooks.cleanup) { visitChildren([item], env.hooks.cleanup); }\n        item.destroy();\n        item = next;\n      }\n\n      if (toClear) {\n        clearMorph(toClear, env.hooks.cleanup);\n      }\n    }\n\n    __exports__.simpleHostBlock = simpleHostBlock;function hostBlock(morph, env, scope, template, inverse, shadowOptions, visitor, callback) {\n      var options = optionsFor(template, inverse, env, scope, morph, visitor);\n      options.renderState.shadowOptions = shadowOptions;\n      callback(options);\n\n      var item = options.renderState.morphListStart;\n      var toClear = options.renderState.clearMorph;\n      var morphMap = morph.morphMap;\n\n      while (item) {\n        var next = item.nextMorph;\n        delete morphMap[item.key];\n        if (env.hooks.cleanup) { visitChildren([item], env.hooks.cleanup); }\n        item.destroy();\n        item = next;\n      }\n\n      if (toClear) {\n        clearMorph(toClear, env.hooks.cleanup);\n      }\n    }\n\n    __exports__.hostBlock = hostBlock;function clearMorph(morph, cleanup) {\n      if (cleanup) {\n        visitChildren(morph.childNodes, cleanup);\n      }\n\n      // TODO: Deal with logical children that are not in the DOM tree\n      morph.clear();\n      morph.lastResult = null;\n      morph.lastYielded = null;\n      morph.childNodes = null;\n    }\n\n    function handleRedirect(morph, env, scope, path, params, hash, template, inverse, visitor) {\n      var redirect = env.hooks.classify(env, scope, path);\n      if (redirect) {\n        switch(redirect) {\n          case 'component': env.hooks.component(morph, env, scope, path, hash, template, visitor); break;\n          case 'inline': env.hooks.inline(morph, env, scope, path, params, hash, visitor); break;\n          case 'block': env.hooks.block(morph, env, scope, path, params, hash, template, inverse, visitor); break;\n          default: throw new Error(\"Internal HTMLBars redirection to \" + redirect + \" not supported\");\n        }\n        return true;\n      }\n\n      if (handleKeyword(path, morph, env, scope, params, hash, template, inverse, visitor)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function handleKeyword(path, morph, env, scope, params, hash, template, inverse, visitor) {\n      var keyword = env.hooks.keywords[path];\n      if (!keyword) { return false; }\n\n      if (typeof keyword === 'function') {\n        return keyword(morph, env, scope, params, hash, template, inverse, visitor);\n      }\n\n      if (keyword.willRender) {\n        keyword.willRender(morph, env);\n      }\n\n      if (keyword.setupState) {\n        keyword.setupState(morph.state, env, scope, params, hash);\n      }\n\n      if (keyword.updateEnv) {\n        env = keyword.updateEnv(morph.state, env, scope, params, hash);\n      }\n\n      var firstTime = !morph.lastResult;\n\n      if (keyword.isEmpty) {\n        var isEmpty = keyword.isEmpty(morph.state, env, scope, params, hash);\n\n        if (isEmpty) {\n          if (!firstTime) { clearMorph(morph, env.hooks.cleanup); }\n          return true;\n        }\n      }\n\n      if (firstTime) {\n        keyword.render(morph, env, scope, params, hash, template, inverse, visitor);\n        return true;\n      }\n\n      if (keyword.isStable) {\n        var isStable = keyword.isStable(morph.state, env, scope, params, hash);\n        if (isStable) {\n          if (keyword.rerender) {\n            var newEnv = keyword.rerender(morph, env, scope, params, hash, template, inverse, visitor);\n            env = newEnv || env;\n          }\n          validateChildMorphs(env, morph, visitor);\n          return true;\n        } else {\n          clearMorph(morph, env.hooks.cleanup);\n        }\n      }\n\n      if (keyword.render) {\n        keyword.render(morph, env, scope, params, hash, template, inverse, visitor);\n        return true;\n      }\n    }\n\n    function linkRenderNode(/* morph, scope, params, hash */) {\n      return;\n    }\n\n    __exports__.linkRenderNode = linkRenderNode;/**\n      Host Hook: inline\n\n      @param {RenderNode} renderNode\n      @param {Environment} env\n      @param {Scope} scope\n      @param {String} path\n      @param {Array} params\n      @param {Hash} hash\n\n      Corresponds to:\n\n      ```hbs\n      {{helper param1 param2 key1=val1 key2=val2}}\n      ```\n\n      This host hook is similar to the `block` host hook, but it\n      invokes helpers that do not supply an attached block.\n\n      Like the `block` hook, the helper should be invoked with:\n\n      - `{Array} params`: the parameters passed to the helper\n        in the template.\n      - `{Object} hash`: an object containing the keys and values passed\n        in the hash position in the template.\n\n      The values in `params` and `hash` will already be resolved\n      through a previous call to the `get` host hook.\n\n      In general, the default implementation of `inline` should work\n      for most host environments. It delegates to other host hooks\n      where appropriate, and properly invokes the helper with the\n      appropriate arguments.\n\n      The default implementation of `inline` also makes `partial`\n      a keyword. Instead of invoking a helper named `partial`,\n      it invokes the `partial` host hook.\n    */\n    function inline(morph, env, scope, path, params, hash, visitor) {\n      if (handleRedirect(morph, env, scope, path, params, hash, null, null, visitor)) {\n        return;\n      }\n\n      var value;\n      var options = optionsFor(null, null, env, scope, morph);\n\n      var helper = env.hooks.lookupHelper(env, scope, path);\n      params = normalizeArray(env, params);\n      hash = normalizeObject(env, hash);\n      value = helper.call(thisFor(options.templates), params, hash, options.templates);\n\n      if (morph.lastValue !== value) {\n        morph.setContent(value);\n      }\n\n      morph.lastValue = value;\n    }\n\n    __exports__.inline = inline;function normalizeArray(env, array) {\n      var out = new Array(array.length);\n\n      for (var i=0, l=array.length; i<l; i++) {\n        out[i] = env.hooks.getValue(array[i]);\n      }\n\n      return out;\n    }\n\n    function normalizeObject(env, object) {\n      var out = {};\n\n      for (var prop in object)  {\n        out[prop] = env.hooks.getValue(object[prop]);\n      }\n\n      return out;\n    }\n\n    function classify(/* env, scope, path */) {\n      return null;\n    }\n\n    __exports__.classify = classify;var keywords = {\n      partial: function(morph, env, scope, params) {\n        var value = env.hooks.partial(morph, env, scope, params[0]);\n        morph.setContent(value);\n        return true;\n      },\n\n      yield: function(morph, env, scope, params) {\n        // the current scope is provided purely for the creation of shadow\n        // scopes; it should not be provided to user code.\n        scope.block(params, morph, scope);\n        return true;\n      }\n    };\n    __exports__.keywords = keywords;\n    /**\n      Host Hook: partial\n\n      @param {RenderNode} renderNode\n      @param {Environment} env\n      @param {Scope} scope\n      @param {String} path\n\n      Corresponds to:\n\n      ```hbs\n      {{partial \"location\"}}\n      ```\n\n      This host hook is invoked by the default implementation of\n      the `inline` hook. This makes `partial` a keyword in an\n      HTMLBars environment using the default `inline` host hook.\n\n      It is implemented as a host hook so that it can retrieve\n      the named partial out of the `Environment`. Helpers, in\n      contrast, only have access to the values passed in to them,\n      and not to the ambient lexical environment.\n\n      The host hook should invoke the referenced partial with\n      the ambient `self`.\n    */\n    function partial(renderNode, env, scope, path) {\n      var template = env.partials[path];\n      return template.render(scope.self, env, {}).fragment;\n    }\n\n    __exports__.partial = partial;/**\n      Host hook: range\n\n      @param {RenderNode} renderNode\n      @param {Environment} env\n      @param {Scope} scope\n      @param {any} value\n\n      Corresponds to:\n\n      ```hbs\n      {{content}}\n      {{{unescaped}}}\n      ```\n\n      This hook is responsible for updating a render node\n      that represents a range of content with a value.\n    */\n    function range(morph, env, scope, path, value, visitor) {\n      if (handleRedirect(morph, env, scope, path, [value], {}, null, null, visitor)) {\n        return;\n      }\n\n      value = env.hooks.getValue(value);\n\n      if (morph.lastValue !== value) {\n        morph.setContent(value);\n      }\n\n      morph.lastValue = value;\n    }\n\n    __exports__.range = range;/**\n      Host hook: element\n\n      @param {RenderNode} renderNode\n      @param {Environment} env\n      @param {Scope} scope\n      @param {String} path\n      @param {Array} params\n      @param {Hash} hash\n\n      Corresponds to:\n\n      ```hbs\n      <div {{bind-attr foo=bar}}></div>\n      ```\n\n      This hook is responsible for invoking a helper that\n      modifies an element.\n\n      Its purpose is largely legacy support for awkward\n      idioms that became common when using the string-based\n      Handlebars engine.\n\n      Most of the uses of the `element` hook are expected\n      to be superseded by component syntax and the\n      `attribute` hook.\n    */\n    function element(morph, env, scope, path, params, hash /*, visitor */) {\n      var helper = lookupHelper(env, scope, path);\n      if (helper) {\n        params = normalizeArray(env, params);\n        hash = normalizeObject(env, hash);\n        helper(params, hash, { element: morph.element });\n      }\n    }\n\n    __exports__.element = element;/**\n      Host hook: attribute\n\n      @param {RenderNode} renderNode\n      @param {Environment} env\n      @param {String} name\n      @param {any} value\n\n      Corresponds to:\n\n      ```hbs\n      <div foo={{bar}}></div>\n      ```\n\n      This hook is responsible for updating a render node\n      that represents an element's attribute with a value.\n\n      It receives the name of the attribute as well as an\n      already-resolved value, and should update the render\n      node with the value if appropriate.\n    */\n    function attribute(morph, env, scope, name, value) {\n      value = env.hooks.getValue(value);\n\n      if (morph.lastValue !== value) {\n        morph.setContent(value);\n      }\n\n      morph.lastValue = value;\n    }\n\n    __exports__.attribute = attribute;function subexpr(env, scope, helperName, params, hash) {\n      var helper = lookupHelper(env, scope, helperName);\n      params = normalizeArray(env, params);\n      hash = normalizeObject(env, hash);\n      return helper(params, hash, {});\n    }\n\n    __exports__.subexpr = subexpr;/**\n      Host Hook: get\n\n      @param {Environment} env\n      @param {Scope} scope\n      @param {String} path\n\n      Corresponds to:\n\n      ```hbs\n      {{foo.bar}}\n        ^\n\n      {{helper foo.bar key=value}}\n               ^           ^\n      ```\n\n      This hook is the \"leaf\" hook of the system. It is used to\n      resolve a path relative to the current scope.\n    */\n    function get(env, scope, path) {\n      if (path === '') {\n        return scope.self;\n      }\n\n      var keys = path.split('.');\n      var value = env.hooks.getRoot(scope, keys[0])[0];\n\n      for (var i = 1; i < keys.length; i++) {\n        if (value) {\n          value = env.hooks.getChild(value, keys[i]);\n        } else {\n          break;\n        }\n      }\n\n      return value;\n    }\n\n    __exports__.get = get;function getRoot(scope, key) {\n      if (scope.localPresent[key]) {\n        return [scope.locals[key]];\n      } else {\n        return [scope.self[key]];\n      }\n    }\n\n    __exports__.getRoot = getRoot;function getChild(value, key) {\n      return value[key];\n    }\n\n    __exports__.getChild = getChild;function getValue(value) {\n      return value;\n    }\n\n    __exports__.getValue = getValue;function component(morph, env, scope, tagName, attrs, template, visitor) {\n      if (env.hooks.hasHelper(env, scope, tagName)) {\n        return env.hooks.block(morph, env, scope, tagName, [], attrs, template, null, visitor);\n      }\n\n      componentFallback(morph, env, scope, tagName, attrs, template);\n    }\n\n    __exports__.component = component;function concat(env, params) {\n      var value = \"\";\n      for (var i = 0, l = params.length; i < l; i++) {\n        value += env.hooks.getValue(params[i]);\n      }\n      return value;\n    }\n\n    __exports__.concat = concat;function componentFallback(morph, env, scope, tagName, attrs, template) {\n      var element = env.dom.createElement(tagName);\n      for (var name in attrs) {\n        element.setAttribute(name, env.hooks.getValue(attrs[name]));\n      }\n      var fragment = render(template, env, scope, {}).fragment;\n      element.appendChild(fragment);\n      morph.setNode(element);\n    }\n\n    function hasHelper(env, scope, helperName) {\n      return env.helpers[helperName] !== undefined;\n    }\n\n    __exports__.hasHelper = hasHelper;function lookupHelper(env, scope, helperName) {\n      return env.helpers[helperName];\n    }\n\n    __exports__.lookupHelper = lookupHelper;function bindScope(/* env, scope */) {\n      // this function is used to handle host-specified extensions to scope\n      // other than `self`, `locals` and `block`.\n    }\n\n    __exports__.bindScope = bindScope;__exports__[\"default\"] = {\n      // fundamental hooks that you will likely want to override\n      bindLocal: bindLocal,\n      bindSelf: bindSelf,\n      bindScope: bindScope,\n      classify: classify,\n      cleanup: null,\n      component: component,\n      concat: concat,\n      createFreshScope: createFreshScope,\n      getChild: getChild,\n      getRoot: getRoot,\n      getValue: getValue,\n      keywords: keywords,\n      linkRenderNode: linkRenderNode,\n      partial: partial,\n      subexpr: subexpr,\n\n      // fundamental hooks with good default behavior\n      bindBlock: bindBlock,\n      createChildScope: createChildScope,\n      createShadowScope: createShadowScope,\n      hasHelper: hasHelper,\n      lookupHelper: lookupHelper,\n\n      // derived hooks\n      attribute: attribute,\n      block: block,\n      createScope: createScope,\n      element: element,\n      get: get,\n      inline: inline,\n      range: range,\n    };\n  });\ndefine(\"htmlbars-runtime/morph\",\n  [\"../morph-range\",\"../htmlbars-util/object-utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var MorphBase = __dependency1__[\"default\"];\n    var createObject = __dependency2__.createObject;\n\n    function HTMLBarsMorph(domHelper, contextualElement) {\n      this.super$constructor(domHelper, contextualElement);\n\n      this.state = {};\n      this.ownerNode = null;\n      this.isDirty = false;\n      this.isSubtreeDirty = false;\n      this.lastYielded = null;\n      this.lastResult = null;\n      this.lastValue = null;\n      this.morphList = null;\n      this.morphMap = null;\n      this.key = null;\n      this.linkedParams = null;\n    }\n\n    HTMLBarsMorph.empty = function(domHelper, contextualElement) {\n      var morph = new HTMLBarsMorph(domHelper, contextualElement);\n      morph.clear();\n      return morph;\n    };\n\n    var prototype = HTMLBarsMorph.prototype = createObject(MorphBase.prototype);\n    prototype.constructor = HTMLBarsMorph;\n    prototype.super$constructor = MorphBase;\n\n    __exports__[\"default\"] = HTMLBarsMorph;\n  });\ndefine(\"htmlbars-runtime/render\",\n  [\"../htmlbars-util/array-utils\",\"../htmlbars-util/morph-utils\",\"./expression-visitor\",\"./morph\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var forEach = __dependency1__.forEach;\n    var visitChildren = __dependency2__.visitChildren;\n    var ExpressionVisitor = __dependency3__[\"default\"];\n    var AlwaysDirtyVisitor = __dependency3__.AlwaysDirtyVisitor;\n    var Morph = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function render(template, env, scope, options) {\n      var dom = env.dom;\n      var contextualElement;\n\n      if (options) {\n        if (options.renderNode) {\n          contextualElement = options.renderNode.contextualElement;\n        } else if (options.contextualElement) {\n          contextualElement = options.contextualElement;\n        }\n      }\n\n      dom.detectNamespace(contextualElement);\n\n      var renderResult = RenderResult.build(env, scope, template, options, contextualElement);\n      renderResult.render();\n\n      return renderResult;\n    }\n\n    function RenderResult(env, scope, options, rootNode, nodes, fragment, template, shouldSetContent) {\n      this.root = rootNode;\n      this.fragment = fragment;\n\n      this.nodes = nodes;\n      this.template = template;\n      this.env = env;\n      this.scope = scope;\n      this.shouldSetContent = shouldSetContent;\n\n      this.bindScope();\n\n      if (options.self !== undefined) { this.bindSelf(options.self); }\n      if (options.blockArguments !== undefined) { this.bindLocals(options.blockArguments); }\n    }\n\n    RenderResult.build = function(env, scope, template, options, contextualElement) {\n      var dom = env.dom;\n      var fragment = getCachedFragment(template, env);\n      var nodes = template.buildRenderNodes(dom, fragment, contextualElement);\n\n      var rootNode, ownerNode, shouldSetContent;\n\n      if (options && options.renderNode) {\n        rootNode = options.renderNode;\n        ownerNode = rootNode.ownerNode;\n        shouldSetContent = true;\n      } else {\n        rootNode = dom.createMorph(null, fragment.firstChild, fragment.lastChild, contextualElement);\n        ownerNode = rootNode;\n        initializeNode(rootNode, ownerNode);\n        shouldSetContent = false;\n      }\n\n      if (rootNode.childNodes && env.hooks.cleanup) {\n        visitChildren(rootNode.childNodes, function(node) {\n          env.hooks.cleanup(node);\n        });\n      }\n\n      rootNode.childNodes = nodes;\n\n      forEach(nodes, function(node) {\n        initializeNode(node, ownerNode);\n      });\n\n      return new RenderResult(env, scope, options, rootNode, nodes, fragment, template, shouldSetContent);\n    };\n\n    function manualElement(tagName, attributes) {\n      var statements = [];\n\n      for (var key in attributes) {\n        if (typeof attributes[key] === 'string') { continue; }\n        statements.push([\"attribute\", key, attributes[key]]);\n      }\n\n      statements.push(['inline', 'yield']);\n\n      var template = {\n        isHTMLBars: true,\n        revision: \"HTMLBars@VERSION_STRING_PLACEHOLDER\",\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(tagName);\n\n          for (var key in attributes) {\n            if (typeof attributes[key] !== 'string') { continue; }\n            dom.setAttribute(el1, key, attributes[key]);\n          }\n\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment) {\n          var element = dom.childAt(fragment, [0]);\n          var morphs = [];\n\n          for (var key in attributes) {\n            if (typeof attributes[key] === 'string') { continue; }\n            morphs.push(dom.createAttrMorph(element, key));\n          }\n\n          morphs.push(dom.createMorphAt(element, 0, 0));\n          return morphs;\n        },\n        statements: statements,\n        locals: [],\n        templates: []\n      };\n\n      return template;\n    }\n\n    __exports__.manualElement = manualElement;RenderResult.prototype.render = function() {\n      this.root.lastResult = this;\n      this.populateNodes(AlwaysDirtyVisitor);\n\n      if (this.shouldSetContent) {\n        this.root.setContent(this.fragment);\n      }\n    };\n\n    RenderResult.prototype.dirty = function() {\n      visitChildren([this.root], function(node) { node.isDirty = true; });\n    };\n\n    RenderResult.prototype.revalidate = function(env, self, blockArguments, scope) {\n      this.revalidateWith(env, scope, self, blockArguments, ExpressionVisitor);\n    };\n\n    RenderResult.prototype.rerender = function(env, self, blockArguments, scope) {\n      this.revalidateWith(env, scope, self, blockArguments, AlwaysDirtyVisitor);\n    };\n\n    RenderResult.prototype.revalidateWith = function(env, scope, self, blockArguments, visitor) {\n      if (env !== undefined) { this.env = env; }\n      if (scope !== undefined) { this.scope = scope; }\n      this.bindScope();\n\n      if (self !== undefined) { this.bindSelf(self); }\n      if (blockArguments !== undefined) { this.bindLocals(blockArguments); }\n\n      this.populateNodes(visitor);\n    };\n\n    RenderResult.prototype.destroy = function() {\n      var rootNode = this.root;\n      var cleanup = this.env.hooks.cleanup;\n\n      if (cleanup) {\n        visitChildren([rootNode], function(node) {\n          cleanup(node);\n        });\n      }\n      rootNode.clear();\n    };\n\n    RenderResult.prototype.populateNodes = function(visitor) {\n      var env = this.env;\n      var scope = this.scope;\n      var template = this.template;\n      var nodes = this.nodes;\n      var statements = template.statements;\n      var i, l;\n\n      for (i=0, l=statements.length; i<l; i++) {\n        var statement = statements[i];\n        var morph = nodes[i];\n\n        switch (statement[0]) {\n          case 'block': visitor.block(statement, morph, env, scope, template, visitor); break;\n          case 'inline': visitor.inline(statement, morph, env, scope, visitor); break;\n          case 'content': visitor.content(statement, morph, env, scope, visitor); break;\n          case 'element': visitor.element(statement, morph, env, scope, template, visitor); break;\n          case 'attribute': visitor.attribute(statement, morph, env, scope); break;\n          case 'component': visitor.component(statement, morph, env, scope, template, visitor); break;\n        }\n      }\n    };\n\n    RenderResult.prototype.bindScope = function() {\n      this.env.hooks.bindScope(this.env, this.scope);\n    };\n\n    RenderResult.prototype.bindSelf = function(self) {\n      this.env.hooks.bindSelf(this.env, this.scope, self);\n    };\n\n    RenderResult.prototype.bindLocals = function(blockArguments) {\n      var localNames = this.template.locals;\n\n      for (var i=0, l=localNames.length; i<l; i++) {\n        this.env.hooks.bindLocal(this.env, this.scope, localNames[i], blockArguments[i]);\n      }\n    };\n\n    function initializeNode(node, owner) {\n      node.ownerNode = owner;\n    }\n\n    function createChildMorph(dom, parentMorph, contextualElement) {\n      var morph = Morph.empty(dom, contextualElement || parentMorph.contextualElement);\n      initializeNode(morph, parentMorph.ownerNode);\n      return morph;\n    }\n\n    __exports__.createChildMorph = createChildMorph;function getCachedFragment(template, env) {\n      var dom = env.dom, fragment;\n      if (env.useFragmentCache && dom.canClone) {\n        if (template.cachedFragment === null) {\n          fragment = template.buildFragment(dom);\n          if (template.hasRendered) {\n            template.cachedFragment = fragment;\n          } else {\n            template.hasRendered = true;\n          }\n        }\n        if (template.cachedFragment) {\n          fragment = dom.cloneNode(template.cachedFragment, true);\n        }\n      } else if (!fragment) {\n        fragment = template.buildFragment(dom);\n      }\n\n      return fragment;\n    }\n\n    __exports__.getCachedFragment = getCachedFragment;\n  });\ndefine(\"htmlbars-syntax\",\n  [\"./htmlbars-syntax/walker\",\"./htmlbars-syntax/builders\",\"./htmlbars-syntax/parser\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Walker = __dependency1__[\"default\"];\n    var builders = __dependency2__[\"default\"];\n    var parse = __dependency3__.preprocess;\n\n    __exports__.Walker = Walker;\n    __exports__.builders = builders;\n    __exports__.parse = parse;\n  });\ndefine(\"htmlbars-syntax/builders\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // Statements\n\n    function buildMustache(sexpr, raw) {\n      return {\n        type: \"MustacheStatement\",\n        sexpr: sexpr,\n        escaped: !raw\n      };\n    }\n\n    __exports__.buildMustache = buildMustache;function buildBlock(sexpr, program, inverse) {\n      return {\n        type: \"BlockStatement\",\n        sexpr: sexpr,\n        program: program || null,\n        inverse: inverse || null\n      };\n    }\n\n    __exports__.buildBlock = buildBlock;function buildPartial(sexpr, indent) {\n      return {\n        type: \"PartialStatement\",\n        sexpr: sexpr,\n        indent: indent\n      };\n    }\n\n    __exports__.buildPartial = buildPartial;function buildComment(value) {\n      return {\n        type: \"CommentStatement\",\n        value: value\n      };\n    }\n\n    __exports__.buildComment = buildComment;\n    function buildConcat(parts) {\n      return {\n        type: \"ConcatStatement\",\n        parts: parts || []\n      };\n    }\n\n    __exports__.buildConcat = buildConcat;// Nodes\n\n    function buildElement(tag, attributes, helpers, children) {\n      return {\n        type: \"ElementNode\",\n        tag: tag,\n        attributes: attributes || [],\n        helpers: helpers || [],\n        children: children || []\n      };\n    }\n\n    __exports__.buildElement = buildElement;function buildComponent(tag, attributes, program) {\n      return {\n        type: \"ComponentNode\",\n        tag: tag,\n        attributes: attributes,\n        program: program\n      };\n    }\n\n    __exports__.buildComponent = buildComponent;function buildAttr(name, value) {\n      return {\n        type: \"AttrNode\",\n        name: name,\n        value: value\n      };\n    }\n\n    __exports__.buildAttr = buildAttr;function buildText(chars) {\n      return {\n        type: \"TextNode\",\n        chars: chars\n      };\n    }\n\n    __exports__.buildText = buildText;// Expressions\n\n    function buildSexpr(path, params, hash) {\n      return {\n        type: \"SubExpression\",\n        path: path,\n        params: params || [],\n        hash: hash || buildHash([])\n      };\n    }\n\n    __exports__.buildSexpr = buildSexpr;function buildPath(original) {\n      return {\n        type: \"PathExpression\",\n        original: original,\n        parts: original.split('.')\n      };\n    }\n\n    __exports__.buildPath = buildPath;function buildString(value) {\n      return {\n        type: \"StringLiteral\",\n        value: value,\n        original: value\n      };\n    }\n\n    __exports__.buildString = buildString;function buildBoolean(value) {\n      return {\n        type: \"BooleanLiteral\",\n        value: value,\n        original: value\n      };\n    }\n\n    __exports__.buildBoolean = buildBoolean;function buildNumber(value) {\n      return {\n        type: \"NumberLiteral\",\n        value: value,\n        original: value\n      };\n    }\n\n    __exports__.buildNumber = buildNumber;// Miscellaneous\n\n    function buildHash(pairs) {\n      return {\n        type: \"Hash\",\n        pairs: pairs || []\n      };\n    }\n\n    __exports__.buildHash = buildHash;function buildPair(key, value) {\n      return {\n        type: \"HashPair\",\n        key: key,\n        value: value\n      };\n    }\n\n    __exports__.buildPair = buildPair;function buildProgram(body, blockParams) {\n      return {\n        type: \"Program\",\n        body: body || [],\n        blockParams: blockParams || []\n      };\n    }\n\n    __exports__.buildProgram = buildProgram;__exports__[\"default\"] = {\n      mustache: buildMustache,\n      block: buildBlock,\n      partial: buildPartial,\n      comment: buildComment,\n      element: buildElement,\n      component: buildComponent,\n      attr: buildAttr,\n      text: buildText,\n      sexpr: buildSexpr,\n      path: buildPath,\n      string: buildString,\n      boolean: buildBoolean,\n      number: buildNumber,\n      concat: buildConcat,\n      hash: buildHash,\n      pair: buildPair,\n      program: buildProgram\n    };\n  });\ndefine(\"htmlbars-syntax/handlebars/compiler/ast\",\n  [\"../exception\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Exception = __dependency1__[\"default\"];\n\n    var AST = {\n      Program: function(statements, blockParams, strip, locInfo) {\n        this.loc = locInfo;\n        this.type = 'Program';\n        this.body = statements;\n\n        this.blockParams = blockParams;\n        this.strip = strip;\n      },\n\n      MustacheStatement: function(sexpr, escaped, strip, locInfo) {\n        this.loc = locInfo;\n        this.type = 'MustacheStatement';\n\n        this.sexpr = sexpr;\n        this.escaped = escaped;\n\n        this.strip = strip;\n      },\n\n      BlockStatement: function(sexpr, program, inverse, openStrip, inverseStrip, closeStrip, locInfo) {\n        this.loc = locInfo;\n\n        this.type = 'BlockStatement';\n        this.sexpr = sexpr;\n        this.program  = program;\n        this.inverse  = inverse;\n\n        this.openStrip = openStrip;\n        this.inverseStrip = inverseStrip;\n        this.closeStrip = closeStrip;\n      },\n\n      PartialStatement: function(sexpr, strip, locInfo) {\n        this.loc = locInfo;\n        this.type = 'PartialStatement';\n        this.sexpr = sexpr;\n        this.indent = '';\n\n        this.strip = strip;\n      },\n\n      ContentStatement: function(string, locInfo) {\n        this.loc = locInfo;\n        this.type = 'ContentStatement';\n        this.original = this.value = string;\n      },\n\n      CommentStatement: function(comment, strip, locInfo) {\n        this.loc = locInfo;\n        this.type = 'CommentStatement';\n        this.value = comment;\n\n        this.strip = strip;\n      },\n\n      SubExpression: function(path, params, hash, locInfo) {\n        this.loc = locInfo;\n\n        this.type = 'SubExpression';\n        this.path = path;\n        this.params = params || [];\n        this.hash = hash;\n      },\n\n      PathExpression: function(data, depth, parts, original, locInfo) {\n        this.loc = locInfo;\n        this.type = 'PathExpression';\n\n        this.data = data;\n        this.original = original;\n        this.parts    = parts;\n        this.depth    = depth;\n      },\n\n      StringLiteral: function(string, locInfo) {\n        this.loc = locInfo;\n        this.type = 'StringLiteral';\n        this.original =\n          this.value = string;\n      },\n\n      NumberLiteral: function(number, locInfo) {\n        this.loc = locInfo;\n        this.type = 'NumberLiteral';\n        this.original =\n          this.value = Number(number);\n      },\n\n      BooleanLiteral: function(bool, locInfo) {\n        this.loc = locInfo;\n        this.type = 'BooleanLiteral';\n        this.original =\n          this.value = bool === 'true';\n      },\n\n      Hash: function(pairs, locInfo) {\n        this.loc = locInfo;\n        this.type = 'Hash';\n        this.pairs = pairs;\n      },\n      HashPair: function(key, value, locInfo) {\n        this.loc = locInfo;\n        this.type = 'HashPair';\n        this.key = key;\n        this.value = value;\n      }\n    };\n\n\n    // Must be exported as an object rather than the root of the module as the jison lexer\n    // most modify the object to operate properly.\n    __exports__[\"default\"] = AST;\n  });\ndefine(\"htmlbars-syntax/handlebars/compiler/base\",\n  [\"./parser\",\"./ast\",\"./whitespace-control\",\"./helpers\",\"../utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __exports__) {\n    \"use strict\";\n    var parser = __dependency1__[\"default\"];\n    var AST = __dependency2__[\"default\"];\n    var WhitespaceControl = __dependency3__[\"default\"];\n    var Helpers = __dependency4__;\n    var extend = __dependency5__.extend;\n\n    __exports__.parser = parser;\n\n    var yy = {};\n    extend(yy, Helpers, AST);\n\n    function parse(input, options) {\n      // Just return if an already-compile AST was passed in.\n      if (input.type === 'Program') { return input; }\n\n      parser.yy = yy;\n\n      // Altering the shared object here, but this is ok as parser is a sync operation\n      yy.locInfo = function(locInfo) {\n        return new yy.SourceLocation(options && options.srcName, locInfo);\n      };\n\n      var strip = new WhitespaceControl();\n      return strip.accept(parser.parse(input));\n    }\n\n    __exports__.parse = parse;\n  });\ndefine(\"htmlbars-syntax/handlebars/compiler/helpers\",\n  [\"../exception\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Exception = __dependency1__[\"default\"];\n\n    function SourceLocation(source, locInfo) {\n      this.source = source;\n      this.start = {\n        line: locInfo.first_line,\n        column: locInfo.first_column\n      };\n      this.end = {\n        line: locInfo.last_line,\n        column: locInfo.last_column\n      };\n    }\n\n    __exports__.SourceLocation = SourceLocation;function stripFlags(open, close) {\n      return {\n        open: open.charAt(2) === '~',\n        close: close.charAt(close.length-3) === '~'\n      };\n    }\n\n    __exports__.stripFlags = stripFlags;function stripComment(comment) {\n      return comment.replace(/^\\{\\{~?\\!-?-?/, '')\n                    .replace(/-?-?~?\\}\\}$/, '');\n    }\n\n    __exports__.stripComment = stripComment;function preparePath(data, parts, locInfo) {\n      /*jshint -W040 */\n      locInfo = this.locInfo(locInfo);\n\n      var original = data ? '@' : '',\n          dig = [],\n          depth = 0,\n          depthString = '';\n\n      for(var i=0,l=parts.length; i<l; i++) {\n        var part = parts[i].part;\n        original += (parts[i].separator || '') + part;\n\n        if (part === '..' || part === '.' || part === 'this') {\n          if (dig.length > 0) {\n            throw new Exception('Invalid path: ' + original, {loc: locInfo});\n          } else if (part === '..') {\n            depth++;\n            depthString += '../';\n          }\n        } else {\n          dig.push(part);\n        }\n      }\n\n      return new this.PathExpression(data, depth, dig, original, locInfo);\n    }\n\n    __exports__.preparePath = preparePath;function prepareMustache(sexpr, open, strip, locInfo) {\n      /*jshint -W040 */\n      // Must use charAt to support IE pre-10\n      var escapeFlag = open.charAt(3) || open.charAt(2),\n          escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n      return new this.MustacheStatement(sexpr, escaped, strip, this.locInfo(locInfo));\n    }\n\n    __exports__.prepareMustache = prepareMustache;function prepareRawBlock(openRawBlock, content, close, locInfo) {\n      /*jshint -W040 */\n      if (openRawBlock.sexpr.path.original !== close) {\n        var errorNode = {loc: openRawBlock.sexpr.loc};\n\n        throw new Exception(openRawBlock.sexpr.path.original + \" doesn't match \" + close, errorNode);\n      }\n\n      locInfo = this.locInfo(locInfo);\n      var program = new this.Program([content], null, {}, locInfo);\n\n      return new this.BlockStatement(\n          openRawBlock.sexpr, program, undefined,\n          {}, {}, {},\n          locInfo);\n    }\n\n    __exports__.prepareRawBlock = prepareRawBlock;function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n      /*jshint -W040 */\n      // When we are chaining inverse calls, we will not have a close path\n      if (close && close.path && openBlock.sexpr.path.original !== close.path.original) {\n        var errorNode = {loc: openBlock.sexpr.loc};\n\n        throw new Exception(openBlock.sexpr.path.original + ' doesn\\'t match ' + close.path.original, errorNode);\n      }\n\n      program.blockParams = openBlock.blockParams;\n\n      var inverse,\n          inverseStrip;\n\n      if (inverseAndProgram) {\n        if (inverseAndProgram.chain) {\n          inverseAndProgram.program.body[0].closeStrip = close.strip || close.openStrip;\n        }\n\n        inverseStrip = inverseAndProgram.strip;\n        inverse = inverseAndProgram.program;\n      }\n\n      if (inverted) {\n        inverted = inverse;\n        inverse = program;\n        program = inverted;\n      }\n\n      return new this.BlockStatement(\n          openBlock.sexpr, program, inverse,\n          openBlock.strip, inverseStrip, close && (close.strip || close.openStrip),\n          this.locInfo(locInfo));\n    }\n\n    __exports__.prepareBlock = prepareBlock;\n  });\ndefine(\"htmlbars-syntax/handlebars/compiler/parser\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    /* Jison generated parser */\n    var handlebars = (function(){\n    var parser = {trace: function trace() { },\n    yy: {},\n    symbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"content\":12,\"COMMENT\":13,\"CONTENT\":14,\"openRawBlock\":15,\"END_RAW_BLOCK\":16,\"OPEN_RAW_BLOCK\":17,\"sexpr\":18,\"CLOSE_RAW_BLOCK\":19,\"openBlock\":20,\"block_option0\":21,\"closeBlock\":22,\"openInverse\":23,\"block_option1\":24,\"OPEN_BLOCK\":25,\"openBlock_option0\":26,\"CLOSE\":27,\"OPEN_INVERSE\":28,\"openInverse_option0\":29,\"openInverseChain\":30,\"OPEN_INVERSE_CHAIN\":31,\"openInverseChain_option0\":32,\"inverseAndProgram\":33,\"INVERSE\":34,\"inverseChain\":35,\"inverseChain_option0\":36,\"OPEN_ENDBLOCK\":37,\"path\":38,\"OPEN\":39,\"OPEN_UNESCAPED\":40,\"CLOSE_UNESCAPED\":41,\"OPEN_PARTIAL\":42,\"helperName\":43,\"sexpr_repetition0\":44,\"sexpr_option0\":45,\"dataName\":46,\"param\":47,\"STRING\":48,\"NUMBER\":49,\"BOOLEAN\":50,\"OPEN_SEXPR\":51,\"CLOSE_SEXPR\":52,\"hash\":53,\"hash_repetition_plus0\":54,\"hashSegment\":55,\"ID\":56,\"EQUALS\":57,\"blockParams\":58,\"OPEN_BLOCK_PARAMS\":59,\"blockParams_repetition_plus0\":60,\"CLOSE_BLOCK_PARAMS\":61,\"DATA\":62,\"pathSegments\":63,\"SEP\":64,\"$accept\":0,\"$end\":1},\n    terminals_: {2:\"error\",5:\"EOF\",13:\"COMMENT\",14:\"CONTENT\",16:\"END_RAW_BLOCK\",17:\"OPEN_RAW_BLOCK\",19:\"CLOSE_RAW_BLOCK\",25:\"OPEN_BLOCK\",27:\"CLOSE\",28:\"OPEN_INVERSE\",31:\"OPEN_INVERSE_CHAIN\",34:\"INVERSE\",37:\"OPEN_ENDBLOCK\",39:\"OPEN\",40:\"OPEN_UNESCAPED\",41:\"CLOSE_UNESCAPED\",42:\"OPEN_PARTIAL\",48:\"STRING\",49:\"NUMBER\",50:\"BOOLEAN\",51:\"OPEN_SEXPR\",52:\"CLOSE_SEXPR\",56:\"ID\",57:\"EQUALS\",59:\"OPEN_BLOCK_PARAMS\",61:\"CLOSE_BLOCK_PARAMS\",62:\"DATA\",64:\"SEP\"},\n    productions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[12,1],[10,3],[15,3],[9,4],[9,4],[20,4],[23,4],[30,4],[33,2],[35,3],[35,1],[22,3],[8,3],[8,3],[11,3],[18,3],[18,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,3],[53,1],[55,3],[58,3],[43,1],[43,1],[43,1],[46,2],[38,1],[63,3],[63,1],[6,0],[6,2],[21,0],[21,1],[24,0],[24,1],[26,0],[26,1],[29,0],[29,1],[32,0],[32,1],[36,0],[36,1],[44,0],[44,2],[45,0],[45,1],[54,1],[54,2],[60,1],[60,2]],\n    performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {\n\n    var $0 = $$.length - 1;\n    switch (yystate) {\n    case 1: return $$[$0-1]; \n    break;\n    case 2:this.$ = new yy.Program($$[$0], null, {}, yy.locInfo(this._$));\n    break;\n    case 3:this.$ = $$[$0];\n    break;\n    case 4:this.$ = $$[$0];\n    break;\n    case 5:this.$ = $$[$0];\n    break;\n    case 6:this.$ = $$[$0];\n    break;\n    case 7:this.$ = $$[$0];\n    break;\n    case 8:this.$ = new yy.CommentStatement(yy.stripComment($$[$0]), yy.stripFlags($$[$0], $$[$0]), yy.locInfo(this._$));\n    break;\n    case 9:this.$ = new yy.ContentStatement($$[$0], yy.locInfo(this._$));\n    break;\n    case 10:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\n    break;\n    case 11:this.$ = { sexpr: $$[$0-1] };\n    break;\n    case 12:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\n    break;\n    case 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\n    break;\n    case 14:this.$ = { sexpr: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-3], $$[$0]) };\n    break;\n    case 15:this.$ = { sexpr: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-3], $$[$0]) };\n    break;\n    case 16:this.$ = { sexpr: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-3], $$[$0]) };\n    break;\n    case 17:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\n    break;\n    case 18:\n        var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n            program = new yy.Program([inverse], null, {}, yy.locInfo(this._$));\n        program.chained = true;\n\n        this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n      \n    break;\n    case 19:this.$ = $$[$0];\n    break;\n    case 20:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\n    break;\n    case 21:this.$ = yy.prepareMustache($$[$0-1], $$[$0-2], yy.stripFlags($$[$0-2], $$[$0]), this._$);\n    break;\n    case 22:this.$ = yy.prepareMustache($$[$0-1], $$[$0-2], yy.stripFlags($$[$0-2], $$[$0]), this._$);\n    break;\n    case 23:this.$ = new yy.PartialStatement($$[$0-1], yy.stripFlags($$[$0-2], $$[$0]), yy.locInfo(this._$));\n    break;\n    case 24:this.$ = new yy.SubExpression($$[$0-2], $$[$0-1], $$[$0], yy.locInfo(this._$));\n    break;\n    case 25:this.$ = new yy.SubExpression($$[$0], null, null, yy.locInfo(this._$));\n    break;\n    case 26:this.$ = $$[$0];\n    break;\n    case 27:this.$ = new yy.StringLiteral($$[$0], yy.locInfo(this._$));\n    break;\n    case 28:this.$ = new yy.NumberLiteral($$[$0], yy.locInfo(this._$));\n    break;\n    case 29:this.$ = new yy.BooleanLiteral($$[$0], yy.locInfo(this._$));\n    break;\n    case 30:this.$ = $$[$0];\n    break;\n    case 31:this.$ = $$[$0-1];\n    break;\n    case 32:this.$ = new yy.Hash($$[$0], yy.locInfo(this._$));\n    break;\n    case 33:this.$ = new yy.HashPair($$[$0-2], $$[$0], yy.locInfo(this._$));\n    break;\n    case 34:this.$ = $$[$0-1];\n    break;\n    case 35:this.$ = $$[$0];\n    break;\n    case 36:this.$ = new yy.StringLiteral($$[$0], yy.locInfo(this._$)), yy.locInfo(this._$);\n    break;\n    case 37:this.$ = new yy.NumberLiteral($$[$0], yy.locInfo(this._$));\n    break;\n    case 38:this.$ = yy.preparePath(true, $$[$0], this._$);\n    break;\n    case 39:this.$ = yy.preparePath(false, $$[$0], this._$);\n    break;\n    case 40: $$[$0-2].push({part: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \n    break;\n    case 41:this.$ = [{part: $$[$0]}];\n    break;\n    case 42:this.$ = [];\n    break;\n    case 43:$$[$0-1].push($$[$0]);\n    break;\n    case 56:this.$ = [];\n    break;\n    case 57:$$[$0-1].push($$[$0]);\n    break;\n    case 60:this.$ = [$$[$0]];\n    break;\n    case 61:$$[$0-1].push($$[$0]);\n    break;\n    case 62:this.$ = [$$[$0]];\n    break;\n    case 63:$$[$0-1].push($$[$0]);\n    break;\n    }\n    },\n    table: [{3:1,4:2,5:[2,42],6:3,13:[2,42],14:[2,42],17:[2,42],25:[2,42],28:[2,42],39:[2,42],40:[2,42],42:[2,42]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:[1,11],14:[1,18],15:16,17:[1,21],20:14,23:15,25:[1,19],28:[1,20],31:[2,2],34:[2,2],37:[2,2],39:[1,12],40:[1,13],42:[1,17]},{1:[2,1]},{5:[2,43],13:[2,43],14:[2,43],17:[2,43],25:[2,43],28:[2,43],31:[2,43],34:[2,43],37:[2,43],39:[2,43],40:[2,43],42:[2,43]},{5:[2,3],13:[2,3],14:[2,3],17:[2,3],25:[2,3],28:[2,3],31:[2,3],34:[2,3],37:[2,3],39:[2,3],40:[2,3],42:[2,3]},{5:[2,4],13:[2,4],14:[2,4],17:[2,4],25:[2,4],28:[2,4],31:[2,4],34:[2,4],37:[2,4],39:[2,4],40:[2,4],42:[2,4]},{5:[2,5],13:[2,5],14:[2,5],17:[2,5],25:[2,5],28:[2,5],31:[2,5],34:[2,5],37:[2,5],39:[2,5],40:[2,5],42:[2,5]},{5:[2,6],13:[2,6],14:[2,6],17:[2,6],25:[2,6],28:[2,6],31:[2,6],34:[2,6],37:[2,6],39:[2,6],40:[2,6],42:[2,6]},{5:[2,7],13:[2,7],14:[2,7],17:[2,7],25:[2,7],28:[2,7],31:[2,7],34:[2,7],37:[2,7],39:[2,7],40:[2,7],42:[2,7]},{5:[2,8],13:[2,8],14:[2,8],17:[2,8],25:[2,8],28:[2,8],31:[2,8],34:[2,8],37:[2,8],39:[2,8],40:[2,8],42:[2,8]},{18:22,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{18:31,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{4:32,6:3,13:[2,42],14:[2,42],17:[2,42],25:[2,42],28:[2,42],31:[2,42],34:[2,42],37:[2,42],39:[2,42],40:[2,42],42:[2,42]},{4:33,6:3,13:[2,42],14:[2,42],17:[2,42],25:[2,42],28:[2,42],34:[2,42],37:[2,42],39:[2,42],40:[2,42],42:[2,42]},{12:34,14:[1,18]},{18:35,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{5:[2,9],13:[2,9],14:[2,9],16:[2,9],17:[2,9],25:[2,9],28:[2,9],31:[2,9],34:[2,9],37:[2,9],39:[2,9],40:[2,9],42:[2,9]},{18:36,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{18:37,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{18:38,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{27:[1,39]},{19:[2,56],27:[2,56],41:[2,56],44:40,48:[2,56],49:[2,56],50:[2,56],51:[2,56],52:[2,56],56:[2,56],59:[2,56],62:[2,56]},{19:[2,25],27:[2,25],41:[2,25],52:[2,25],59:[2,25]},{19:[2,35],27:[2,35],41:[2,35],48:[2,35],49:[2,35],50:[2,35],51:[2,35],52:[2,35],56:[2,35],59:[2,35],62:[2,35]},{19:[2,36],27:[2,36],41:[2,36],48:[2,36],49:[2,36],50:[2,36],51:[2,36],52:[2,36],56:[2,36],59:[2,36],62:[2,36]},{19:[2,37],27:[2,37],41:[2,37],48:[2,37],49:[2,37],50:[2,37],51:[2,37],52:[2,37],56:[2,37],59:[2,37],62:[2,37]},{56:[1,30],63:41},{19:[2,39],27:[2,39],41:[2,39],48:[2,39],49:[2,39],50:[2,39],51:[2,39],52:[2,39],56:[2,39],59:[2,39],62:[2,39],64:[1,42]},{19:[2,41],27:[2,41],41:[2,41],48:[2,41],49:[2,41],50:[2,41],51:[2,41],52:[2,41],56:[2,41],59:[2,41],62:[2,41],64:[2,41]},{41:[1,43]},{21:44,30:46,31:[1,48],33:47,34:[1,49],35:45,37:[2,44]},{24:50,33:51,34:[1,49],37:[2,46]},{16:[1,52]},{27:[1,53]},{26:54,27:[2,48],58:55,59:[1,56]},{27:[2,50],29:57,58:58,59:[1,56]},{19:[1,59]},{5:[2,21],13:[2,21],14:[2,21],17:[2,21],25:[2,21],28:[2,21],31:[2,21],34:[2,21],37:[2,21],39:[2,21],40:[2,21],42:[2,21]},{19:[2,58],27:[2,58],38:63,41:[2,58],45:60,46:67,47:61,48:[1,64],49:[1,65],50:[1,66],51:[1,68],52:[2,58],53:62,54:69,55:70,56:[1,71],59:[2,58],62:[1,28],63:29},{19:[2,38],27:[2,38],41:[2,38],48:[2,38],49:[2,38],50:[2,38],51:[2,38],52:[2,38],56:[2,38],59:[2,38],62:[2,38],64:[1,42]},{56:[1,72]},{5:[2,22],13:[2,22],14:[2,22],17:[2,22],25:[2,22],28:[2,22],31:[2,22],34:[2,22],37:[2,22],39:[2,22],40:[2,22],42:[2,22]},{22:73,37:[1,74]},{37:[2,45]},{4:75,6:3,13:[2,42],14:[2,42],17:[2,42],25:[2,42],28:[2,42],31:[2,42],34:[2,42],37:[2,42],39:[2,42],40:[2,42],42:[2,42]},{37:[2,19]},{18:76,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{4:77,6:3,13:[2,42],14:[2,42],17:[2,42],25:[2,42],28:[2,42],37:[2,42],39:[2,42],40:[2,42],42:[2,42]},{22:78,37:[1,74]},{37:[2,47]},{5:[2,10],13:[2,10],14:[2,10],17:[2,10],25:[2,10],28:[2,10],31:[2,10],34:[2,10],37:[2,10],39:[2,10],40:[2,10],42:[2,10]},{5:[2,23],13:[2,23],14:[2,23],17:[2,23],25:[2,23],28:[2,23],31:[2,23],34:[2,23],37:[2,23],39:[2,23],40:[2,23],42:[2,23]},{27:[1,79]},{27:[2,49]},{56:[1,81],60:80},{27:[1,82]},{27:[2,51]},{14:[2,11]},{19:[2,24],27:[2,24],41:[2,24],52:[2,24],59:[2,24]},{19:[2,57],27:[2,57],41:[2,57],48:[2,57],49:[2,57],50:[2,57],51:[2,57],52:[2,57],56:[2,57],59:[2,57],62:[2,57]},{19:[2,59],27:[2,59],41:[2,59],52:[2,59],59:[2,59]},{19:[2,26],27:[2,26],41:[2,26],48:[2,26],49:[2,26],50:[2,26],51:[2,26],52:[2,26],56:[2,26],59:[2,26],62:[2,26]},{19:[2,27],27:[2,27],41:[2,27],48:[2,27],49:[2,27],50:[2,27],51:[2,27],52:[2,27],56:[2,27],59:[2,27],62:[2,27]},{19:[2,28],27:[2,28],41:[2,28],48:[2,28],49:[2,28],50:[2,28],51:[2,28],52:[2,28],56:[2,28],59:[2,28],62:[2,28]},{19:[2,29],27:[2,29],41:[2,29],48:[2,29],49:[2,29],50:[2,29],51:[2,29],52:[2,29],56:[2,29],59:[2,29],62:[2,29]},{19:[2,30],27:[2,30],41:[2,30],48:[2,30],49:[2,30],50:[2,30],51:[2,30],52:[2,30],56:[2,30],59:[2,30],62:[2,30]},{18:83,38:25,43:23,46:24,48:[1,26],49:[1,27],56:[1,30],62:[1,28],63:29},{19:[2,32],27:[2,32],41:[2,32],52:[2,32],55:84,56:[1,85],59:[2,32]},{19:[2,60],27:[2,60],41:[2,60],52:[2,60],56:[2,60],59:[2,60]},{19:[2,41],27:[2,41],41:[2,41],48:[2,41],49:[2,41],50:[2,41],51:[2,41],52:[2,41],56:[2,41],57:[1,86],59:[2,41],62:[2,41],64:[2,41]},{19:[2,40],27:[2,40],41:[2,40],48:[2,40],49:[2,40],50:[2,40],51:[2,40],52:[2,40],56:[2,40],59:[2,40],62:[2,40],64:[2,40]},{5:[2,12],13:[2,12],14:[2,12],17:[2,12],25:[2,12],28:[2,12],31:[2,12],34:[2,12],37:[2,12],39:[2,12],40:[2,12],42:[2,12]},{38:87,56:[1,30],63:29},{30:46,31:[1,48],33:47,34:[1,49],35:89,36:88,37:[2,54]},{27:[2,52],32:90,58:91,59:[1,56]},{37:[2,17]},{5:[2,13],13:[2,13],14:[2,13],17:[2,13],25:[2,13],28:[2,13],31:[2,13],34:[2,13],37:[2,13],39:[2,13],40:[2,13],42:[2,13]},{13:[2,14],14:[2,14],17:[2,14],25:[2,14],28:[2,14],31:[2,14],34:[2,14],37:[2,14],39:[2,14],40:[2,14],42:[2,14]},{56:[1,93],61:[1,92]},{56:[2,62],61:[2,62]},{13:[2,15],14:[2,15],17:[2,15],25:[2,15],28:[2,15],34:[2,15],37:[2,15],39:[2,15],40:[2,15],42:[2,15]},{52:[1,94]},{19:[2,61],27:[2,61],41:[2,61],52:[2,61],56:[2,61],59:[2,61]},{57:[1,86]},{38:63,46:67,47:95,48:[1,64],49:[1,65],50:[1,66],51:[1,68],56:[1,30],62:[1,28],63:29},{27:[1,96]},{37:[2,18]},{37:[2,55]},{27:[1,97]},{27:[2,53]},{27:[2,34]},{56:[2,63],61:[2,63]},{19:[2,31],27:[2,31],41:[2,31],48:[2,31],49:[2,31],50:[2,31],51:[2,31],52:[2,31],56:[2,31],59:[2,31],62:[2,31]},{19:[2,33],27:[2,33],41:[2,33],52:[2,33],56:[2,33],59:[2,33]},{5:[2,20],13:[2,20],14:[2,20],17:[2,20],25:[2,20],28:[2,20],31:[2,20],34:[2,20],37:[2,20],39:[2,20],40:[2,20],42:[2,20]},{13:[2,16],14:[2,16],17:[2,16],25:[2,16],28:[2,16],31:[2,16],34:[2,16],37:[2,16],39:[2,16],40:[2,16],42:[2,16]}],\n    defaultActions: {4:[2,1],45:[2,45],47:[2,19],51:[2,47],55:[2,49],58:[2,51],59:[2,11],77:[2,17],88:[2,18],89:[2,55],91:[2,53],92:[2,34]},\n    parseError: function parseError(str, hash) {\n        throw new Error(str);\n    },\n    parse: function parse(input) {\n        var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n        this.lexer.setInput(input);\n        this.lexer.yy = this.yy;\n        this.yy.lexer = this.lexer;\n        this.yy.parser = this;\n        if (typeof this.lexer.yylloc == \"undefined\")\n            this.lexer.yylloc = {};\n        var yyloc = this.lexer.yylloc;\n        lstack.push(yyloc);\n        var ranges = this.lexer.options && this.lexer.options.ranges;\n        if (typeof this.yy.parseError === \"function\")\n            this.parseError = this.yy.parseError;\n        function popStack(n) {\n            stack.length = stack.length - 2 * n;\n            vstack.length = vstack.length - n;\n            lstack.length = lstack.length - n;\n        }\n        function lex() {\n            var token;\n            token = self.lexer.lex() || 1;\n            if (typeof token !== \"number\") {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n        var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n        while (true) {\n            state = stack[stack.length - 1];\n            if (this.defaultActions[state]) {\n                action = this.defaultActions[state];\n            } else {\n                if (symbol === null || typeof symbol == \"undefined\") {\n                    symbol = lex();\n                }\n                action = table[state] && table[state][symbol];\n            }\n            if (typeof action === \"undefined\" || !action.length || !action[0]) {\n                var errStr = \"\";\n                if (!recovering) {\n                    expected = [];\n                    for (p in table[state])\n                        if (this.terminals_[p] && p > 2) {\n                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n                        }\n                    if (this.lexer.showPosition) {\n                        errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                    } else {\n                        errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                    }\n                    this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n                }\n            }\n            if (action[0] instanceof Array && action.length > 1) {\n                throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n            }\n            switch (action[0]) {\n            case 1:\n                stack.push(symbol);\n                vstack.push(this.lexer.yytext);\n                lstack.push(this.lexer.yylloc);\n                stack.push(action[1]);\n                symbol = null;\n                if (!preErrorSymbol) {\n                    yyleng = this.lexer.yyleng;\n                    yytext = this.lexer.yytext;\n                    yylineno = this.lexer.yylineno;\n                    yyloc = this.lexer.yylloc;\n                    if (recovering > 0)\n                        recovering--;\n                } else {\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n            case 2:\n                len = this.productions_[action[1]][1];\n                yyval.$ = vstack[vstack.length - len];\n                yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n                if (ranges) {\n                    yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                }\n                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n                if (typeof r !== \"undefined\") {\n                    return r;\n                }\n                if (len) {\n                    stack = stack.slice(0, -1 * len * 2);\n                    vstack = vstack.slice(0, -1 * len);\n                    lstack = lstack.slice(0, -1 * len);\n                }\n                stack.push(this.productions_[action[1]][0]);\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                stack.push(newState);\n                break;\n            case 3:\n                return true;\n            }\n        }\n        return true;\n    }\n    };\n    /* Jison generated lexer */\n    var lexer = (function(){\n    var lexer = ({EOF:1,\n    parseError:function parseError(str, hash) {\n            if (this.yy.parser) {\n                this.yy.parser.parseError(str, hash);\n            } else {\n                throw new Error(str);\n            }\n        },\n    setInput:function (input) {\n            this._input = input;\n            this._more = this._less = this.done = false;\n            this.yylineno = this.yyleng = 0;\n            this.yytext = this.matched = this.match = '';\n            this.conditionStack = ['INITIAL'];\n            this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n            if (this.options.ranges) this.yylloc.range = [0,0];\n            this.offset = 0;\n            return this;\n        },\n    input:function () {\n            var ch = this._input[0];\n            this.yytext += ch;\n            this.yyleng++;\n            this.offset++;\n            this.match += ch;\n            this.matched += ch;\n            var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) {\n                this.yylineno++;\n                this.yylloc.last_line++;\n            } else {\n                this.yylloc.last_column++;\n            }\n            if (this.options.ranges) this.yylloc.range[1]++;\n\n            this._input = this._input.slice(1);\n            return ch;\n        },\n    unput:function (ch) {\n            var len = ch.length;\n            var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n            this._input = ch + this._input;\n            this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n            //this.yyleng -= len;\n            this.offset -= len;\n            var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n            this.match = this.match.substr(0, this.match.length-1);\n            this.matched = this.matched.substr(0, this.matched.length-1);\n\n            if (lines.length-1) this.yylineno -= lines.length-1;\n            var r = this.yylloc.range;\n\n            this.yylloc = {first_line: this.yylloc.first_line,\n              last_line: this.yylineno+1,\n              first_column: this.yylloc.first_column,\n              last_column: lines ?\n                  (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n                  this.yylloc.first_column - len\n              };\n\n            if (this.options.ranges) {\n                this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n            }\n            return this;\n        },\n    more:function () {\n            this._more = true;\n            return this;\n        },\n    less:function (n) {\n            this.unput(this.match.slice(n));\n        },\n    pastInput:function () {\n            var past = this.matched.substr(0, this.matched.length - this.match.length);\n            return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n        },\n    upcomingInput:function () {\n            var next = this.match;\n            if (next.length < 20) {\n                next += this._input.substr(0, 20-next.length);\n            }\n            return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n        },\n    showPosition:function () {\n            var pre = this.pastInput();\n            var c = new Array(pre.length + 1).join(\"-\");\n            return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n        },\n    next:function () {\n            if (this.done) {\n                return this.EOF;\n            }\n            if (!this._input) this.done = true;\n\n            var token,\n                match,\n                tempMatch,\n                index,\n                col,\n                lines;\n            if (!this._more) {\n                this.yytext = '';\n                this.match = '';\n            }\n            var rules = this._currentRules();\n            for (var i=0;i < rules.length; i++) {\n                tempMatch = this._input.match(this.rules[rules[i]]);\n                if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                    match = tempMatch;\n                    index = i;\n                    if (!this.options.flex) break;\n                }\n            }\n            if (match) {\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) this.yylineno += lines.length;\n                this.yylloc = {first_line: this.yylloc.last_line,\n                               last_line: this.yylineno+1,\n                               first_column: this.yylloc.last_column,\n                               last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n                if (this.done && this._input) this.done = false;\n                if (token) return token;\n                else return;\n            }\n            if (this._input === \"\") {\n                return this.EOF;\n            } else {\n                return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                        {text: \"\", token: null, line: this.yylineno});\n            }\n        },\n    lex:function lex() {\n            var r = this.next();\n            if (typeof r !== 'undefined') {\n                return r;\n            } else {\n                return this.lex();\n            }\n        },\n    begin:function begin(condition) {\n            this.conditionStack.push(condition);\n        },\n    popState:function popState() {\n            return this.conditionStack.pop();\n        },\n    _currentRules:function _currentRules() {\n            return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n        },\n    topState:function () {\n            return this.conditionStack[this.conditionStack.length-2];\n        },\n    pushState:function begin(condition) {\n            this.begin(condition);\n        }});\n    lexer.options = {};\n    lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\n\n    function strip(start, end) {\n      return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng-end);\n    }\n\n\n    var YYSTATE=YY_START\n    switch($avoiding_name_collisions) {\n    case 0:\n                                       if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                         strip(0,1);\n                                         this.begin(\"mu\");\n                                       } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                         strip(0,1);\n                                         this.begin(\"emu\");\n                                       } else {\n                                         this.begin(\"mu\");\n                                       }\n                                       if(yy_.yytext) return 14;\n                                     \n    break;\n    case 1:return 14;\n    break;\n    case 2:\n                                       this.popState();\n                                       return 14;\n                                     \n    break;\n    case 3:\n                                      yy_.yytext = yy_.yytext.substr(5, yy_.yyleng-9);\n                                      this.popState();\n                                      return 16;\n                                     \n    break;\n    case 4: return 14; \n    break;\n    case 5:\n      this.popState();\n      return 13;\n\n    break;\n    case 6:return 51;\n    break;\n    case 7:return 52;\n    break;\n    case 8: return 17; \n    break;\n    case 9:\n                                      this.popState();\n                                      this.begin('raw');\n                                      return 19;\n                                     \n    break;\n    case 10:return 42;\n    break;\n    case 11:return 25;\n    break;\n    case 12:return 37;\n    break;\n    case 13:this.popState(); return 34;\n    break;\n    case 14:this.popState(); return 34;\n    break;\n    case 15:return 28;\n    break;\n    case 16:return 31;\n    break;\n    case 17:return 40;\n    break;\n    case 18:return 39;\n    break;\n    case 19:\n      this.unput(yy_.yytext);\n      this.popState();\n      this.begin('com');\n\n    break;\n    case 20:\n      this.popState();\n      return 13;\n\n    break;\n    case 21:return 39;\n    break;\n    case 22:return 57;\n    break;\n    case 23:return 56;\n    break;\n    case 24:return 56;\n    break;\n    case 25:return 64;\n    break;\n    case 26:// ignore whitespace\n    break;\n    case 27:this.popState(); return 41;\n    break;\n    case 28:this.popState(); return 27;\n    break;\n    case 29:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 48;\n    break;\n    case 30:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 48;\n    break;\n    case 31:return 62;\n    break;\n    case 32:return 50;\n    break;\n    case 33:return 50;\n    break;\n    case 34:return 49;\n    break;\n    case 35:return 59;\n    break;\n    case 36:return 61;\n    break;\n    case 37:return 56;\n    break;\n    case 38:yy_.yytext = strip(1,2); return 56;\n    break;\n    case 39:return 'INVALID';\n    break;\n    case 40:return 5;\n    break;\n    }\n    };\n    lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]*?(?=(\\{\\{\\{\\{\\/)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[[^\\]]*\\])/,/^(?:.)/,/^(?:$)/];\n    lexer.conditions = {\"mu\":{\"rules\":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[5],\"inclusive\":false},\"raw\":{\"rules\":[3,4],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,40],\"inclusive\":true}};\n    return lexer;})()\n    parser.lexer = lexer;\n    function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser;\n    })();__exports__[\"default\"] = handlebars;\n    /* jshint ignore:end */\n  });\ndefine(\"htmlbars-syntax/handlebars/compiler/visitor\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function Visitor() {}\n\n    Visitor.prototype = {\n      constructor: Visitor,\n\n      accept: function(object) {\n        return object && this[object.type](object);\n      },\n\n      Program: function(program) {\n        var body = program.body,\n            i, l;\n\n        for(i=0, l=body.length; i<l; i++) {\n          this.accept(body[i]);\n        }\n      },\n\n      MustacheStatement: function(mustache) {\n        this.accept(mustache.sexpr);\n      },\n\n      BlockStatement: function(block) {\n        this.accept(block.sexpr);\n        this.accept(block.program);\n        this.accept(block.inverse);\n      },\n\n      PartialStatement: function(partial) {\n        this.accept(partial.partialName);\n        this.accept(partial.context);\n        this.accept(partial.hash);\n      },\n\n      ContentStatement: function(content) {},\n      CommentStatement: function(comment) {},\n\n      SubExpression: function(sexpr) {\n        var params = sexpr.params, paramStrings = [], hash;\n\n        this.accept(sexpr.path);\n        for(var i=0, l=params.length; i<l; i++) {\n          this.accept(params[i]);\n        }\n        this.accept(sexpr.hash);\n      },\n\n      PathExpression: function(path) {},\n\n      StringLiteral: function(string) {},\n      NumberLiteral: function(number) {},\n      BooleanLiteral: function(bool) {},\n\n      Hash: function(hash) {\n        var pairs = hash.pairs;\n\n        for(var i=0, l=pairs.length; i<l; i++) {\n          this.accept(pairs[i]);\n        }\n      },\n      HashPair: function(pair) {\n        this.accept(pair.value);\n      }\n    };\n\n    __exports__[\"default\"] = Visitor;\n  });\ndefine(\"htmlbars-syntax/handlebars/compiler/whitespace-control\",\n  [\"./visitor\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Visitor = __dependency1__[\"default\"];\n\n    function WhitespaceControl() {\n    }\n    WhitespaceControl.prototype = new Visitor();\n\n    WhitespaceControl.prototype.Program = function(program) {\n      var isRoot = !this.isRootSeen;\n      this.isRootSeen = true;\n\n      var body = program.body;\n      for (var i = 0, l = body.length; i < l; i++) {\n        var current = body[i],\n            strip = this.accept(current);\n\n        if (!strip) {\n          continue;\n        }\n\n        var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n            _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n\n            openStandalone = strip.openStandalone && _isPrevWhitespace,\n            closeStandalone = strip.closeStandalone && _isNextWhitespace,\n            inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n        if (strip.close) {\n          omitRight(body, i, true);\n        }\n        if (strip.open) {\n          omitLeft(body, i, true);\n        }\n\n        if (inlineStandalone) {\n          omitRight(body, i);\n\n          if (omitLeft(body, i)) {\n            // If we are on a standalone node, save the indent info for partials\n            if (current.type === 'PartialStatement') {\n              // Pull out the whitespace from the final line\n              current.indent = (/([ \\t]+$)/).exec(body[i-1].original)[1];\n            }\n          }\n        }\n        if (openStandalone) {\n          omitRight((current.program || current.inverse).body);\n\n          // Strip out the previous content node if it's whitespace only\n          omitLeft(body, i);\n        }\n        if (closeStandalone) {\n          // Always strip the next node\n          omitRight(body, i);\n\n          omitLeft((current.inverse || current.program).body);\n        }\n      }\n\n      return program;\n    };\n    WhitespaceControl.prototype.BlockStatement = function(block) {\n      this.accept(block.program);\n      this.accept(block.inverse);\n\n      // Find the inverse program that is involed with whitespace stripping.\n      var program = block.program || block.inverse,\n          inverse = block.program && block.inverse,\n          firstInverse = inverse,\n          lastInverse = inverse;\n\n      if (inverse && inverse.chained) {\n        firstInverse = inverse.body[0].program;\n\n        // Walk the inverse chain to find the last inverse that is actually in the chain.\n        while (lastInverse.chained) {\n          lastInverse = lastInverse.body[lastInverse.body.length-1].program;\n        }\n      }\n\n      var strip = {\n        open: block.openStrip.open,\n        close: block.closeStrip.close,\n\n        // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n        // so our parent can determine if we actually are standalone\n        openStandalone: isNextWhitespace(program.body),\n        closeStandalone: isPrevWhitespace((firstInverse || program).body)\n      };\n\n      if (block.openStrip.close) {\n        omitRight(program.body, null, true);\n      }\n\n      if (inverse) {\n        var inverseStrip = block.inverseStrip;\n\n        if (inverseStrip.open) {\n          omitLeft(program.body, null, true);\n        }\n\n        if (inverseStrip.close) {\n          omitRight(firstInverse.body, null, true);\n        }\n        if (block.closeStrip.open) {\n          omitLeft(lastInverse.body, null, true);\n        }\n\n        // Find standalone else statments\n        if (isPrevWhitespace(program.body)\n            && isNextWhitespace(firstInverse.body)) {\n\n          omitLeft(program.body);\n          omitRight(firstInverse.body);\n        }\n      } else {\n        if (block.closeStrip.open) {\n          omitLeft(program.body, null, true);\n        }\n      }\n\n      return strip;\n    };\n\n    WhitespaceControl.prototype.MustacheStatement = function(mustache) {\n      return mustache.strip;\n    };\n\n    WhitespaceControl.prototype.PartialStatement = \n        WhitespaceControl.prototype.CommentStatement = function(node) {\n      var strip = node.strip || {};\n      return {\n        inlineStandalone: true,\n        open: strip.open,\n        close: strip.close\n      };\n    };\n\n\n    function isPrevWhitespace(body, i, isRoot) {\n      if (i === undefined) {\n        i = body.length;\n      }\n\n      // Nodes that end with newlines are considered whitespace (but are special\n      // cased for strip operations)\n      var prev = body[i-1],\n          sibling = body[i-2];\n      if (!prev) {\n        return isRoot;\n      }\n\n      if (prev.type === 'ContentStatement') {\n        return (sibling || !isRoot ? (/\\r?\\n\\s*?$/) : (/(^|\\r?\\n)\\s*?$/)).test(prev.original);\n      }\n    }\n    function isNextWhitespace(body, i, isRoot) {\n      if (i === undefined) {\n        i = -1;\n      }\n\n      var next = body[i+1],\n          sibling = body[i+2];\n      if (!next) {\n        return isRoot;\n      }\n\n      if (next.type === 'ContentStatement') {\n        return (sibling || !isRoot ? (/^\\s*?\\r?\\n/) : (/^\\s*?(\\r?\\n|$)/)).test(next.original);\n      }\n    }\n\n    // Marks the node to the right of the position as omitted.\n    // I.e. {{foo}}' ' will mark the ' ' node as omitted.\n    //\n    // If i is undefined, then the first child will be marked as such.\n    //\n    // If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n    // content is met.\n    function omitRight(body, i, multiple) {\n      var current = body[i == null ? 0 : i + 1];\n      if (!current || current.type !== 'ContentStatement' || (!multiple && current.rightStripped)) {\n        return;\n      }\n\n      var original = current.value;\n      current.value = current.value.replace(multiple ? (/^\\s+/) : (/^[ \\t]*\\r?\\n?/), '');\n      current.rightStripped = current.value !== original;\n    }\n\n    // Marks the node to the left of the position as omitted.\n    // I.e. ' '{{foo}} will mark the ' ' node as omitted.\n    //\n    // If i is undefined then the last child will be marked as such.\n    //\n    // If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n    // content is met.\n    function omitLeft(body, i, multiple) {\n      var current = body[i == null ? body.length - 1 : i - 1];\n      if (!current || current.type !== 'ContentStatement' || (!multiple && current.leftStripped)) {\n        return;\n      }\n\n      // We omit the last node if it's whitespace only and not preceeded by a non-content node.\n      var original = current.value;\n      current.value = current.value.replace(multiple ? (/\\s+$/) : (/[ \\t]+$/), '');\n      current.leftStripped = current.value !== original;\n      return current.leftStripped;\n    }\n\n    __exports__[\"default\"] = WhitespaceControl;\n  });\ndefine(\"htmlbars-syntax/handlebars/exception\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\n    function Exception(message, node) {\n      var loc = node && node.loc,\n          line,\n          column;\n      if (loc) {\n        line = loc.start.line;\n        column = loc.start.column;\n\n        message += ' - ' + line + ':' + column;\n      }\n\n      var tmp = Error.prototype.constructor.call(this, message);\n\n      // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n      for (var idx = 0; idx < errorProps.length; idx++) {\n        this[errorProps[idx]] = tmp[errorProps[idx]];\n      }\n\n      if (loc) {\n        this.lineNumber = line;\n        this.column = column;\n      }\n    }\n\n    Exception.prototype = new Error();\n\n    __exports__[\"default\"] = Exception;\n  });\ndefine(\"htmlbars-syntax/handlebars/safe-string\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // Build out our basic SafeString type\n    function SafeString(string) {\n      this.string = string;\n    }\n\n    SafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n      return \"\" + this.string;\n    };\n\n    __exports__[\"default\"] = SafeString;\n  });\ndefine(\"htmlbars-syntax/handlebars/utils\",\n  [\"./safe-string\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /*jshint -W004 */\n    var SafeString = __dependency1__[\"default\"];\n\n    var escape = {\n      \"&\": \"&amp;\",\n      \"<\": \"&lt;\",\n      \">\": \"&gt;\",\n      '\"': \"&quot;\",\n      \"'\": \"&#x27;\",\n      \"`\": \"&#x60;\"\n    };\n\n    var badChars = /[&<>\"'`]/g;\n    var possible = /[&<>\"'`]/;\n\n    function escapeChar(chr) {\n      return escape[chr];\n    }\n\n    function extend(obj /* , ...source */) {\n      for (var i = 1; i < arguments.length; i++) {\n        for (var key in arguments[i]) {\n          if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n            obj[key] = arguments[i][key];\n          }\n        }\n      }\n\n      return obj;\n    }\n\n    __exports__.extend = extend;var toString = Object.prototype.toString;\n    __exports__.toString = toString;\n    // Sourced from lodash\n    // https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n    var isFunction = function(value) {\n      return typeof value === 'function';\n    };\n    // fallback for older versions of Chrome and Safari\n    /* istanbul ignore next */\n    if (isFunction(/x/)) {\n      isFunction = function(value) {\n        return typeof value === 'function' && toString.call(value) === '[object Function]';\n      };\n    }\n    var isFunction;\n    __exports__.isFunction = isFunction;\n    /* istanbul ignore next */\n    var isArray = Array.isArray || function(value) {\n      return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;\n    };\n    __exports__.isArray = isArray;\n\n    function escapeExpression(string) {\n      // don't escape SafeStrings, since they're already safe\n      if (string && string.toHTML) {\n        return string.toHTML();\n      } else if (string == null) {\n        return \"\";\n      } else if (!string) {\n        return string + '';\n      }\n\n      // Force a string conversion as this will be done by the append regardless and\n      // the regex test will do this transparently behind the scenes, causing issues if\n      // an object's to string has escaped characters in it.\n      string = \"\" + string;\n\n      if(!possible.test(string)) { return string; }\n      return string.replace(badChars, escapeChar);\n    }\n\n    __exports__.escapeExpression = escapeExpression;function isEmpty(value) {\n      if (!value && value !== 0) {\n        return true;\n      } else if (isArray(value) && value.length === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    __exports__.isEmpty = isEmpty;function appendContextPath(contextPath, id) {\n      return (contextPath ? contextPath + '.' : '') + id;\n    }\n\n    __exports__.appendContextPath = appendContextPath;\n  });\ndefine(\"htmlbars-syntax/node-handlers\",\n  [\"./builders\",\"../htmlbars-util/array-utils\",\"./utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var buildProgram = __dependency1__.buildProgram;\n    var buildBlock = __dependency1__.buildBlock;\n    var buildHash = __dependency1__.buildHash;\n    var forEach = __dependency2__.forEach;\n    var appendChild = __dependency3__.appendChild;\n\n    var nodeHandlers = {\n\n      Program: function(program) {\n        var body = [];\n        var node = buildProgram(body, program.blockParams);\n        var i, l = program.body.length;\n\n        this.elementStack.push(node);\n\n        if (l === 0) { return this.elementStack.pop(); }\n\n        for (i = 0; i < l; i++) {\n          this.acceptNode(program.body[i]);\n        }\n\n        this.acceptToken(this.tokenizer.tokenizeEOF());\n\n        // Ensure that that the element stack is balanced properly.\n        var poppedNode = this.elementStack.pop();\n        if (poppedNode !== node) {\n          throw new Error(\"Unclosed element `\" + poppedNode.tag + \"` (on line \" + poppedNode.loc.start.line + \").\");\n        }\n\n        return node;\n      },\n\n      BlockStatement: function(block) {\n        delete block.inverseStrip;\n        delete block.openString;\n        delete block.closeStrip;\n\n        if (this.tokenizer.state === 'comment') {\n          this.tokenizer.addChar('{{' + this.sourceForMustache(block) + '}}');\n          return;\n        }\n\n        switchToHandlebars(this);\n        this.acceptToken(block);\n\n        var sexpr = this.acceptNode(block.sexpr);\n        var program = block.program ? this.acceptNode(block.program) : null;\n        var inverse = block.inverse ? this.acceptNode(block.inverse) : null;\n\n        var node = buildBlock(sexpr, program, inverse);\n        var parentProgram = this.currentElement();\n        appendChild(parentProgram, node);\n      },\n\n      MustacheStatement: function(mustache) {\n        delete mustache.strip;\n\n        if (this.tokenizer.state === 'comment') {\n          this.tokenizer.addChar('{{' + this.sourceForMustache(mustache) + '}}');\n          return;\n        }\n\n        this.acceptNode(mustache.sexpr);\n        switchToHandlebars(this);\n        this.acceptToken(mustache);\n\n        return mustache;\n      },\n\n      ContentStatement: function(content) {\n        var changeLines = 0;\n        if (content.rightStripped) {\n          changeLines = leadingNewlineDifference(content.original, content.value);\n        }\n\n        this.tokenizer.line = this.tokenizer.line + changeLines;\n\n        var tokens = this.tokenizer.tokenizePart(content.value);\n\n        return forEach(tokens, this.acceptToken, this);\n      },\n\n      CommentStatement: function(comment) {\n        return comment;\n      },\n\n      PartialStatement: function(partial) {\n        appendChild(this.currentElement(), partial);\n        return partial;\n      },\n\n      SubExpression: function(sexpr) {\n        delete sexpr.isHelper;\n\n        this.acceptNode(sexpr.path);\n\n        if (sexpr.params) {\n          for (var i = 0; i < sexpr.params.length; i++) {\n            this.acceptNode(sexpr.params[i]);\n          }\n        } else {\n          sexpr.params = [];\n        }\n\n        if (sexpr.hash) {\n          this.acceptNode(sexpr.hash);\n        } else {\n          sexpr.hash = buildHash();\n        }\n\n        return sexpr;\n      },\n\n      PathExpression: function(path) {\n        delete path.data;\n        delete path.depth;\n\n        return path;\n      },\n\n      Hash: function(hash) {\n        for (var i = 0; i < hash.pairs.length; i++) {\n          this.acceptNode(hash.pairs[i].value);\n        }\n\n        return hash;\n      },\n\n      StringLiteral: function() {},\n      BooleanLiteral: function() {},\n      NumberLiteral: function() {}\n    };\n\n    function switchToHandlebars(processor) {\n      var token = processor.tokenizer.token;\n\n      if (token && token.type === 'Chars') {\n        processor.acceptToken(token);\n        processor.tokenizer.token = null;\n      }\n    }\n\n    function leadingNewlineDifference(original, value) {\n      if (value === '') {\n        // if it is empty, just return the count of newlines\n        // in original\n        return original.split(\"\\n\").length - 1;\n      }\n\n      // otherwise, return the number of newlines prior to\n      // `value`\n      var difference = original.split(value)[0];\n      var lines = difference.split(/\\n/);\n\n      return lines.length - 1;\n    }\n\n    __exports__[\"default\"] = nodeHandlers;\n  });\ndefine(\"htmlbars-syntax/parser\",\n  [\"./handlebars/compiler/base\",\"./tokenizer\",\"../simple-html-tokenizer/entity-parser\",\"../simple-html-tokenizer/char-refs/full\",\"./node-handlers\",\"./token-handlers\",\"../htmlbars-syntax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __dependency7__, __exports__) {\n    \"use strict\";\n    var parse = __dependency1__.parse;\n    var Tokenizer = __dependency2__.Tokenizer;\n    var EntityParser = __dependency3__[\"default\"];\n    var fullCharRefs = __dependency4__[\"default\"];\n    var nodeHandlers = __dependency5__[\"default\"];\n    var tokenHandlers = __dependency6__[\"default\"];\n\n    // this should be:\n    // `import * from \"../htmlbars-syntax\";\n    //\n    // But this version of the transpiler does not support it properly\n    var syntax = __dependency7__;\n\n    var splitLines;\n    // IE8 throws away blank pieces when splitting strings with a regex\n    // So we split using a string instead as appropriate\n    if (\"foo\\n\\nbar\".split(/\\n/).length === 2) {\n      splitLines = function(str) {\n         var clean = str.replace(/\\r\\n?/g, '\\n');\n         return clean.split('\\n');\n      };\n    } else {\n      splitLines = function(str) {\n        return str.split(/(?:\\r\\n?|\\n)/g);\n      };\n    }\n\n    function preprocess(html, options) {\n      var ast = (typeof html === 'object') ? html : parse(html);\n      var combined = new HTMLProcessor(html, options).acceptNode(ast);\n\n      if (options && options.plugins && options.plugins.ast) {\n        for (var i = 0, l = options.plugins.ast.length; i < l; i++) {\n          var plugin = new options.plugins.ast[i]();\n\n          plugin.syntax = syntax;\n\n          combined = plugin.transform(combined);\n        }\n      }\n\n      return combined;\n    }\n\n    __exports__.preprocess = preprocess;function HTMLProcessor(source, options) {\n      this.options = options || {};\n      this.elementStack = [];\n      this.tokenizer = new Tokenizer('', new EntityParser(fullCharRefs));\n      this.nodeHandlers = nodeHandlers;\n      this.tokenHandlers = tokenHandlers;\n\n      if (typeof source === 'string') {\n        this.source = splitLines(source);\n      }\n    }\n\n    HTMLProcessor.prototype.acceptNode = function(node) {\n      return this.nodeHandlers[node.type].call(this, node);\n    };\n\n    HTMLProcessor.prototype.acceptToken = function(token) {\n      if (token) {\n        return this.tokenHandlers[token.type].call(this, token);\n      }\n    };\n\n    HTMLProcessor.prototype.currentElement = function() {\n      return this.elementStack[this.elementStack.length - 1];\n    };\n\n    HTMLProcessor.prototype.sourceForMustache = function(mustache) {\n      var firstLine = mustache.loc.start.line - 1;\n      var lastLine = mustache.loc.end.line - 1;\n      var currentLine = firstLine - 1;\n      var firstColumn = mustache.loc.start.column + 2;\n      var lastColumn = mustache.loc.end.column - 2;\n      var string = [];\n      var line;\n\n      if (!this.source) {\n        return '{{' + mustache.path.id.original + '}}';\n      }\n\n      while (currentLine < lastLine) {\n        currentLine++;\n        line = this.source[currentLine];\n\n        if (currentLine === firstLine) {\n          if (firstLine === lastLine) {\n            string.push(line.slice(firstColumn, lastColumn));\n          } else {\n            string.push(line.slice(firstColumn));\n          }\n        } else if (currentLine === lastLine) {\n          string.push(line.slice(0, lastColumn));\n        } else {\n          string.push(line);\n        }\n      }\n\n      return string.join('\\n');\n    };\n  });\ndefine(\"htmlbars-syntax/token-handlers\",\n  [\"../htmlbars-util/array-utils\",\"./builders\",\"./utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var forEach = __dependency1__.forEach;\n    var buildProgram = __dependency2__.buildProgram;\n    var buildComponent = __dependency2__.buildComponent;\n    var buildElement = __dependency2__.buildElement;\n    var buildComment = __dependency2__.buildComment;\n    var buildText = __dependency2__.buildText;\n    var appendChild = __dependency3__.appendChild;\n    var parseComponentBlockParams = __dependency3__.parseComponentBlockParams;\n\n    // The HTML elements in this list are speced by\n    // http://www.w3.org/TR/html-markup/syntax.html#syntax-elements,\n    // and will be forced to close regardless of if they have a\n    // self-closing /> at the end.\n    var voidTagNames = \"area base br col command embed hr img input keygen link meta param source track wbr\";\n    var voidMap = {};\n\n    forEach(voidTagNames.split(\" \"), function(tagName) {\n      voidMap[tagName] = true;\n    });\n\n    // Except for `mustache`, all tokens are only allowed outside of\n    // a start or end tag.\n    var tokenHandlers = {\n      Comment: function(token) {\n        var current = this.currentElement();\n        var comment = buildComment(token.chars);\n        appendChild(current, comment);\n      },\n\n      Chars: function(token) {\n        var current = this.currentElement();\n        var text = buildText(token.chars);\n        appendChild(current, text);\n      },\n\n      StartTag: function(tag) {\n        var element = buildElement(tag.tagName, tag.attributes, tag.helpers || [], []);\n        element.loc = {\n          start: { line: tag.firstLine, column: tag.firstColumn},\n          end: { line: null, column: null}\n        };\n\n        this.elementStack.push(element);\n        if (voidMap.hasOwnProperty(tag.tagName) || tag.selfClosing) {\n          tokenHandlers.EndTag.call(this, tag);\n        }\n      },\n\n      BlockStatement: function(/*block*/) {\n        if (this.tokenizer.state === 'comment') {\n          return;\n        } else if (this.tokenizer.state !== 'data') {\n          throw new Error(\"A block may only be used inside an HTML element or another block.\");\n        }\n      },\n\n      MustacheStatement: function(mustache) {\n        var tokenizer = this.tokenizer;\n\n        switch(tokenizer.state) {\n          // Tag helpers\n          case \"tagName\":\n            tokenizer.addTagHelper(mustache.sexpr);\n            tokenizer.state = \"beforeAttributeName\";\n            return;\n          case \"beforeAttributeName\":\n            tokenizer.addTagHelper(mustache.sexpr);\n            return;\n          case \"attributeName\":\n          case \"afterAttributeName\":\n            tokenizer.finalizeAttributeValue();\n            tokenizer.addTagHelper(mustache.sexpr);\n            tokenizer.state = \"beforeAttributeName\";\n            return;\n          case \"afterAttributeValueQuoted\":\n            tokenizer.addTagHelper(mustache.sexpr);\n            tokenizer.state = \"beforeAttributeName\";\n            return;\n\n          // Attribute values\n          case \"beforeAttributeValue\":\n            tokenizer.markAttributeQuoted(false);\n            tokenizer.addToAttributeValue(mustache);\n            tokenizer.state = 'attributeValueUnquoted';\n            return;\n          case \"attributeValueDoubleQuoted\":\n          case \"attributeValueSingleQuoted\":\n          case \"attributeValueUnquoted\":\n            tokenizer.addToAttributeValue(mustache);\n            return;\n\n          // TODO: Only append child when the tokenizer state makes\n          // sense to do so, otherwise throw an error.\n          default:\n            appendChild(this.currentElement(), mustache);\n        }\n      },\n\n      EndTag: function(tag) {\n        var element = this.elementStack.pop();\n        var parent = this.currentElement();\n        var disableComponentGeneration = this.options.disableComponentGeneration === true;\n\n        validateEndTag(tag, element);\n\n        if (disableComponentGeneration || element.tag.indexOf(\"-\") === -1) {\n          appendChild(parent, element);\n        } else {\n          var program = buildProgram(element.children);\n          parseComponentBlockParams(element, program);\n          var component = buildComponent(element.tag, element.attributes, program);\n          appendChild(parent, component);\n        }\n\n      }\n\n    };\n\n    function validateEndTag(tag, element) {\n      var error;\n\n      if (voidMap[tag.tagName] && element.tag === undefined) {\n        // For void elements, we check element.tag is undefined because endTag is called by the startTag token handler in\n        // the normal case, so checking only voidMap[tag.tagName] would lead to an error being thrown on the opening tag.\n        error = \"Invalid end tag \" + formatEndTagInfo(tag) + \" (void elements cannot have end tags).\";\n      } else if (element.tag === undefined) {\n        error = \"Closing tag \" + formatEndTagInfo(tag) + \" without an open tag.\";\n      } else if (element.tag !== tag.tagName) {\n        error = \"Closing tag \" + formatEndTagInfo(tag) + \" did not match last open tag `\" + element.tag + \"` (on line \" +\n                element.loc.start.line + \").\";\n      }\n\n      if (error) { throw new Error(error); }\n    }\n\n    function formatEndTagInfo(tag) {\n      return \"`\" + tag.tagName + \"` (on line \" + tag.lastLine + \")\";\n    }\n\n    __exports__[\"default\"] = tokenHandlers;\n  });\ndefine(\"htmlbars-syntax/tokenizer\",\n  [\"../simple-html-tokenizer\",\"./utils\",\"../htmlbars-util/array-utils\",\"./builders\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Tokenizer = __dependency1__.Tokenizer;\n    var isHelper = __dependency2__.isHelper;\n    var map = __dependency3__.map;\n    var builders = __dependency4__[\"default\"];\n\n    Tokenizer.prototype.createAttribute = function(char) {\n      if (this.token.type === 'EndTag') {\n        throw new Error('Invalid end tag: closing tag must not have attributes, in ' + formatTokenInfo(this) + '.');\n      }\n      this.currentAttribute = builders.attr(char.toLowerCase(), [], null);\n      this.token.attributes.push(this.currentAttribute);\n      this.state = 'attributeName';\n    };\n\n    Tokenizer.prototype.markAttributeQuoted = function(value) {\n      this.currentAttribute.quoted = value;\n    };\n\n    Tokenizer.prototype.addToAttributeName = function(char) {\n      this.currentAttribute.name += char;\n    };\n\n    Tokenizer.prototype.addToAttributeValue = function(char) {\n      var value = this.currentAttribute.value;\n\n      if (!this.currentAttribute.quoted && char === '/') {\n        throw new Error(\"A space is required between an unquoted attribute value and `/`, in \" + formatTokenInfo(this) +\n                        '.');\n      }\n      if (!this.currentAttribute.quoted && value.length > 0 &&\n          (char.type === 'MustacheStatement' || value[0].type === 'MustacheStatement')) {\n        throw new Error(\"Unquoted attribute value must be a single string or mustache (on line \" + this.line + \")\");\n      }\n\n      if (typeof char === 'object') {\n        if (char.type === 'MustacheStatement') {\n          value.push(char);\n        } else {\n          throw new Error(\"Unsupported node in attribute value: \" + char.type);\n        }\n      } else {\n        if (value.length > 0 && value[value.length - 1].type === 'TextNode') {\n          value[value.length - 1].chars += char;\n        } else {\n          value.push(builders.text(char));\n        }\n      }\n    };\n\n    Tokenizer.prototype.finalizeAttributeValue = function() {\n      if (this.currentAttribute) {\n        this.currentAttribute.value = prepareAttributeValue(this.currentAttribute);\n        delete this.currentAttribute.quoted;\n        delete this.currentAttribute;\n      }\n    };\n\n    Tokenizer.prototype.addTagHelper = function(helper) {\n      var helpers = this.token.helpers = this.token.helpers || [];\n      helpers.push(helper);\n    };\n\n    function prepareAttributeValue(attr) {\n      var parts = attr.value;\n      var length = parts.length;\n\n      if (length === 0) {\n        return builders.text('');\n      } else if (length === 1 && parts[0].type === \"TextNode\") {\n        return parts[0];\n      } else if (!attr.quoted) {\n        return parts[0];\n      } else {\n        return builders.concat(map(parts, prepareConcatPart));\n      }\n    }\n\n    function prepareConcatPart(node) {\n      switch (node.type) {\n        case 'TextNode': return builders.string(node.chars);\n        case 'MustacheStatement': return unwrapMustache(node);\n        default:\n          throw new Error(\"Unsupported node in quoted attribute value: \" + node.type);\n      }\n    }\n\n    function formatTokenInfo(tokenizer) {\n      return '`' + tokenizer.token.tagName + '` (on line ' + tokenizer.line + ')';\n    }\n\n    function unwrapMustache(mustache) {\n      if (isHelper(mustache.sexpr)) {\n        return mustache.sexpr;\n      } else {\n        return mustache.sexpr.path;\n      }\n    }\n\n    __exports__.unwrapMustache = unwrapMustache;__exports__.Tokenizer = Tokenizer;\n  });\ndefine(\"htmlbars-syntax/utils\",\n  [\"../htmlbars-util/array-utils\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var indexOfArray = __dependency1__.indexOfArray;\n    // Regex to validate the identifier for block parameters. \n    // Based on the ID validation regex in Handlebars.\n\n    var ID_INVERSE_PATTERN = /[!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]/;\n\n    // Checks the component's attributes to see if it uses block params.\n    // If it does, registers the block params with the program and\n    // removes the corresponding attributes from the element.\n\n    function parseComponentBlockParams(element, program) {\n      var l = element.attributes.length;\n      var attrNames = [];\n\n      for (var i = 0; i < l; i++) {\n        attrNames.push(element.attributes[i].name);\n      }\n\n      var asIndex = indexOfArray(attrNames, 'as');\n\n      if (asIndex !== -1 && l > asIndex && attrNames[asIndex + 1].charAt(0) === '|') {\n        // Some basic validation, since we're doing the parsing ourselves\n        var paramsString = attrNames.slice(asIndex).join(' ');\n        if (paramsString.charAt(paramsString.length - 1) !== '|' || paramsString.match(/\\|/g).length !== 2) {\n          throw new Error('Invalid block parameters syntax: \\'' + paramsString + '\\'');\n        }\n\n        var params = [];\n        for (i = asIndex + 1; i < l; i++) {\n          var param = attrNames[i].replace(/\\|/g, '');\n          if (param !== '') {\n            if (ID_INVERSE_PATTERN.test(param)) {\n              throw new Error('Invalid identifier for block parameters: \\'' + param + '\\' in \\'' + paramsString + '\\'');\n            }\n            params.push(param);\n          }\n        }\n\n        if (params.length === 0) {\n          throw new Error('Cannot use zero block parameters: \\'' + paramsString + '\\'');\n        }\n\n        element.attributes = element.attributes.slice(0, asIndex);\n        program.blockParams = params;\n      }\n    }\n\n    __exports__.parseComponentBlockParams = parseComponentBlockParams;function childrenFor(node) {\n      if (node.type === 'Program') {\n        return node.body;\n      }\n      if (node.type === 'ElementNode') {\n        return node.children;\n      }\n    }\n\n    __exports__.childrenFor = childrenFor;function appendChild(parent, node) {\n      childrenFor(parent).push(node);\n    }\n\n    __exports__.appendChild = appendChild;function isHelper(sexpr) {\n      return (sexpr.params && sexpr.params.length > 0) ||\n        (sexpr.hash && sexpr.hash.pairs.length > 0);\n    }\n\n    __exports__.isHelper = isHelper;\n  });\ndefine(\"htmlbars-syntax/walker\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function Walker(order) {\n      this.order = order;\n      this.stack = [];\n    }\n\n    __exports__[\"default\"] = Walker;\n\n    Walker.prototype.visit = function(node, callback) {\n      if (!node) {\n        return;\n      }\n\n      this.stack.push(node);\n\n      if (this.order === 'post') {\n        this.children(node, callback);\n        callback(node, this);\n      } else {\n        callback(node, this);\n        this.children(node, callback);\n      }\n\n      this.stack.pop();\n    };\n\n    var visitors = {\n      Program: function(walker, node, callback) {\n        for (var i = 0; i < node.body.length; i++) {\n          walker.visit(node.body[i], callback);\n        }\n      },\n\n      ElementNode: function(walker, node, callback) {\n        for (var i = 0; i < node.children.length; i++) {\n          walker.visit(node.children[i], callback);\n        }\n      },\n\n      BlockStatement: function(walker, node, callback) {\n        walker.visit(node.program, callback);\n        walker.visit(node.inverse, callback);\n      },\n\n      ComponentNode: function(walker, node, callback) {\n        walker.visit(node.program, callback);\n      }\n    };\n\n    Walker.prototype.children = function(node, callback) {\n      var visitor = visitors[node.type];\n      if (visitor) {\n        visitor(this, node, callback);\n      }\n    };\n  });\ndefine(\"htmlbars-test-helpers\",\n  [\"../simple-html-tokenizer\",\"../htmlbars-util/array-utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var tokenize = __dependency1__.tokenize;\n    var forEach = __dependency2__.forEach;\n\n    function equalInnerHTML(fragment, html) {\n      var actualHTML = normalizeInnerHTML(fragment.innerHTML);\n      QUnit.push(actualHTML === html, actualHTML, html);\n    }\n\n    __exports__.equalInnerHTML = equalInnerHTML;function equalHTML(node, html) {\n      var fragment;\n      if (!node.nodeType && node.length) {\n        fragment = document.createDocumentFragment();\n        while (node[0]) {\n          fragment.appendChild(node[0]);\n        }\n      } else {\n        fragment = node;\n      }\n\n      var div = document.createElement(\"div\");\n      div.appendChild(fragment.cloneNode(true));\n\n      equalInnerHTML(div, html);\n    }\n\n    __exports__.equalHTML = equalHTML;// IE8 removes comments and does other unspeakable things with innerHTML\n    var ie8GenerateTokensNeeded = (function() {\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!-- foobar -->\";\n      return div.innerHTML === \"\";\n    })();\n\n    function generateTokens(fragmentOrHtml) {\n      var div = document.createElement(\"div\");\n      if (typeof fragmentOrHtml === 'string') {\n        div.innerHTML = fragmentOrHtml;\n      } else {\n        div.appendChild(fragmentOrHtml.cloneNode(true));\n      }\n      if (ie8GenerateTokensNeeded) {\n        // IE8 drops comments and does other unspeakable things on `innerHTML`.\n        // So in that case we do it to both the expected and actual so that they match.\n        var div2 = document.createElement(\"div\");\n        div2.innerHTML = div.innerHTML;\n        div.innerHTML = div2.innerHTML;\n      }\n      return { tokens: tokenize(div.innerHTML), html: div.innerHTML };\n    }\n\n    function equalTokens(fragment, html, message) {\n      if (fragment.fragment) { fragment = fragment.fragment; }\n      if (html.fragment) { html = html.fragment; }\n\n      var fragTokens = generateTokens(fragment);\n      var htmlTokens = generateTokens(html);\n\n      function normalizeTokens(token) {\n        if (token.type === 'StartTag') {\n          token.attributes = token.attributes.sort(function(a,b){\n            if (a.name > b.name) {\n              return 1;\n            }\n            if (a.name < b.name) {\n              return -1;\n            }\n            return 0;\n          });\n        }\n      }\n\n      forEach(fragTokens.tokens, normalizeTokens);\n      forEach(htmlTokens.tokens, normalizeTokens);\n\n      var msg = \"Expected: \" + html + \"; Actual: \" + fragTokens.html;\n\n      if (message) { msg += \" (\" + message + \")\"; }\n\n      deepEqual(fragTokens.tokens, htmlTokens.tokens, msg);\n    }\n\n    __exports__.equalTokens = equalTokens;// detect weird IE8 html strings\n    var ie8InnerHTMLTestElement = document.createElement('div');\n    ie8InnerHTMLTestElement.setAttribute('id', 'womp');\n    var ie8InnerHTML = (ie8InnerHTMLTestElement.outerHTML.indexOf('id=womp') > -1);\n\n    // detect side-effects of cloning svg elements in IE9-11\n    var ieSVGInnerHTML = (function () {\n      if (!document.createElementNS) {\n        return false;\n      }\n      var div = document.createElement('div');\n      var node = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      div.appendChild(node);\n      var clone = div.cloneNode(true);\n      return clone.innerHTML === '<svg xmlns=\"http://www.w3.org/2000/svg\" />';\n    })();\n\n    function normalizeInnerHTML(actualHTML) {\n      if (ie8InnerHTML) {\n        // drop newlines in IE8\n        actualHTML = actualHTML.replace(/\\r\\n/gm, '');\n        // downcase ALLCAPS tags in IE8\n        actualHTML = actualHTML.replace(/<\\/?[A-Z\\-]+/gi, function(tag){\n          return tag.toLowerCase();\n        });\n        // quote ids in IE8\n        actualHTML = actualHTML.replace(/id=([^ >]+)/gi, function(match, id){\n          return 'id=\"'+id+'\"';\n        });\n        // IE8 adds ':' to some tags\n        // <keygen> becomes <:keygen>\n        actualHTML = actualHTML.replace(/<(\\/?):([^ >]+)/gi, function(match, slash, tag){\n          return '<'+slash+tag;\n        });\n\n        // Normalize the style attribute\n        actualHTML = actualHTML.replace(/style=\"(.+?)\"/gi, function(match, val){\n          return 'style=\"'+val.toLowerCase()+';\"';\n        });\n\n      }\n      if (ieSVGInnerHTML) {\n        // Replace `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"50%\" />` with `<svg height=\"50%\"></svg>`, etc.\n        // drop namespace attribute\n        actualHTML = actualHTML.replace(/ xmlns=\"[^\"]+\"/, '');\n        // replace self-closing elements\n        actualHTML = actualHTML.replace(/<([^ >]+) [^\\/>]*\\/>/gi, function(tag, tagName) {\n          return tag.slice(0, tag.length - 3) + '></' + tagName + '>';\n        });\n      }\n\n      return actualHTML;\n    }\n\n    __exports__.normalizeInnerHTML = normalizeInnerHTML;// detect weird IE8 checked element string\n    var checkedInput = document.createElement('input');\n    checkedInput.setAttribute('checked', 'checked');\n    var checkedInputString = checkedInput.outerHTML;\n    function isCheckedInputHTML(element) {\n      equal(element.outerHTML, checkedInputString);\n    }\n\n    __exports__.isCheckedInputHTML = isCheckedInputHTML;// check which property has the node's text content\n    var textProperty = document.createElement('div').textContent === undefined ? 'innerText' : 'textContent';\n    function getTextContent(el) {\n      // textNode\n      if (el.nodeType === 3) {\n        return el.nodeValue;\n      } else {\n        return el[textProperty];\n      }\n    }\n\n    __exports__.getTextContent = getTextContent;// IE8 does not have Object.create, so use a polyfill if needed.\n    // Polyfill based on Mozilla's (MDN)\n    function createObject(obj) {\n      if (typeof Object.create === 'function') {\n        return Object.create(obj);\n      } else {\n        var Temp = function() {};\n        Temp.prototype = obj;\n        return new Temp();\n      }\n    }\n\n    __exports__.createObject = createObject;\n  });\ndefine(\"htmlbars-util\",\n  [\"./htmlbars-util/safe-string\",\"./htmlbars-util/handlebars/utils\",\"./htmlbars-util/namespaces\",\"./htmlbars-util/morph-utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var SafeString = __dependency1__[\"default\"];\n    var escapeExpression = __dependency2__.escapeExpression;\n    var getAttrNamespace = __dependency3__.getAttrNamespace;\n    var validateChildMorphs = __dependency4__.validateChildMorphs;\n    var linkParams = __dependency4__.linkParams;\n    var dump = __dependency4__.dump;\n\n    __exports__.SafeString = SafeString;\n    __exports__.escapeExpression = escapeExpression;\n    __exports__.getAttrNamespace = getAttrNamespace;\n    __exports__.validateChildMorphs = validateChildMorphs;\n    __exports__.linkParams = linkParams;\n    __exports__.dump = dump;\n  });\ndefine(\"htmlbars-util/array-utils\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function forEach(array, callback, binding) {\n      var i, l;\n      if (binding === undefined) {\n        for (i = 0, l = array.length; i < l; i++) {\n          callback(array[i], i, array);\n        }\n      } else {\n        for (i = 0, l = array.length; i < l; i++) {\n          callback.call(binding, array[i], i, array);\n        }\n      }\n    }\n\n    __exports__.forEach = forEach;function map(array, callback) {\n      var output = [];\n      var i, l;\n\n      for (i = 0, l = array.length; i < l; i++) {\n        output.push(callback(array[i], i, array));\n      }\n\n      return output;\n    }\n\n    __exports__.map = map;var getIdx;\n    if (Array.prototype.indexOf) {\n      getIdx = function(array, obj, from){\n        return array.indexOf(obj, from);\n      };\n    } else {\n      getIdx = function(array, obj, from) {\n        if (from === undefined || from === null) {\n          from = 0;\n        } else if (from < 0) {\n          from = Math.max(0, array.length + from);\n        }\n        for (var i = from, l= array.length; i < l; i++) {\n          if (array[i] === obj) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n\n    var indexOfArray = getIdx;\n    __exports__.indexOfArray = indexOfArray;\n  });\ndefine(\"htmlbars-util/handlebars/safe-string\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // Build out our basic SafeString type\n    function SafeString(string) {\n      this.string = string;\n    }\n\n    SafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n      return \"\" + this.string;\n    };\n\n    __exports__[\"default\"] = SafeString;\n  });\ndefine(\"htmlbars-util/handlebars/utils\",\n  [\"./safe-string\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /*jshint -W004 */\n    var SafeString = __dependency1__[\"default\"];\n\n    var escape = {\n      \"&\": \"&amp;\",\n      \"<\": \"&lt;\",\n      \">\": \"&gt;\",\n      '\"': \"&quot;\",\n      \"'\": \"&#x27;\",\n      \"`\": \"&#x60;\"\n    };\n\n    var badChars = /[&<>\"'`]/g;\n    var possible = /[&<>\"'`]/;\n\n    function escapeChar(chr) {\n      return escape[chr];\n    }\n\n    function extend(obj /* , ...source */) {\n      for (var i = 1; i < arguments.length; i++) {\n        for (var key in arguments[i]) {\n          if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n            obj[key] = arguments[i][key];\n          }\n        }\n      }\n\n      return obj;\n    }\n\n    __exports__.extend = extend;var toString = Object.prototype.toString;\n    __exports__.toString = toString;\n    // Sourced from lodash\n    // https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n    var isFunction = function(value) {\n      return typeof value === 'function';\n    };\n    // fallback for older versions of Chrome and Safari\n    /* istanbul ignore next */\n    if (isFunction(/x/)) {\n      isFunction = function(value) {\n        return typeof value === 'function' && toString.call(value) === '[object Function]';\n      };\n    }\n    var isFunction;\n    __exports__.isFunction = isFunction;\n    /* istanbul ignore next */\n    var isArray = Array.isArray || function(value) {\n      return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;\n    };\n    __exports__.isArray = isArray;\n\n    function escapeExpression(string) {\n      // don't escape SafeStrings, since they're already safe\n      if (string && string.toHTML) {\n        return string.toHTML();\n      } else if (string == null) {\n        return \"\";\n      } else if (!string) {\n        return string + '';\n      }\n\n      // Force a string conversion as this will be done by the append regardless and\n      // the regex test will do this transparently behind the scenes, causing issues if\n      // an object's to string has escaped characters in it.\n      string = \"\" + string;\n\n      if(!possible.test(string)) { return string; }\n      return string.replace(badChars, escapeChar);\n    }\n\n    __exports__.escapeExpression = escapeExpression;function isEmpty(value) {\n      if (!value && value !== 0) {\n        return true;\n      } else if (isArray(value) && value.length === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    __exports__.isEmpty = isEmpty;function appendContextPath(contextPath, id) {\n      return (contextPath ? contextPath + '.' : '') + id;\n    }\n\n    __exports__.appendContextPath = appendContextPath;\n  });\ndefine(\"htmlbars-util/morph-utils\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /*globals console*/\n\n    function visitChildren(nodes, callback) {\n      if (!nodes || nodes.length === 0) { return; }\n\n      nodes = nodes.slice();\n\n      while (nodes.length) {\n        var node = nodes.pop();\n        callback(node);\n\n        if (node.childNodes) {\n          nodes.push.apply(nodes, node.childNodes);\n        } else if (node.firstChildMorph) {\n          var current = node.firstChildMorph;\n\n          while (current) {\n            nodes.push(current);\n            current = current.nextMorph;\n          }\n        } else if (node.morphList) {\n          nodes.push(node.morphList);\n        }\n      }\n    }\n\n    __exports__.visitChildren = visitChildren;function validateChildMorphs(env, morph, visitor) {\n      var morphList = morph.morphList;\n      if (morph.morphList) {\n        var current = morphList.firstChildMorph;\n\n        while (current) {\n          var next = current.nextMorph;\n          validateChildMorphs(env, current, visitor);\n          current = next;\n        }\n      } else if (morph.lastResult) {\n        morph.lastResult.revalidateWith(env, undefined, undefined, undefined, visitor);\n      } else if (morph.childNodes) {\n        // This means that the childNodes were wired up manually\n        for (var i=0, l=morph.childNodes.length; i<l; i++) {\n          validateChildMorphs(env, morph.childNodes[i], visitor);\n        }\n      }\n    }\n\n    __exports__.validateChildMorphs = validateChildMorphs;function linkParams(env, scope, morph, path, params, hash) {\n      if (morph.linkedParams) {\n        return;\n      }\n\n      if (env.hooks.linkRenderNode(morph, scope, path, params, hash)) {\n        morph.linkedParams = { params: params, hash: hash };\n      }\n    }\n\n    __exports__.linkParams = linkParams;function dump(node) {\n      console.group(node, node.isDirty);\n\n      if (node.childNodes) {\n        map(node.childNodes, dump);\n      } else if (node.firstChildMorph) {\n        var current = node.firstChildMorph;\n\n        while (current) {\n          dump(current);\n          current = current.nextMorph;\n        }\n      } else if (node.morphList) {\n        dump(node.morphList);\n      }\n\n      console.groupEnd();\n    }\n\n    __exports__.dump = dump;function map(nodes, cb) {\n      for (var i=0, l=nodes.length; i<l; i++) {\n        cb(nodes[i]);\n      }\n    }\n  });\ndefine(\"htmlbars-util/namespaces\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // ref http://dev.w3.org/html5/spec-LC/namespaces.html\n    var defaultNamespaces = {\n      html: 'http://www.w3.org/1999/xhtml',\n      mathml: 'http://www.w3.org/1998/Math/MathML',\n      svg: 'http://www.w3.org/2000/svg',\n      xlink: 'http://www.w3.org/1999/xlink',\n      xml: 'http://www.w3.org/XML/1998/namespace'\n    };\n\n    function getAttrNamespace(attrName) {\n      var namespace;\n\n      var colonIndex = attrName.indexOf(':');\n      if (colonIndex !== -1) {\n        var prefix = attrName.slice(0, colonIndex);\n        namespace = defaultNamespaces[prefix];\n      }\n\n      return namespace || null;\n    }\n\n    __exports__.getAttrNamespace = getAttrNamespace;\n  });\ndefine(\"htmlbars-util/object-utils\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function merge(options, defaults) {\n      for (var prop in defaults) {\n        if (options.hasOwnProperty(prop)) { continue; }\n        options[prop] = defaults[prop];\n      }\n      return options;\n    }\n\n    __exports__.merge = merge;// IE8 does not have Object.create, so use a polyfill if needed.\n    // Polyfill based on Mozilla's (MDN)\n    function createObject(obj) {\n      if (typeof Object.create === 'function') {\n        return Object.create(obj);\n      } else {\n        var Temp = function() {};\n        Temp.prototype = obj;\n        return new Temp();\n      }\n    }\n\n    __exports__.createObject = createObject;\n  });\ndefine(\"htmlbars-util/quoting\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function escapeString(str) {\n      str = str.replace(/\\\\/g, \"\\\\\\\\\");\n      str = str.replace(/\"/g, '\\\\\"');\n      str = str.replace(/\\n/g, \"\\\\n\");\n      return str;\n    }\n\n    __exports__.escapeString = escapeString;\n\n    function string(str) {\n      return '\"' + escapeString(str) + '\"';\n    }\n\n    __exports__.string = string;\n\n    function array(a) {\n      return \"[\" + a + \"]\";\n    }\n\n    __exports__.array = array;\n\n    function hash(pairs) {\n      return \"{\" + pairs.join(\", \") + \"}\";\n    }\n\n    __exports__.hash = hash;function repeat(chars, times) {\n      var str = \"\";\n      while (times--) {\n        str += chars;\n      }\n      return str;\n    }\n\n    __exports__.repeat = repeat;\n  });\ndefine(\"htmlbars-util/safe-string\",\n  [\"./handlebars/safe-string\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var SafeString = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = SafeString;\n  });\ndefine(\"morph-range\",\n  [\"./morph-range/utils\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var clear = __dependency1__.clear;\n    var insertBefore = __dependency1__.insertBefore;\n\n    // constructor just initializes the fields\n    // use one of the static initializers to create a valid morph.\n    function Morph(domHelper, contextualElement) {\n      this.domHelper = domHelper;\n      // context if content if current content is detached\n      this.contextualElement = contextualElement;\n      // inclusive range of morph\n      // these should be nodeType 1, 3, or 8\n      this.firstNode = null;\n      this.lastNode  = null;\n\n      // flag to force text to setContent to be treated as html\n      this.parseTextAsHTML = false;\n\n      // morph list graph\n      this.parentMorphList = null;\n      this.previousMorph   = null;\n      this.nextMorph       = null;\n    }\n\n    Morph.empty = function (domHelper, contextualElement) {\n      var morph = new Morph(domHelper, contextualElement);\n      morph.clear();\n      return morph;\n    };\n\n    Morph.create = function (domHelper, contextualElement, node) {\n      var morph = new Morph(domHelper, contextualElement);\n      morph.setNode(node);\n      return morph;\n    };\n\n    Morph.attach = function (domHelper, contextualElement, firstNode, lastNode) {\n      var morph = new Morph(domHelper, contextualElement);\n      morph.setRange(firstNode, lastNode);\n      return morph;\n    };\n\n    Morph.prototype.setContent = function Morph$setContent(content) {\n      if (content === null || content === undefined) {\n        return this.clear();\n      }\n\n      var type = typeof content;\n      switch (type) {\n        case 'string':\n          if (this.parseTextAsHTML) {\n            return this.setHTML(content);\n          }\n          return this.setText(content);\n        case 'object':\n          if (typeof content.nodeType === 'number') {\n            return this.setNode(content);\n          }\n          /* Handlebars.SafeString */\n          if (typeof content.string === 'string') {\n            return this.setHTML(content.string);\n          }\n          if (this.parseTextAsHTML) {\n            return this.setHTML(content.toString());\n          }\n          /* falls through */\n        case 'boolean':\n        case 'number':\n          return this.setText(content.toString());\n        default:\n          throw new TypeError('unsupported content');\n      }\n    };\n\n    Morph.prototype.clear = function Morph$clear() {\n      var node = this.setNode(this.domHelper.createComment(''));\n      return node;\n    };\n\n    Morph.prototype.setText = function Morph$setText(text) {\n      var firstNode = this.firstNode;\n      var lastNode = this.lastNode;\n\n      if (firstNode &&\n          lastNode === firstNode &&\n          firstNode.nodeType === 3) {\n        firstNode.nodeValue = text;\n        return firstNode;\n      }\n\n      return this.setNode(\n        text ? this.domHelper.createTextNode(text) : this.domHelper.createComment('')\n      );\n    };\n\n    Morph.prototype.setNode = function Morph$setNode(newNode) {\n      var firstNode, lastNode;\n      switch (newNode.nodeType) {\n        case 3:\n          firstNode = newNode;\n          lastNode = newNode;\n          break;\n        case 11:\n          firstNode = newNode.firstChild;\n          lastNode = newNode.lastChild;\n          if (firstNode === null) {\n            firstNode = this.domHelper.createComment('');\n            newNode.appendChild(firstNode);\n            lastNode = firstNode;\n          }\n          break;\n        default:\n          firstNode = newNode;\n          lastNode = newNode;\n          break;\n      }\n\n      this.setRange(firstNode, lastNode);\n\n      return newNode;\n    };\n\n    Morph.prototype.setRange = function (firstNode, lastNode) {\n      var previousFirstNode = this.firstNode;\n      if (previousFirstNode !== null) {\n\n        var parentNode = previousFirstNode.parentNode;\n        if (parentNode !== null) {\n          insertBefore(parentNode, firstNode, lastNode, previousFirstNode);\n          clear(parentNode, previousFirstNode, this.lastNode);\n        }\n      }\n\n      this.firstNode = firstNode;\n      this.lastNode = lastNode;\n\n      if (this.parentMorphList) {\n        this._syncFirstNode();\n        this._syncLastNode();\n      }\n    };\n\n    Morph.prototype.destroy = function Morph$destroy() {\n      this.unlink();\n\n      var firstNode = this.firstNode;\n      var lastNode = this.lastNode;\n      var parentNode = firstNode && firstNode.parentNode;\n\n      this.firstNode = null;\n      this.lastNode = null;\n\n      clear(parentNode, firstNode, lastNode);\n    };\n\n    Morph.prototype.unlink = function Morph$unlink() {\n      var parentMorphList = this.parentMorphList;\n      var previousMorph = this.previousMorph;\n      var nextMorph = this.nextMorph;\n\n      if (previousMorph) {\n        if (nextMorph) {\n          previousMorph.nextMorph = nextMorph;\n          nextMorph.previousMorph = previousMorph;\n        } else {\n          previousMorph.nextMorph = null;\n          parentMorphList.lastChildMorph = previousMorph;\n        }\n      } else {\n        if (nextMorph) {\n          nextMorph.previousMorph = null;\n          parentMorphList.firstChildMorph = nextMorph;\n        } else if (parentMorphList) {\n          parentMorphList.lastChildMorph = parentMorphList.firstChildMorph = null;\n        }\n      }\n\n      this.parentMorphList = null;\n      this.nextMorph = null;\n      this.previousMorph = null;\n\n      if (parentMorphList && parentMorphList.mountedMorph) {\n        if (!parentMorphList.firstChildMorph) {\n          // list is empty\n          parentMorphList.mountedMorph.clear();\n          return;\n        } else {\n          parentMorphList.firstChildMorph._syncFirstNode();\n          parentMorphList.lastChildMorph._syncLastNode();\n        }\n      }\n    };\n\n    Morph.prototype.setHTML = function(text) {\n      var fragment = this.domHelper.parseHTML(text, this.contextualElement);\n      return this.setNode(fragment);\n    };\n\n    Morph.prototype.setMorphList = function Morph$appendMorphList(morphList) {\n      morphList.mountedMorph = this;\n      this.clear();\n\n      var originalFirstNode = this.firstNode;\n\n      if (morphList.firstChildMorph) {\n        this.firstNode = morphList.firstChildMorph.firstNode;\n        this.lastNode = morphList.lastChildMorph.lastNode;\n\n        var current = morphList.firstChildMorph;\n\n        while (current) {\n          var next = current.nextMorph;\n          current.insertBeforeNode(originalFirstNode, null);\n          current = next;\n        }\n        originalFirstNode.parentNode.removeChild(originalFirstNode);\n      }\n    };\n\n    Morph.prototype._syncFirstNode = function Morph$syncFirstNode() {\n      var morph = this;\n      var parentMorphList;\n      while (parentMorphList = morph.parentMorphList) {\n        if (parentMorphList.mountedMorph === null) {\n          break;\n        }\n        if (morph !== parentMorphList.firstChildMorph) {\n          break;\n        }\n        if (morph.firstNode === parentMorphList.mountedMorph.firstNode) {\n          break;\n        }\n\n        parentMorphList.mountedMorph.firstNode = morph.firstNode;\n\n        morph = parentMorphList.mountedMorph;\n      }\n    };\n\n    Morph.prototype._syncLastNode = function Morph$syncLastNode() {\n      var morph = this;\n      var parentMorphList;\n      while (parentMorphList = morph.parentMorphList) {\n        if (parentMorphList.mountedMorph === null) {\n          break;\n        }\n        if (morph !== parentMorphList.lastChildMorph) {\n          break;\n        }\n        if (morph.lastNode === parentMorphList.mountedMorph.lastNode) {\n          break;\n        }\n\n        parentMorphList.mountedMorph.lastNode = morph.lastNode;\n\n        morph = parentMorphList.mountedMorph;\n      }\n    };\n\n    Morph.prototype.insertBeforeNode = function Morph$insertBeforeNode(parent, reference) {\n      var current = this.firstNode;\n\n      while (current) {\n        var next = current.nextSibling;\n        parent.insertBefore(current, reference);\n        current = next;\n      }\n    };\n\n    Morph.prototype.appendToNode = function Morph$appendToNode(parent) {\n      this.insertBeforeNode(parent, null);\n    };\n\n    __exports__[\"default\"] = Morph;\n  });\ndefine(\"morph-range/morph-list\",\n  [\"./utils\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var clear = __dependency1__.clear;\n    var insertBefore = __dependency1__.insertBefore;\n\n    function MorphList() {\n      // morph graph\n      this.firstChildMorph = null;\n      this.lastChildMorph  = null;\n\n      this.mountedMorph = null;\n    }\n\n    var prototype = MorphList.prototype;\n\n    prototype.clear = function MorphList$clear() {\n      var current = this.firstChildMorph;\n\n      while (current) {\n        var next = current.nextMorph;\n        current.previousMorph = null;\n        current.nextMorph = null;\n        current.parentMorphList = null;\n        current = next;\n      }\n\n      this.firstChildMorph = this.lastChildMorph = null;\n    };\n\n    prototype.destroy = function MorphList$destroy() {\n    };\n\n    prototype.appendMorph = function MorphList$appendMorph(morph) {\n      this.insertBeforeMorph(morph, null);\n    };\n\n    prototype.insertBeforeMorph = function MorphList$insertBeforeMorph(morph, referenceMorph) {\n      if (morph.parentMorphList !== null) {\n        morph.unlink();\n      }\n      if (referenceMorph && referenceMorph.parentMorphList !== this) {\n        throw new Error('The morph before which the new morph is to be inserted is not a child of this morph.');\n      }\n\n      var mountedMorph = this.mountedMorph;\n\n      if (mountedMorph) {\n\n        var parentNode = mountedMorph.firstNode.parentNode;\n        var referenceNode = referenceMorph ? referenceMorph.firstNode : mountedMorph.lastNode.nextSibling;\n\n        insertBefore(\n          parentNode,\n          morph.firstNode,\n          morph.lastNode,\n          referenceNode\n        );\n\n        // was not in list mode replace current content\n        if (!this.firstChildMorph) {\n          clear(this.mountedMorph.firstNode.parentNode,\n                this.mountedMorph.firstNode,\n                this.mountedMorph.lastNode);\n        }\n      }\n\n      morph.parentMorphList = this;\n\n      var previousMorph = referenceMorph ? referenceMorph.previousMorph : this.lastChildMorph;\n      if (previousMorph) {\n        previousMorph.nextMorph = morph;\n        morph.previousMorph = previousMorph;\n      } else {\n        this.firstChildMorph = morph;\n      }\n\n      if (referenceMorph) {\n        referenceMorph.previousMorph = morph;\n        morph.nextMorph = referenceMorph;\n      } else {\n        this.lastChildMorph = morph;\n      }\n\n      this.firstChildMorph._syncFirstNode();\n      this.lastChildMorph._syncLastNode();\n    };\n\n    prototype.removeChildMorph = function MorphList$removeChildMorph(morph) {\n      if (morph.parentMorphList !== this) {\n        throw new Error(\"Cannot remove a morph from a parent it is not inside of\");\n      }\n\n      morph.destroy();\n    };\n\n    __exports__[\"default\"] = MorphList;\n  });\ndefine(\"morph-range/morph-list.umd\",\n  [\"./morph-list\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var MorphList = __dependency1__[\"default\"];\n\n    (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n        define([], factory);\n      } else if (typeof exports === 'object') {\n        module.exports = factory();\n      } else {\n        root.MorphList = factory();\n      }\n    }(this, function () {\n      return MorphList;\n    }));\n  });\ndefine(\"morph-range/utils\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // inclusive of both nodes\n    function clear(parentNode, firstNode, lastNode) {\n      if (!parentNode) { return; }\n\n      var node = firstNode;\n      var nextNode;\n      do {\n        nextNode = node.nextSibling;\n        parentNode.removeChild(node);\n        if (node === lastNode) {\n          break;\n        }\n        node = nextNode;\n      } while (node);\n    }\n\n    __exports__.clear = clear;function insertBefore(parentNode, firstNode, lastNode, _refNode) {\n      var node = lastNode;\n      var refNode = _refNode;\n      var prevNode;\n      do {\n        prevNode = node.previousSibling;\n        parentNode.insertBefore(node, refNode);\n        if (node === firstNode) {\n          break;\n        }\n        refNode = node;\n        node = prevNode;\n      } while (node);\n    }\n\n    __exports__.insertBefore = insertBefore;\n  });\ndefine(\"simple-html-tokenizer\",\n  [\"./simple-html-tokenizer/tokenizer\",\"./simple-html-tokenizer/tokenize\",\"./simple-html-tokenizer/generator\",\"./simple-html-tokenizer/generate\",\"./simple-html-tokenizer/tokens\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __exports__) {\n    \"use strict\";\n    /*jshint boss:true*/\n    var Tokenizer = __dependency1__[\"default\"];\n    var tokenize = __dependency2__[\"default\"];\n    var Generator = __dependency3__[\"default\"];\n    var generate = __dependency4__[\"default\"];\n    var StartTag = __dependency5__.StartTag;\n    var EndTag = __dependency5__.EndTag;\n    var Chars = __dependency5__.Chars;\n    var Comment = __dependency5__.Comment;\n\n    __exports__.Tokenizer = Tokenizer;\n    __exports__.tokenize = tokenize;\n    __exports__.Generator = Generator;\n    __exports__.generate = generate;\n    __exports__.StartTag = StartTag;\n    __exports__.EndTag = EndTag;\n    __exports__.Chars = Chars;\n    __exports__.Comment = Comment;\n  });\ndefine(\"simple-html-tokenizer/char-refs/full\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\n      AElig: [198],\n      AMP: [38],\n      Aacute: [193],\n      Abreve: [258],\n      Acirc: [194],\n      Acy: [1040],\n      Afr: [120068],\n      Agrave: [192],\n      Alpha: [913],\n      Amacr: [256],\n      And: [10835],\n      Aogon: [260],\n      Aopf: [120120],\n      ApplyFunction: [8289],\n      Aring: [197],\n      Ascr: [119964],\n      Assign: [8788],\n      Atilde: [195],\n      Auml: [196],\n      Backslash: [8726],\n      Barv: [10983],\n      Barwed: [8966],\n      Bcy: [1041],\n      Because: [8757],\n      Bernoullis: [8492],\n      Beta: [914],\n      Bfr: [120069],\n      Bopf: [120121],\n      Breve: [728],\n      Bscr: [8492],\n      Bumpeq: [8782],\n      CHcy: [1063],\n      COPY: [169],\n      Cacute: [262],\n      Cap: [8914],\n      CapitalDifferentialD: [8517],\n      Cayleys: [8493],\n      Ccaron: [268],\n      Ccedil: [199],\n      Ccirc: [264],\n      Cconint: [8752],\n      Cdot: [266],\n      Cedilla: [184],\n      CenterDot: [183],\n      Cfr: [8493],\n      Chi: [935],\n      CircleDot: [8857],\n      CircleMinus: [8854],\n      CirclePlus: [8853],\n      CircleTimes: [8855],\n      ClockwiseContourIntegral: [8754],\n      CloseCurlyDoubleQuote: [8221],\n      CloseCurlyQuote: [8217],\n      Colon: [8759],\n      Colone: [10868],\n      Congruent: [8801],\n      Conint: [8751],\n      ContourIntegral: [8750],\n      Copf: [8450],\n      Coproduct: [8720],\n      CounterClockwiseContourIntegral: [8755],\n      Cross: [10799],\n      Cscr: [119966],\n      Cup: [8915],\n      CupCap: [8781],\n      DD: [8517],\n      DDotrahd: [10513],\n      DJcy: [1026],\n      DScy: [1029],\n      DZcy: [1039],\n      Dagger: [8225],\n      Darr: [8609],\n      Dashv: [10980],\n      Dcaron: [270],\n      Dcy: [1044],\n      Del: [8711],\n      Delta: [916],\n      Dfr: [120071],\n      DiacriticalAcute: [180],\n      DiacriticalDot: [729],\n      DiacriticalDoubleAcute: [733],\n      DiacriticalGrave: [96],\n      DiacriticalTilde: [732],\n      Diamond: [8900],\n      DifferentialD: [8518],\n      Dopf: [120123],\n      Dot: [168],\n      DotDot: [8412],\n      DotEqual: [8784],\n      DoubleContourIntegral: [8751],\n      DoubleDot: [168],\n      DoubleDownArrow: [8659],\n      DoubleLeftArrow: [8656],\n      DoubleLeftRightArrow: [8660],\n      DoubleLeftTee: [10980],\n      DoubleLongLeftArrow: [10232],\n      DoubleLongLeftRightArrow: [10234],\n      DoubleLongRightArrow: [10233],\n      DoubleRightArrow: [8658],\n      DoubleRightTee: [8872],\n      DoubleUpArrow: [8657],\n      DoubleUpDownArrow: [8661],\n      DoubleVerticalBar: [8741],\n      DownArrow: [8595],\n      DownArrowBar: [10515],\n      DownArrowUpArrow: [8693],\n      DownBreve: [785],\n      DownLeftRightVector: [10576],\n      DownLeftTeeVector: [10590],\n      DownLeftVector: [8637],\n      DownLeftVectorBar: [10582],\n      DownRightTeeVector: [10591],\n      DownRightVector: [8641],\n      DownRightVectorBar: [10583],\n      DownTee: [8868],\n      DownTeeArrow: [8615],\n      Downarrow: [8659],\n      Dscr: [119967],\n      Dstrok: [272],\n      ENG: [330],\n      ETH: [208],\n      Eacute: [201],\n      Ecaron: [282],\n      Ecirc: [202],\n      Ecy: [1069],\n      Edot: [278],\n      Efr: [120072],\n      Egrave: [200],\n      Element: [8712],\n      Emacr: [274],\n      EmptySmallSquare: [9723],\n      EmptyVerySmallSquare: [9643],\n      Eogon: [280],\n      Eopf: [120124],\n      Epsilon: [917],\n      Equal: [10869],\n      EqualTilde: [8770],\n      Equilibrium: [8652],\n      Escr: [8496],\n      Esim: [10867],\n      Eta: [919],\n      Euml: [203],\n      Exists: [8707],\n      ExponentialE: [8519],\n      Fcy: [1060],\n      Ffr: [120073],\n      FilledSmallSquare: [9724],\n      FilledVerySmallSquare: [9642],\n      Fopf: [120125],\n      ForAll: [8704],\n      Fouriertrf: [8497],\n      Fscr: [8497],\n      GJcy: [1027],\n      GT: [62],\n      Gamma: [915],\n      Gammad: [988],\n      Gbreve: [286],\n      Gcedil: [290],\n      Gcirc: [284],\n      Gcy: [1043],\n      Gdot: [288],\n      Gfr: [120074],\n      Gg: [8921],\n      Gopf: [120126],\n      GreaterEqual: [8805],\n      GreaterEqualLess: [8923],\n      GreaterFullEqual: [8807],\n      GreaterGreater: [10914],\n      GreaterLess: [8823],\n      GreaterSlantEqual: [10878],\n      GreaterTilde: [8819],\n      Gscr: [119970],\n      Gt: [8811],\n      HARDcy: [1066],\n      Hacek: [711],\n      Hat: [94],\n      Hcirc: [292],\n      Hfr: [8460],\n      HilbertSpace: [8459],\n      Hopf: [8461],\n      HorizontalLine: [9472],\n      Hscr: [8459],\n      Hstrok: [294],\n      HumpDownHump: [8782],\n      HumpEqual: [8783],\n      IEcy: [1045],\n      IJlig: [306],\n      IOcy: [1025],\n      Iacute: [205],\n      Icirc: [206],\n      Icy: [1048],\n      Idot: [304],\n      Ifr: [8465],\n      Igrave: [204],\n      Im: [8465],\n      Imacr: [298],\n      ImaginaryI: [8520],\n      Implies: [8658],\n      Int: [8748],\n      Integral: [8747],\n      Intersection: [8898],\n      InvisibleComma: [8291],\n      InvisibleTimes: [8290],\n      Iogon: [302],\n      Iopf: [120128],\n      Iota: [921],\n      Iscr: [8464],\n      Itilde: [296],\n      Iukcy: [1030],\n      Iuml: [207],\n      Jcirc: [308],\n      Jcy: [1049],\n      Jfr: [120077],\n      Jopf: [120129],\n      Jscr: [119973],\n      Jsercy: [1032],\n      Jukcy: [1028],\n      KHcy: [1061],\n      KJcy: [1036],\n      Kappa: [922],\n      Kcedil: [310],\n      Kcy: [1050],\n      Kfr: [120078],\n      Kopf: [120130],\n      Kscr: [119974],\n      LJcy: [1033],\n      LT: [60],\n      Lacute: [313],\n      Lambda: [923],\n      Lang: [10218],\n      Laplacetrf: [8466],\n      Larr: [8606],\n      Lcaron: [317],\n      Lcedil: [315],\n      Lcy: [1051],\n      LeftAngleBracket: [10216],\n      LeftArrow: [8592],\n      LeftArrowBar: [8676],\n      LeftArrowRightArrow: [8646],\n      LeftCeiling: [8968],\n      LeftDoubleBracket: [10214],\n      LeftDownTeeVector: [10593],\n      LeftDownVector: [8643],\n      LeftDownVectorBar: [10585],\n      LeftFloor: [8970],\n      LeftRightArrow: [8596],\n      LeftRightVector: [10574],\n      LeftTee: [8867],\n      LeftTeeArrow: [8612],\n      LeftTeeVector: [10586],\n      LeftTriangle: [8882],\n      LeftTriangleBar: [10703],\n      LeftTriangleEqual: [8884],\n      LeftUpDownVector: [10577],\n      LeftUpTeeVector: [10592],\n      LeftUpVector: [8639],\n      LeftUpVectorBar: [10584],\n      LeftVector: [8636],\n      LeftVectorBar: [10578],\n      Leftarrow: [8656],\n      Leftrightarrow: [8660],\n      LessEqualGreater: [8922],\n      LessFullEqual: [8806],\n      LessGreater: [8822],\n      LessLess: [10913],\n      LessSlantEqual: [10877],\n      LessTilde: [8818],\n      Lfr: [120079],\n      Ll: [8920],\n      Lleftarrow: [8666],\n      Lmidot: [319],\n      LongLeftArrow: [10229],\n      LongLeftRightArrow: [10231],\n      LongRightArrow: [10230],\n      Longleftarrow: [10232],\n      Longleftrightarrow: [10234],\n      Longrightarrow: [10233],\n      Lopf: [120131],\n      LowerLeftArrow: [8601],\n      LowerRightArrow: [8600],\n      Lscr: [8466],\n      Lsh: [8624],\n      Lstrok: [321],\n      Lt: [8810],\n      Map: [10501],\n      Mcy: [1052],\n      MediumSpace: [8287],\n      Mellintrf: [8499],\n      Mfr: [120080],\n      MinusPlus: [8723],\n      Mopf: [120132],\n      Mscr: [8499],\n      Mu: [924],\n      NJcy: [1034],\n      Nacute: [323],\n      Ncaron: [327],\n      Ncedil: [325],\n      Ncy: [1053],\n      NegativeMediumSpace: [8203],\n      NegativeThickSpace: [8203],\n      NegativeThinSpace: [8203],\n      NegativeVeryThinSpace: [8203],\n      NestedGreaterGreater: [8811],\n      NestedLessLess: [8810],\n      NewLine: [10],\n      Nfr: [120081],\n      NoBreak: [8288],\n      NonBreakingSpace: [160],\n      Nopf: [8469],\n      Not: [10988],\n      NotCongruent: [8802],\n      NotCupCap: [8813],\n      NotDoubleVerticalBar: [8742],\n      NotElement: [8713],\n      NotEqual: [8800],\n      NotEqualTilde: [8770, 824],\n      NotExists: [8708],\n      NotGreater: [8815],\n      NotGreaterEqual: [8817],\n      NotGreaterFullEqual: [8807, 824],\n      NotGreaterGreater: [8811, 824],\n      NotGreaterLess: [8825],\n      NotGreaterSlantEqual: [10878, 824],\n      NotGreaterTilde: [8821],\n      NotHumpDownHump: [8782, 824],\n      NotHumpEqual: [8783, 824],\n      NotLeftTriangle: [8938],\n      NotLeftTriangleBar: [10703, 824],\n      NotLeftTriangleEqual: [8940],\n      NotLess: [8814],\n      NotLessEqual: [8816],\n      NotLessGreater: [8824],\n      NotLessLess: [8810, 824],\n      NotLessSlantEqual: [10877, 824],\n      NotLessTilde: [8820],\n      NotNestedGreaterGreater: [10914, 824],\n      NotNestedLessLess: [10913, 824],\n      NotPrecedes: [8832],\n      NotPrecedesEqual: [10927, 824],\n      NotPrecedesSlantEqual: [8928],\n      NotReverseElement: [8716],\n      NotRightTriangle: [8939],\n      NotRightTriangleBar: [10704, 824],\n      NotRightTriangleEqual: [8941],\n      NotSquareSubset: [8847, 824],\n      NotSquareSubsetEqual: [8930],\n      NotSquareSuperset: [8848, 824],\n      NotSquareSupersetEqual: [8931],\n      NotSubset: [8834, 8402],\n      NotSubsetEqual: [8840],\n      NotSucceeds: [8833],\n      NotSucceedsEqual: [10928, 824],\n      NotSucceedsSlantEqual: [8929],\n      NotSucceedsTilde: [8831, 824],\n      NotSuperset: [8835, 8402],\n      NotSupersetEqual: [8841],\n      NotTilde: [8769],\n      NotTildeEqual: [8772],\n      NotTildeFullEqual: [8775],\n      NotTildeTilde: [8777],\n      NotVerticalBar: [8740],\n      Nscr: [119977],\n      Ntilde: [209],\n      Nu: [925],\n      OElig: [338],\n      Oacute: [211],\n      Ocirc: [212],\n      Ocy: [1054],\n      Odblac: [336],\n      Ofr: [120082],\n      Ograve: [210],\n      Omacr: [332],\n      Omega: [937],\n      Omicron: [927],\n      Oopf: [120134],\n      OpenCurlyDoubleQuote: [8220],\n      OpenCurlyQuote: [8216],\n      Or: [10836],\n      Oscr: [119978],\n      Oslash: [216],\n      Otilde: [213],\n      Otimes: [10807],\n      Ouml: [214],\n      OverBar: [8254],\n      OverBrace: [9182],\n      OverBracket: [9140],\n      OverParenthesis: [9180],\n      PartialD: [8706],\n      Pcy: [1055],\n      Pfr: [120083],\n      Phi: [934],\n      Pi: [928],\n      PlusMinus: [177],\n      Poincareplane: [8460],\n      Popf: [8473],\n      Pr: [10939],\n      Precedes: [8826],\n      PrecedesEqual: [10927],\n      PrecedesSlantEqual: [8828],\n      PrecedesTilde: [8830],\n      Prime: [8243],\n      Product: [8719],\n      Proportion: [8759],\n      Proportional: [8733],\n      Pscr: [119979],\n      Psi: [936],\n      QUOT: [34],\n      Qfr: [120084],\n      Qopf: [8474],\n      Qscr: [119980],\n      RBarr: [10512],\n      REG: [174],\n      Racute: [340],\n      Rang: [10219],\n      Rarr: [8608],\n      Rarrtl: [10518],\n      Rcaron: [344],\n      Rcedil: [342],\n      Rcy: [1056],\n      Re: [8476],\n      ReverseElement: [8715],\n      ReverseEquilibrium: [8651],\n      ReverseUpEquilibrium: [10607],\n      Rfr: [8476],\n      Rho: [929],\n      RightAngleBracket: [10217],\n      RightArrow: [8594],\n      RightArrowBar: [8677],\n      RightArrowLeftArrow: [8644],\n      RightCeiling: [8969],\n      RightDoubleBracket: [10215],\n      RightDownTeeVector: [10589],\n      RightDownVector: [8642],\n      RightDownVectorBar: [10581],\n      RightFloor: [8971],\n      RightTee: [8866],\n      RightTeeArrow: [8614],\n      RightTeeVector: [10587],\n      RightTriangle: [8883],\n      RightTriangleBar: [10704],\n      RightTriangleEqual: [8885],\n      RightUpDownVector: [10575],\n      RightUpTeeVector: [10588],\n      RightUpVector: [8638],\n      RightUpVectorBar: [10580],\n      RightVector: [8640],\n      RightVectorBar: [10579],\n      Rightarrow: [8658],\n      Ropf: [8477],\n      RoundImplies: [10608],\n      Rrightarrow: [8667],\n      Rscr: [8475],\n      Rsh: [8625],\n      RuleDelayed: [10740],\n      SHCHcy: [1065],\n      SHcy: [1064],\n      SOFTcy: [1068],\n      Sacute: [346],\n      Sc: [10940],\n      Scaron: [352],\n      Scedil: [350],\n      Scirc: [348],\n      Scy: [1057],\n      Sfr: [120086],\n      ShortDownArrow: [8595],\n      ShortLeftArrow: [8592],\n      ShortRightArrow: [8594],\n      ShortUpArrow: [8593],\n      Sigma: [931],\n      SmallCircle: [8728],\n      Sopf: [120138],\n      Sqrt: [8730],\n      Square: [9633],\n      SquareIntersection: [8851],\n      SquareSubset: [8847],\n      SquareSubsetEqual: [8849],\n      SquareSuperset: [8848],\n      SquareSupersetEqual: [8850],\n      SquareUnion: [8852],\n      Sscr: [119982],\n      Star: [8902],\n      Sub: [8912],\n      Subset: [8912],\n      SubsetEqual: [8838],\n      Succeeds: [8827],\n      SucceedsEqual: [10928],\n      SucceedsSlantEqual: [8829],\n      SucceedsTilde: [8831],\n      SuchThat: [8715],\n      Sum: [8721],\n      Sup: [8913],\n      Superset: [8835],\n      SupersetEqual: [8839],\n      Supset: [8913],\n      THORN: [222],\n      TRADE: [8482],\n      TSHcy: [1035],\n      TScy: [1062],\n      Tab: [9],\n      Tau: [932],\n      Tcaron: [356],\n      Tcedil: [354],\n      Tcy: [1058],\n      Tfr: [120087],\n      Therefore: [8756],\n      Theta: [920],\n      ThickSpace: [8287, 8202],\n      ThinSpace: [8201],\n      Tilde: [8764],\n      TildeEqual: [8771],\n      TildeFullEqual: [8773],\n      TildeTilde: [8776],\n      Topf: [120139],\n      TripleDot: [8411],\n      Tscr: [119983],\n      Tstrok: [358],\n      Uacute: [218],\n      Uarr: [8607],\n      Uarrocir: [10569],\n      Ubrcy: [1038],\n      Ubreve: [364],\n      Ucirc: [219],\n      Ucy: [1059],\n      Udblac: [368],\n      Ufr: [120088],\n      Ugrave: [217],\n      Umacr: [362],\n      UnderBar: [95],\n      UnderBrace: [9183],\n      UnderBracket: [9141],\n      UnderParenthesis: [9181],\n      Union: [8899],\n      UnionPlus: [8846],\n      Uogon: [370],\n      Uopf: [120140],\n      UpArrow: [8593],\n      UpArrowBar: [10514],\n      UpArrowDownArrow: [8645],\n      UpDownArrow: [8597],\n      UpEquilibrium: [10606],\n      UpTee: [8869],\n      UpTeeArrow: [8613],\n      Uparrow: [8657],\n      Updownarrow: [8661],\n      UpperLeftArrow: [8598],\n      UpperRightArrow: [8599],\n      Upsi: [978],\n      Upsilon: [933],\n      Uring: [366],\n      Uscr: [119984],\n      Utilde: [360],\n      Uuml: [220],\n      VDash: [8875],\n      Vbar: [10987],\n      Vcy: [1042],\n      Vdash: [8873],\n      Vdashl: [10982],\n      Vee: [8897],\n      Verbar: [8214],\n      Vert: [8214],\n      VerticalBar: [8739],\n      VerticalLine: [124],\n      VerticalSeparator: [10072],\n      VerticalTilde: [8768],\n      VeryThinSpace: [8202],\n      Vfr: [120089],\n      Vopf: [120141],\n      Vscr: [119985],\n      Vvdash: [8874],\n      Wcirc: [372],\n      Wedge: [8896],\n      Wfr: [120090],\n      Wopf: [120142],\n      Wscr: [119986],\n      Xfr: [120091],\n      Xi: [926],\n      Xopf: [120143],\n      Xscr: [119987],\n      YAcy: [1071],\n      YIcy: [1031],\n      YUcy: [1070],\n      Yacute: [221],\n      Ycirc: [374],\n      Ycy: [1067],\n      Yfr: [120092],\n      Yopf: [120144],\n      Yscr: [119988],\n      Yuml: [376],\n      ZHcy: [1046],\n      Zacute: [377],\n      Zcaron: [381],\n      Zcy: [1047],\n      Zdot: [379],\n      ZeroWidthSpace: [8203],\n      Zeta: [918],\n      Zfr: [8488],\n      Zopf: [8484],\n      Zscr: [119989],\n      aacute: [225],\n      abreve: [259],\n      ac: [8766],\n      acE: [8766, 819],\n      acd: [8767],\n      acirc: [226],\n      acute: [180],\n      acy: [1072],\n      aelig: [230],\n      af: [8289],\n      afr: [120094],\n      agrave: [224],\n      alefsym: [8501],\n      aleph: [8501],\n      alpha: [945],\n      amacr: [257],\n      amalg: [10815],\n      amp: [38],\n      and: [8743],\n      andand: [10837],\n      andd: [10844],\n      andslope: [10840],\n      andv: [10842],\n      ang: [8736],\n      ange: [10660],\n      angle: [8736],\n      angmsd: [8737],\n      angmsdaa: [10664],\n      angmsdab: [10665],\n      angmsdac: [10666],\n      angmsdad: [10667],\n      angmsdae: [10668],\n      angmsdaf: [10669],\n      angmsdag: [10670],\n      angmsdah: [10671],\n      angrt: [8735],\n      angrtvb: [8894],\n      angrtvbd: [10653],\n      angsph: [8738],\n      angst: [197],\n      angzarr: [9084],\n      aogon: [261],\n      aopf: [120146],\n      ap: [8776],\n      apE: [10864],\n      apacir: [10863],\n      ape: [8778],\n      apid: [8779],\n      apos: [39],\n      approx: [8776],\n      approxeq: [8778],\n      aring: [229],\n      ascr: [119990],\n      ast: [42],\n      asymp: [8776],\n      asympeq: [8781],\n      atilde: [227],\n      auml: [228],\n      awconint: [8755],\n      awint: [10769],\n      bNot: [10989],\n      backcong: [8780],\n      backepsilon: [1014],\n      backprime: [8245],\n      backsim: [8765],\n      backsimeq: [8909],\n      barvee: [8893],\n      barwed: [8965],\n      barwedge: [8965],\n      bbrk: [9141],\n      bbrktbrk: [9142],\n      bcong: [8780],\n      bcy: [1073],\n      bdquo: [8222],\n      becaus: [8757],\n      because: [8757],\n      bemptyv: [10672],\n      bepsi: [1014],\n      bernou: [8492],\n      beta: [946],\n      beth: [8502],\n      between: [8812],\n      bfr: [120095],\n      bigcap: [8898],\n      bigcirc: [9711],\n      bigcup: [8899],\n      bigodot: [10752],\n      bigoplus: [10753],\n      bigotimes: [10754],\n      bigsqcup: [10758],\n      bigstar: [9733],\n      bigtriangledown: [9661],\n      bigtriangleup: [9651],\n      biguplus: [10756],\n      bigvee: [8897],\n      bigwedge: [8896],\n      bkarow: [10509],\n      blacklozenge: [10731],\n      blacksquare: [9642],\n      blacktriangle: [9652],\n      blacktriangledown: [9662],\n      blacktriangleleft: [9666],\n      blacktriangleright: [9656],\n      blank: [9251],\n      blk12: [9618],\n      blk14: [9617],\n      blk34: [9619],\n      block: [9608],\n      bne: [61, 8421],\n      bnequiv: [8801, 8421],\n      bnot: [8976],\n      bopf: [120147],\n      bot: [8869],\n      bottom: [8869],\n      bowtie: [8904],\n      boxDL: [9559],\n      boxDR: [9556],\n      boxDl: [9558],\n      boxDr: [9555],\n      boxH: [9552],\n      boxHD: [9574],\n      boxHU: [9577],\n      boxHd: [9572],\n      boxHu: [9575],\n      boxUL: [9565],\n      boxUR: [9562],\n      boxUl: [9564],\n      boxUr: [9561],\n      boxV: [9553],\n      boxVH: [9580],\n      boxVL: [9571],\n      boxVR: [9568],\n      boxVh: [9579],\n      boxVl: [9570],\n      boxVr: [9567],\n      boxbox: [10697],\n      boxdL: [9557],\n      boxdR: [9554],\n      boxdl: [9488],\n      boxdr: [9484],\n      boxh: [9472],\n      boxhD: [9573],\n      boxhU: [9576],\n      boxhd: [9516],\n      boxhu: [9524],\n      boxminus: [8863],\n      boxplus: [8862],\n      boxtimes: [8864],\n      boxuL: [9563],\n      boxuR: [9560],\n      boxul: [9496],\n      boxur: [9492],\n      boxv: [9474],\n      boxvH: [9578],\n      boxvL: [9569],\n      boxvR: [9566],\n      boxvh: [9532],\n      boxvl: [9508],\n      boxvr: [9500],\n      bprime: [8245],\n      breve: [728],\n      brvbar: [166],\n      bscr: [119991],\n      bsemi: [8271],\n      bsim: [8765],\n      bsime: [8909],\n      bsol: [92],\n      bsolb: [10693],\n      bsolhsub: [10184],\n      bull: [8226],\n      bullet: [8226],\n      bump: [8782],\n      bumpE: [10926],\n      bumpe: [8783],\n      bumpeq: [8783],\n      cacute: [263],\n      cap: [8745],\n      capand: [10820],\n      capbrcup: [10825],\n      capcap: [10827],\n      capcup: [10823],\n      capdot: [10816],\n      caps: [8745, 65024],\n      caret: [8257],\n      caron: [711],\n      ccaps: [10829],\n      ccaron: [269],\n      ccedil: [231],\n      ccirc: [265],\n      ccups: [10828],\n      ccupssm: [10832],\n      cdot: [267],\n      cedil: [184],\n      cemptyv: [10674],\n      cent: [162],\n      centerdot: [183],\n      cfr: [120096],\n      chcy: [1095],\n      check: [10003],\n      checkmark: [10003],\n      chi: [967],\n      cir: [9675],\n      cirE: [10691],\n      circ: [710],\n      circeq: [8791],\n      circlearrowleft: [8634],\n      circlearrowright: [8635],\n      circledR: [174],\n      circledS: [9416],\n      circledast: [8859],\n      circledcirc: [8858],\n      circleddash: [8861],\n      cire: [8791],\n      cirfnint: [10768],\n      cirmid: [10991],\n      cirscir: [10690],\n      clubs: [9827],\n      clubsuit: [9827],\n      colon: [58],\n      colone: [8788],\n      coloneq: [8788],\n      comma: [44],\n      commat: [64],\n      comp: [8705],\n      compfn: [8728],\n      complement: [8705],\n      complexes: [8450],\n      cong: [8773],\n      congdot: [10861],\n      conint: [8750],\n      copf: [120148],\n      coprod: [8720],\n      copy: [169],\n      copysr: [8471],\n      crarr: [8629],\n      cross: [10007],\n      cscr: [119992],\n      csub: [10959],\n      csube: [10961],\n      csup: [10960],\n      csupe: [10962],\n      ctdot: [8943],\n      cudarrl: [10552],\n      cudarrr: [10549],\n      cuepr: [8926],\n      cuesc: [8927],\n      cularr: [8630],\n      cularrp: [10557],\n      cup: [8746],\n      cupbrcap: [10824],\n      cupcap: [10822],\n      cupcup: [10826],\n      cupdot: [8845],\n      cupor: [10821],\n      cups: [8746, 65024],\n      curarr: [8631],\n      curarrm: [10556],\n      curlyeqprec: [8926],\n      curlyeqsucc: [8927],\n      curlyvee: [8910],\n      curlywedge: [8911],\n      curren: [164],\n      curvearrowleft: [8630],\n      curvearrowright: [8631],\n      cuvee: [8910],\n      cuwed: [8911],\n      cwconint: [8754],\n      cwint: [8753],\n      cylcty: [9005],\n      dArr: [8659],\n      dHar: [10597],\n      dagger: [8224],\n      daleth: [8504],\n      darr: [8595],\n      dash: [8208],\n      dashv: [8867],\n      dbkarow: [10511],\n      dblac: [733],\n      dcaron: [271],\n      dcy: [1076],\n      dd: [8518],\n      ddagger: [8225],\n      ddarr: [8650],\n      ddotseq: [10871],\n      deg: [176],\n      delta: [948],\n      demptyv: [10673],\n      dfisht: [10623],\n      dfr: [120097],\n      dharl: [8643],\n      dharr: [8642],\n      diam: [8900],\n      diamond: [8900],\n      diamondsuit: [9830],\n      diams: [9830],\n      die: [168],\n      digamma: [989],\n      disin: [8946],\n      div: [247],\n      divide: [247],\n      divideontimes: [8903],\n      divonx: [8903],\n      djcy: [1106],\n      dlcorn: [8990],\n      dlcrop: [8973],\n      dollar: [36],\n      dopf: [120149],\n      dot: [729],\n      doteq: [8784],\n      doteqdot: [8785],\n      dotminus: [8760],\n      dotplus: [8724],\n      dotsquare: [8865],\n      doublebarwedge: [8966],\n      downarrow: [8595],\n      downdownarrows: [8650],\n      downharpoonleft: [8643],\n      downharpoonright: [8642],\n      drbkarow: [10512],\n      drcorn: [8991],\n      drcrop: [8972],\n      dscr: [119993],\n      dscy: [1109],\n      dsol: [10742],\n      dstrok: [273],\n      dtdot: [8945],\n      dtri: [9663],\n      dtrif: [9662],\n      duarr: [8693],\n      duhar: [10607],\n      dwangle: [10662],\n      dzcy: [1119],\n      dzigrarr: [10239],\n      eDDot: [10871],\n      eDot: [8785],\n      eacute: [233],\n      easter: [10862],\n      ecaron: [283],\n      ecir: [8790],\n      ecirc: [234],\n      ecolon: [8789],\n      ecy: [1101],\n      edot: [279],\n      ee: [8519],\n      efDot: [8786],\n      efr: [120098],\n      eg: [10906],\n      egrave: [232],\n      egs: [10902],\n      egsdot: [10904],\n      el: [10905],\n      elinters: [9191],\n      ell: [8467],\n      els: [10901],\n      elsdot: [10903],\n      emacr: [275],\n      empty: [8709],\n      emptyset: [8709],\n      emptyv: [8709],\n      emsp: [8195],\n      emsp13: [8196],\n      emsp14: [8197],\n      eng: [331],\n      ensp: [8194],\n      eogon: [281],\n      eopf: [120150],\n      epar: [8917],\n      eparsl: [10723],\n      eplus: [10865],\n      epsi: [949],\n      epsilon: [949],\n      epsiv: [1013],\n      eqcirc: [8790],\n      eqcolon: [8789],\n      eqsim: [8770],\n      eqslantgtr: [10902],\n      eqslantless: [10901],\n      equals: [61],\n      equest: [8799],\n      equiv: [8801],\n      equivDD: [10872],\n      eqvparsl: [10725],\n      erDot: [8787],\n      erarr: [10609],\n      escr: [8495],\n      esdot: [8784],\n      esim: [8770],\n      eta: [951],\n      eth: [240],\n      euml: [235],\n      euro: [8364],\n      excl: [33],\n      exist: [8707],\n      expectation: [8496],\n      exponentiale: [8519],\n      fallingdotseq: [8786],\n      fcy: [1092],\n      female: [9792],\n      ffilig: [64259],\n      fflig: [64256],\n      ffllig: [64260],\n      ffr: [120099],\n      filig: [64257],\n      fjlig: [102, 106],\n      flat: [9837],\n      fllig: [64258],\n      fltns: [9649],\n      fnof: [402],\n      fopf: [120151],\n      forall: [8704],\n      fork: [8916],\n      forkv: [10969],\n      fpartint: [10765],\n      frac12: [189],\n      frac13: [8531],\n      frac14: [188],\n      frac15: [8533],\n      frac16: [8537],\n      frac18: [8539],\n      frac23: [8532],\n      frac25: [8534],\n      frac34: [190],\n      frac35: [8535],\n      frac38: [8540],\n      frac45: [8536],\n      frac56: [8538],\n      frac58: [8541],\n      frac78: [8542],\n      frasl: [8260],\n      frown: [8994],\n      fscr: [119995],\n      gE: [8807],\n      gEl: [10892],\n      gacute: [501],\n      gamma: [947],\n      gammad: [989],\n      gap: [10886],\n      gbreve: [287],\n      gcirc: [285],\n      gcy: [1075],\n      gdot: [289],\n      ge: [8805],\n      gel: [8923],\n      geq: [8805],\n      geqq: [8807],\n      geqslant: [10878],\n      ges: [10878],\n      gescc: [10921],\n      gesdot: [10880],\n      gesdoto: [10882],\n      gesdotol: [10884],\n      gesl: [8923, 65024],\n      gesles: [10900],\n      gfr: [120100],\n      gg: [8811],\n      ggg: [8921],\n      gimel: [8503],\n      gjcy: [1107],\n      gl: [8823],\n      glE: [10898],\n      gla: [10917],\n      glj: [10916],\n      gnE: [8809],\n      gnap: [10890],\n      gnapprox: [10890],\n      gne: [10888],\n      gneq: [10888],\n      gneqq: [8809],\n      gnsim: [8935],\n      gopf: [120152],\n      grave: [96],\n      gscr: [8458],\n      gsim: [8819],\n      gsime: [10894],\n      gsiml: [10896],\n      gt: [62],\n      gtcc: [10919],\n      gtcir: [10874],\n      gtdot: [8919],\n      gtlPar: [10645],\n      gtquest: [10876],\n      gtrapprox: [10886],\n      gtrarr: [10616],\n      gtrdot: [8919],\n      gtreqless: [8923],\n      gtreqqless: [10892],\n      gtrless: [8823],\n      gtrsim: [8819],\n      gvertneqq: [8809, 65024],\n      gvnE: [8809, 65024],\n      hArr: [8660],\n      hairsp: [8202],\n      half: [189],\n      hamilt: [8459],\n      hardcy: [1098],\n      harr: [8596],\n      harrcir: [10568],\n      harrw: [8621],\n      hbar: [8463],\n      hcirc: [293],\n      hearts: [9829],\n      heartsuit: [9829],\n      hellip: [8230],\n      hercon: [8889],\n      hfr: [120101],\n      hksearow: [10533],\n      hkswarow: [10534],\n      hoarr: [8703],\n      homtht: [8763],\n      hookleftarrow: [8617],\n      hookrightarrow: [8618],\n      hopf: [120153],\n      horbar: [8213],\n      hscr: [119997],\n      hslash: [8463],\n      hstrok: [295],\n      hybull: [8259],\n      hyphen: [8208],\n      iacute: [237],\n      ic: [8291],\n      icirc: [238],\n      icy: [1080],\n      iecy: [1077],\n      iexcl: [161],\n      iff: [8660],\n      ifr: [120102],\n      igrave: [236],\n      ii: [8520],\n      iiiint: [10764],\n      iiint: [8749],\n      iinfin: [10716],\n      iiota: [8489],\n      ijlig: [307],\n      imacr: [299],\n      image: [8465],\n      imagline: [8464],\n      imagpart: [8465],\n      imath: [305],\n      imof: [8887],\n      imped: [437],\n      \"in\": [8712],\n      incare: [8453],\n      infin: [8734],\n      infintie: [10717],\n      inodot: [305],\n      \"int\": [8747],\n      intcal: [8890],\n      integers: [8484],\n      intercal: [8890],\n      intlarhk: [10775],\n      intprod: [10812],\n      iocy: [1105],\n      iogon: [303],\n      iopf: [120154],\n      iota: [953],\n      iprod: [10812],\n      iquest: [191],\n      iscr: [119998],\n      isin: [8712],\n      isinE: [8953],\n      isindot: [8949],\n      isins: [8948],\n      isinsv: [8947],\n      isinv: [8712],\n      it: [8290],\n      itilde: [297],\n      iukcy: [1110],\n      iuml: [239],\n      jcirc: [309],\n      jcy: [1081],\n      jfr: [120103],\n      jmath: [567],\n      jopf: [120155],\n      jscr: [119999],\n      jsercy: [1112],\n      jukcy: [1108],\n      kappa: [954],\n      kappav: [1008],\n      kcedil: [311],\n      kcy: [1082],\n      kfr: [120104],\n      kgreen: [312],\n      khcy: [1093],\n      kjcy: [1116],\n      kopf: [120156],\n      kscr: [120000],\n      lAarr: [8666],\n      lArr: [8656],\n      lAtail: [10523],\n      lBarr: [10510],\n      lE: [8806],\n      lEg: [10891],\n      lHar: [10594],\n      lacute: [314],\n      laemptyv: [10676],\n      lagran: [8466],\n      lambda: [955],\n      lang: [10216],\n      langd: [10641],\n      langle: [10216],\n      lap: [10885],\n      laquo: [171],\n      larr: [8592],\n      larrb: [8676],\n      larrbfs: [10527],\n      larrfs: [10525],\n      larrhk: [8617],\n      larrlp: [8619],\n      larrpl: [10553],\n      larrsim: [10611],\n      larrtl: [8610],\n      lat: [10923],\n      latail: [10521],\n      late: [10925],\n      lates: [10925, 65024],\n      lbarr: [10508],\n      lbbrk: [10098],\n      lbrace: [123],\n      lbrack: [91],\n      lbrke: [10635],\n      lbrksld: [10639],\n      lbrkslu: [10637],\n      lcaron: [318],\n      lcedil: [316],\n      lceil: [8968],\n      lcub: [123],\n      lcy: [1083],\n      ldca: [10550],\n      ldquo: [8220],\n      ldquor: [8222],\n      ldrdhar: [10599],\n      ldrushar: [10571],\n      ldsh: [8626],\n      le: [8804],\n      leftarrow: [8592],\n      leftarrowtail: [8610],\n      leftharpoondown: [8637],\n      leftharpoonup: [8636],\n      leftleftarrows: [8647],\n      leftrightarrow: [8596],\n      leftrightarrows: [8646],\n      leftrightharpoons: [8651],\n      leftrightsquigarrow: [8621],\n      leftthreetimes: [8907],\n      leg: [8922],\n      leq: [8804],\n      leqq: [8806],\n      leqslant: [10877],\n      les: [10877],\n      lescc: [10920],\n      lesdot: [10879],\n      lesdoto: [10881],\n      lesdotor: [10883],\n      lesg: [8922, 65024],\n      lesges: [10899],\n      lessapprox: [10885],\n      lessdot: [8918],\n      lesseqgtr: [8922],\n      lesseqqgtr: [10891],\n      lessgtr: [8822],\n      lesssim: [8818],\n      lfisht: [10620],\n      lfloor: [8970],\n      lfr: [120105],\n      lg: [8822],\n      lgE: [10897],\n      lhard: [8637],\n      lharu: [8636],\n      lharul: [10602],\n      lhblk: [9604],\n      ljcy: [1113],\n      ll: [8810],\n      llarr: [8647],\n      llcorner: [8990],\n      llhard: [10603],\n      lltri: [9722],\n      lmidot: [320],\n      lmoust: [9136],\n      lmoustache: [9136],\n      lnE: [8808],\n      lnap: [10889],\n      lnapprox: [10889],\n      lne: [10887],\n      lneq: [10887],\n      lneqq: [8808],\n      lnsim: [8934],\n      loang: [10220],\n      loarr: [8701],\n      lobrk: [10214],\n      longleftarrow: [10229],\n      longleftrightarrow: [10231],\n      longmapsto: [10236],\n      longrightarrow: [10230],\n      looparrowleft: [8619],\n      looparrowright: [8620],\n      lopar: [10629],\n      lopf: [120157],\n      loplus: [10797],\n      lotimes: [10804],\n      lowast: [8727],\n      lowbar: [95],\n      loz: [9674],\n      lozenge: [9674],\n      lozf: [10731],\n      lpar: [40],\n      lparlt: [10643],\n      lrarr: [8646],\n      lrcorner: [8991],\n      lrhar: [8651],\n      lrhard: [10605],\n      lrm: [8206],\n      lrtri: [8895],\n      lsaquo: [8249],\n      lscr: [120001],\n      lsh: [8624],\n      lsim: [8818],\n      lsime: [10893],\n      lsimg: [10895],\n      lsqb: [91],\n      lsquo: [8216],\n      lsquor: [8218],\n      lstrok: [322],\n      lt: [60],\n      ltcc: [10918],\n      ltcir: [10873],\n      ltdot: [8918],\n      lthree: [8907],\n      ltimes: [8905],\n      ltlarr: [10614],\n      ltquest: [10875],\n      ltrPar: [10646],\n      ltri: [9667],\n      ltrie: [8884],\n      ltrif: [9666],\n      lurdshar: [10570],\n      luruhar: [10598],\n      lvertneqq: [8808, 65024],\n      lvnE: [8808, 65024],\n      mDDot: [8762],\n      macr: [175],\n      male: [9794],\n      malt: [10016],\n      maltese: [10016],\n      map: [8614],\n      mapsto: [8614],\n      mapstodown: [8615],\n      mapstoleft: [8612],\n      mapstoup: [8613],\n      marker: [9646],\n      mcomma: [10793],\n      mcy: [1084],\n      mdash: [8212],\n      measuredangle: [8737],\n      mfr: [120106],\n      mho: [8487],\n      micro: [181],\n      mid: [8739],\n      midast: [42],\n      midcir: [10992],\n      middot: [183],\n      minus: [8722],\n      minusb: [8863],\n      minusd: [8760],\n      minusdu: [10794],\n      mlcp: [10971],\n      mldr: [8230],\n      mnplus: [8723],\n      models: [8871],\n      mopf: [120158],\n      mp: [8723],\n      mscr: [120002],\n      mstpos: [8766],\n      mu: [956],\n      multimap: [8888],\n      mumap: [8888],\n      nGg: [8921, 824],\n      nGt: [8811, 8402],\n      nGtv: [8811, 824],\n      nLeftarrow: [8653],\n      nLeftrightarrow: [8654],\n      nLl: [8920, 824],\n      nLt: [8810, 8402],\n      nLtv: [8810, 824],\n      nRightarrow: [8655],\n      nVDash: [8879],\n      nVdash: [8878],\n      nabla: [8711],\n      nacute: [324],\n      nang: [8736, 8402],\n      nap: [8777],\n      napE: [10864, 824],\n      napid: [8779, 824],\n      napos: [329],\n      napprox: [8777],\n      natur: [9838],\n      natural: [9838],\n      naturals: [8469],\n      nbsp: [160],\n      nbump: [8782, 824],\n      nbumpe: [8783, 824],\n      ncap: [10819],\n      ncaron: [328],\n      ncedil: [326],\n      ncong: [8775],\n      ncongdot: [10861, 824],\n      ncup: [10818],\n      ncy: [1085],\n      ndash: [8211],\n      ne: [8800],\n      neArr: [8663],\n      nearhk: [10532],\n      nearr: [8599],\n      nearrow: [8599],\n      nedot: [8784, 824],\n      nequiv: [8802],\n      nesear: [10536],\n      nesim: [8770, 824],\n      nexist: [8708],\n      nexists: [8708],\n      nfr: [120107],\n      ngE: [8807, 824],\n      nge: [8817],\n      ngeq: [8817],\n      ngeqq: [8807, 824],\n      ngeqslant: [10878, 824],\n      nges: [10878, 824],\n      ngsim: [8821],\n      ngt: [8815],\n      ngtr: [8815],\n      nhArr: [8654],\n      nharr: [8622],\n      nhpar: [10994],\n      ni: [8715],\n      nis: [8956],\n      nisd: [8954],\n      niv: [8715],\n      njcy: [1114],\n      nlArr: [8653],\n      nlE: [8806, 824],\n      nlarr: [8602],\n      nldr: [8229],\n      nle: [8816],\n      nleftarrow: [8602],\n      nleftrightarrow: [8622],\n      nleq: [8816],\n      nleqq: [8806, 824],\n      nleqslant: [10877, 824],\n      nles: [10877, 824],\n      nless: [8814],\n      nlsim: [8820],\n      nlt: [8814],\n      nltri: [8938],\n      nltrie: [8940],\n      nmid: [8740],\n      nopf: [120159],\n      not: [172],\n      notin: [8713],\n      notinE: [8953, 824],\n      notindot: [8949, 824],\n      notinva: [8713],\n      notinvb: [8951],\n      notinvc: [8950],\n      notni: [8716],\n      notniva: [8716],\n      notnivb: [8958],\n      notnivc: [8957],\n      npar: [8742],\n      nparallel: [8742],\n      nparsl: [11005, 8421],\n      npart: [8706, 824],\n      npolint: [10772],\n      npr: [8832],\n      nprcue: [8928],\n      npre: [10927, 824],\n      nprec: [8832],\n      npreceq: [10927, 824],\n      nrArr: [8655],\n      nrarr: [8603],\n      nrarrc: [10547, 824],\n      nrarrw: [8605, 824],\n      nrightarrow: [8603],\n      nrtri: [8939],\n      nrtrie: [8941],\n      nsc: [8833],\n      nsccue: [8929],\n      nsce: [10928, 824],\n      nscr: [120003],\n      nshortmid: [8740],\n      nshortparallel: [8742],\n      nsim: [8769],\n      nsime: [8772],\n      nsimeq: [8772],\n      nsmid: [8740],\n      nspar: [8742],\n      nsqsube: [8930],\n      nsqsupe: [8931],\n      nsub: [8836],\n      nsubE: [10949, 824],\n      nsube: [8840],\n      nsubset: [8834, 8402],\n      nsubseteq: [8840],\n      nsubseteqq: [10949, 824],\n      nsucc: [8833],\n      nsucceq: [10928, 824],\n      nsup: [8837],\n      nsupE: [10950, 824],\n      nsupe: [8841],\n      nsupset: [8835, 8402],\n      nsupseteq: [8841],\n      nsupseteqq: [10950, 824],\n      ntgl: [8825],\n      ntilde: [241],\n      ntlg: [8824],\n      ntriangleleft: [8938],\n      ntrianglelefteq: [8940],\n      ntriangleright: [8939],\n      ntrianglerighteq: [8941],\n      nu: [957],\n      num: [35],\n      numero: [8470],\n      numsp: [8199],\n      nvDash: [8877],\n      nvHarr: [10500],\n      nvap: [8781, 8402],\n      nvdash: [8876],\n      nvge: [8805, 8402],\n      nvgt: [62, 8402],\n      nvinfin: [10718],\n      nvlArr: [10498],\n      nvle: [8804, 8402],\n      nvlt: [60, 8402],\n      nvltrie: [8884, 8402],\n      nvrArr: [10499],\n      nvrtrie: [8885, 8402],\n      nvsim: [8764, 8402],\n      nwArr: [8662],\n      nwarhk: [10531],\n      nwarr: [8598],\n      nwarrow: [8598],\n      nwnear: [10535],\n      oS: [9416],\n      oacute: [243],\n      oast: [8859],\n      ocir: [8858],\n      ocirc: [244],\n      ocy: [1086],\n      odash: [8861],\n      odblac: [337],\n      odiv: [10808],\n      odot: [8857],\n      odsold: [10684],\n      oelig: [339],\n      ofcir: [10687],\n      ofr: [120108],\n      ogon: [731],\n      ograve: [242],\n      ogt: [10689],\n      ohbar: [10677],\n      ohm: [937],\n      oint: [8750],\n      olarr: [8634],\n      olcir: [10686],\n      olcross: [10683],\n      oline: [8254],\n      olt: [10688],\n      omacr: [333],\n      omega: [969],\n      omicron: [959],\n      omid: [10678],\n      ominus: [8854],\n      oopf: [120160],\n      opar: [10679],\n      operp: [10681],\n      oplus: [8853],\n      or: [8744],\n      orarr: [8635],\n      ord: [10845],\n      order: [8500],\n      orderof: [8500],\n      ordf: [170],\n      ordm: [186],\n      origof: [8886],\n      oror: [10838],\n      orslope: [10839],\n      orv: [10843],\n      oscr: [8500],\n      oslash: [248],\n      osol: [8856],\n      otilde: [245],\n      otimes: [8855],\n      otimesas: [10806],\n      ouml: [246],\n      ovbar: [9021],\n      par: [8741],\n      para: [182],\n      parallel: [8741],\n      parsim: [10995],\n      parsl: [11005],\n      part: [8706],\n      pcy: [1087],\n      percnt: [37],\n      period: [46],\n      permil: [8240],\n      perp: [8869],\n      pertenk: [8241],\n      pfr: [120109],\n      phi: [966],\n      phiv: [981],\n      phmmat: [8499],\n      phone: [9742],\n      pi: [960],\n      pitchfork: [8916],\n      piv: [982],\n      planck: [8463],\n      planckh: [8462],\n      plankv: [8463],\n      plus: [43],\n      plusacir: [10787],\n      plusb: [8862],\n      pluscir: [10786],\n      plusdo: [8724],\n      plusdu: [10789],\n      pluse: [10866],\n      plusmn: [177],\n      plussim: [10790],\n      plustwo: [10791],\n      pm: [177],\n      pointint: [10773],\n      popf: [120161],\n      pound: [163],\n      pr: [8826],\n      prE: [10931],\n      prap: [10935],\n      prcue: [8828],\n      pre: [10927],\n      prec: [8826],\n      precapprox: [10935],\n      preccurlyeq: [8828],\n      preceq: [10927],\n      precnapprox: [10937],\n      precneqq: [10933],\n      precnsim: [8936],\n      precsim: [8830],\n      prime: [8242],\n      primes: [8473],\n      prnE: [10933],\n      prnap: [10937],\n      prnsim: [8936],\n      prod: [8719],\n      profalar: [9006],\n      profline: [8978],\n      profsurf: [8979],\n      prop: [8733],\n      propto: [8733],\n      prsim: [8830],\n      prurel: [8880],\n      pscr: [120005],\n      psi: [968],\n      puncsp: [8200],\n      qfr: [120110],\n      qint: [10764],\n      qopf: [120162],\n      qprime: [8279],\n      qscr: [120006],\n      quaternions: [8461],\n      quatint: [10774],\n      quest: [63],\n      questeq: [8799],\n      quot: [34],\n      rAarr: [8667],\n      rArr: [8658],\n      rAtail: [10524],\n      rBarr: [10511],\n      rHar: [10596],\n      race: [8765, 817],\n      racute: [341],\n      radic: [8730],\n      raemptyv: [10675],\n      rang: [10217],\n      rangd: [10642],\n      range: [10661],\n      rangle: [10217],\n      raquo: [187],\n      rarr: [8594],\n      rarrap: [10613],\n      rarrb: [8677],\n      rarrbfs: [10528],\n      rarrc: [10547],\n      rarrfs: [10526],\n      rarrhk: [8618],\n      rarrlp: [8620],\n      rarrpl: [10565],\n      rarrsim: [10612],\n      rarrtl: [8611],\n      rarrw: [8605],\n      ratail: [10522],\n      ratio: [8758],\n      rationals: [8474],\n      rbarr: [10509],\n      rbbrk: [10099],\n      rbrace: [125],\n      rbrack: [93],\n      rbrke: [10636],\n      rbrksld: [10638],\n      rbrkslu: [10640],\n      rcaron: [345],\n      rcedil: [343],\n      rceil: [8969],\n      rcub: [125],\n      rcy: [1088],\n      rdca: [10551],\n      rdldhar: [10601],\n      rdquo: [8221],\n      rdquor: [8221],\n      rdsh: [8627],\n      real: [8476],\n      realine: [8475],\n      realpart: [8476],\n      reals: [8477],\n      rect: [9645],\n      reg: [174],\n      rfisht: [10621],\n      rfloor: [8971],\n      rfr: [120111],\n      rhard: [8641],\n      rharu: [8640],\n      rharul: [10604],\n      rho: [961],\n      rhov: [1009],\n      rightarrow: [8594],\n      rightarrowtail: [8611],\n      rightharpoondown: [8641],\n      rightharpoonup: [8640],\n      rightleftarrows: [8644],\n      rightleftharpoons: [8652],\n      rightrightarrows: [8649],\n      rightsquigarrow: [8605],\n      rightthreetimes: [8908],\n      ring: [730],\n      risingdotseq: [8787],\n      rlarr: [8644],\n      rlhar: [8652],\n      rlm: [8207],\n      rmoust: [9137],\n      rmoustache: [9137],\n      rnmid: [10990],\n      roang: [10221],\n      roarr: [8702],\n      robrk: [10215],\n      ropar: [10630],\n      ropf: [120163],\n      roplus: [10798],\n      rotimes: [10805],\n      rpar: [41],\n      rpargt: [10644],\n      rppolint: [10770],\n      rrarr: [8649],\n      rsaquo: [8250],\n      rscr: [120007],\n      rsh: [8625],\n      rsqb: [93],\n      rsquo: [8217],\n      rsquor: [8217],\n      rthree: [8908],\n      rtimes: [8906],\n      rtri: [9657],\n      rtrie: [8885],\n      rtrif: [9656],\n      rtriltri: [10702],\n      ruluhar: [10600],\n      rx: [8478],\n      sacute: [347],\n      sbquo: [8218],\n      sc: [8827],\n      scE: [10932],\n      scap: [10936],\n      scaron: [353],\n      sccue: [8829],\n      sce: [10928],\n      scedil: [351],\n      scirc: [349],\n      scnE: [10934],\n      scnap: [10938],\n      scnsim: [8937],\n      scpolint: [10771],\n      scsim: [8831],\n      scy: [1089],\n      sdot: [8901],\n      sdotb: [8865],\n      sdote: [10854],\n      seArr: [8664],\n      searhk: [10533],\n      searr: [8600],\n      searrow: [8600],\n      sect: [167],\n      semi: [59],\n      seswar: [10537],\n      setminus: [8726],\n      setmn: [8726],\n      sext: [10038],\n      sfr: [120112],\n      sfrown: [8994],\n      sharp: [9839],\n      shchcy: [1097],\n      shcy: [1096],\n      shortmid: [8739],\n      shortparallel: [8741],\n      shy: [173],\n      sigma: [963],\n      sigmaf: [962],\n      sigmav: [962],\n      sim: [8764],\n      simdot: [10858],\n      sime: [8771],\n      simeq: [8771],\n      simg: [10910],\n      simgE: [10912],\n      siml: [10909],\n      simlE: [10911],\n      simne: [8774],\n      simplus: [10788],\n      simrarr: [10610],\n      slarr: [8592],\n      smallsetminus: [8726],\n      smashp: [10803],\n      smeparsl: [10724],\n      smid: [8739],\n      smile: [8995],\n      smt: [10922],\n      smte: [10924],\n      smtes: [10924, 65024],\n      softcy: [1100],\n      sol: [47],\n      solb: [10692],\n      solbar: [9023],\n      sopf: [120164],\n      spades: [9824],\n      spadesuit: [9824],\n      spar: [8741],\n      sqcap: [8851],\n      sqcaps: [8851, 65024],\n      sqcup: [8852],\n      sqcups: [8852, 65024],\n      sqsub: [8847],\n      sqsube: [8849],\n      sqsubset: [8847],\n      sqsubseteq: [8849],\n      sqsup: [8848],\n      sqsupe: [8850],\n      sqsupset: [8848],\n      sqsupseteq: [8850],\n      squ: [9633],\n      square: [9633],\n      squarf: [9642],\n      squf: [9642],\n      srarr: [8594],\n      sscr: [120008],\n      ssetmn: [8726],\n      ssmile: [8995],\n      sstarf: [8902],\n      star: [9734],\n      starf: [9733],\n      straightepsilon: [1013],\n      straightphi: [981],\n      strns: [175],\n      sub: [8834],\n      subE: [10949],\n      subdot: [10941],\n      sube: [8838],\n      subedot: [10947],\n      submult: [10945],\n      subnE: [10955],\n      subne: [8842],\n      subplus: [10943],\n      subrarr: [10617],\n      subset: [8834],\n      subseteq: [8838],\n      subseteqq: [10949],\n      subsetneq: [8842],\n      subsetneqq: [10955],\n      subsim: [10951],\n      subsub: [10965],\n      subsup: [10963],\n      succ: [8827],\n      succapprox: [10936],\n      succcurlyeq: [8829],\n      succeq: [10928],\n      succnapprox: [10938],\n      succneqq: [10934],\n      succnsim: [8937],\n      succsim: [8831],\n      sum: [8721],\n      sung: [9834],\n      sup: [8835],\n      sup1: [185],\n      sup2: [178],\n      sup3: [179],\n      supE: [10950],\n      supdot: [10942],\n      supdsub: [10968],\n      supe: [8839],\n      supedot: [10948],\n      suphsol: [10185],\n      suphsub: [10967],\n      suplarr: [10619],\n      supmult: [10946],\n      supnE: [10956],\n      supne: [8843],\n      supplus: [10944],\n      supset: [8835],\n      supseteq: [8839],\n      supseteqq: [10950],\n      supsetneq: [8843],\n      supsetneqq: [10956],\n      supsim: [10952],\n      supsub: [10964],\n      supsup: [10966],\n      swArr: [8665],\n      swarhk: [10534],\n      swarr: [8601],\n      swarrow: [8601],\n      swnwar: [10538],\n      szlig: [223],\n      target: [8982],\n      tau: [964],\n      tbrk: [9140],\n      tcaron: [357],\n      tcedil: [355],\n      tcy: [1090],\n      tdot: [8411],\n      telrec: [8981],\n      tfr: [120113],\n      there4: [8756],\n      therefore: [8756],\n      theta: [952],\n      thetasym: [977],\n      thetav: [977],\n      thickapprox: [8776],\n      thicksim: [8764],\n      thinsp: [8201],\n      thkap: [8776],\n      thksim: [8764],\n      thorn: [254],\n      tilde: [732],\n      times: [215],\n      timesb: [8864],\n      timesbar: [10801],\n      timesd: [10800],\n      tint: [8749],\n      toea: [10536],\n      top: [8868],\n      topbot: [9014],\n      topcir: [10993],\n      topf: [120165],\n      topfork: [10970],\n      tosa: [10537],\n      tprime: [8244],\n      trade: [8482],\n      triangle: [9653],\n      triangledown: [9663],\n      triangleleft: [9667],\n      trianglelefteq: [8884],\n      triangleq: [8796],\n      triangleright: [9657],\n      trianglerighteq: [8885],\n      tridot: [9708],\n      trie: [8796],\n      triminus: [10810],\n      triplus: [10809],\n      trisb: [10701],\n      tritime: [10811],\n      trpezium: [9186],\n      tscr: [120009],\n      tscy: [1094],\n      tshcy: [1115],\n      tstrok: [359],\n      twixt: [8812],\n      twoheadleftarrow: [8606],\n      twoheadrightarrow: [8608],\n      uArr: [8657],\n      uHar: [10595],\n      uacute: [250],\n      uarr: [8593],\n      ubrcy: [1118],\n      ubreve: [365],\n      ucirc: [251],\n      ucy: [1091],\n      udarr: [8645],\n      udblac: [369],\n      udhar: [10606],\n      ufisht: [10622],\n      ufr: [120114],\n      ugrave: [249],\n      uharl: [8639],\n      uharr: [8638],\n      uhblk: [9600],\n      ulcorn: [8988],\n      ulcorner: [8988],\n      ulcrop: [8975],\n      ultri: [9720],\n      umacr: [363],\n      uml: [168],\n      uogon: [371],\n      uopf: [120166],\n      uparrow: [8593],\n      updownarrow: [8597],\n      upharpoonleft: [8639],\n      upharpoonright: [8638],\n      uplus: [8846],\n      upsi: [965],\n      upsih: [978],\n      upsilon: [965],\n      upuparrows: [8648],\n      urcorn: [8989],\n      urcorner: [8989],\n      urcrop: [8974],\n      uring: [367],\n      urtri: [9721],\n      uscr: [120010],\n      utdot: [8944],\n      utilde: [361],\n      utri: [9653],\n      utrif: [9652],\n      uuarr: [8648],\n      uuml: [252],\n      uwangle: [10663],\n      vArr: [8661],\n      vBar: [10984],\n      vBarv: [10985],\n      vDash: [8872],\n      vangrt: [10652],\n      varepsilon: [1013],\n      varkappa: [1008],\n      varnothing: [8709],\n      varphi: [981],\n      varpi: [982],\n      varpropto: [8733],\n      varr: [8597],\n      varrho: [1009],\n      varsigma: [962],\n      varsubsetneq: [8842, 65024],\n      varsubsetneqq: [10955, 65024],\n      varsupsetneq: [8843, 65024],\n      varsupsetneqq: [10956, 65024],\n      vartheta: [977],\n      vartriangleleft: [8882],\n      vartriangleright: [8883],\n      vcy: [1074],\n      vdash: [8866],\n      vee: [8744],\n      veebar: [8891],\n      veeeq: [8794],\n      vellip: [8942],\n      verbar: [124],\n      vert: [124],\n      vfr: [120115],\n      vltri: [8882],\n      vnsub: [8834, 8402],\n      vnsup: [8835, 8402],\n      vopf: [120167],\n      vprop: [8733],\n      vrtri: [8883],\n      vscr: [120011],\n      vsubnE: [10955, 65024],\n      vsubne: [8842, 65024],\n      vsupnE: [10956, 65024],\n      vsupne: [8843, 65024],\n      vzigzag: [10650],\n      wcirc: [373],\n      wedbar: [10847],\n      wedge: [8743],\n      wedgeq: [8793],\n      weierp: [8472],\n      wfr: [120116],\n      wopf: [120168],\n      wp: [8472],\n      wr: [8768],\n      wreath: [8768],\n      wscr: [120012],\n      xcap: [8898],\n      xcirc: [9711],\n      xcup: [8899],\n      xdtri: [9661],\n      xfr: [120117],\n      xhArr: [10234],\n      xharr: [10231],\n      xi: [958],\n      xlArr: [10232],\n      xlarr: [10229],\n      xmap: [10236],\n      xnis: [8955],\n      xodot: [10752],\n      xopf: [120169],\n      xoplus: [10753],\n      xotime: [10754],\n      xrArr: [10233],\n      xrarr: [10230],\n      xscr: [120013],\n      xsqcup: [10758],\n      xuplus: [10756],\n      xutri: [9651],\n      xvee: [8897],\n      xwedge: [8896],\n      yacute: [253],\n      yacy: [1103],\n      ycirc: [375],\n      ycy: [1099],\n      yen: [165],\n      yfr: [120118],\n      yicy: [1111],\n      yopf: [120170],\n      yscr: [120014],\n      yucy: [1102],\n      yuml: [255],\n      zacute: [378],\n      zcaron: [382],\n      zcy: [1079],\n      zdot: [380],\n      zeetrf: [8488],\n      zeta: [950],\n      zfr: [120119],\n      zhcy: [1078],\n      zigrarr: [8669],\n      zopf: [120171],\n      zscr: [120015],\n      zwj: [8205],\n      zwnj: [8204]\n    };\n  });\ndefine(\"simple-html-tokenizer/char-refs/min\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\n      quot: [34],\n      amp: [38],\n      apos: [39],\n      lt: [60],\n      gt: [62]\n    };\n  });\ndefine(\"simple-html-tokenizer/entity-parser\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function EntityParser(namedCodepoints) {\n      this.namedCodepoints = namedCodepoints;\n    }\n\n    EntityParser.prototype.parse = function (tokenizer) {\n      var input = tokenizer.input.slice(tokenizer.char);\n      var matches = input.match(/^#(?:x|X)([0-9A-Fa-f]+);/);\n      if (matches) {\n        tokenizer.char += matches[0].length;\n        return String.fromCharCode(parseInt(matches[1], 16));\n      }\n      matches = input.match(/^#([0-9]+);/);\n      if (matches) {\n        tokenizer.char += matches[0].length;\n        return String.fromCharCode(parseInt(matches[1], 10));\n      }\n      matches = input.match(/^([A-Za-z]+);/);\n      if (matches) {\n        var codepoints = this.namedCodepoints[matches[1]];\n        if (codepoints) {\n          tokenizer.char += matches[0].length;\n          for (var i = 0, buffer = ''; i < codepoints.length; i++) {\n            buffer += String.fromCharCode(codepoints[i]);\n          }\n          return buffer;\n        }\n      }\n    };\n\n    __exports__[\"default\"] = EntityParser;\n  });\ndefine(\"simple-html-tokenizer/generate\",\n  [\"./generator\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Generator = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function generate(tokens) {\n      var generator = new Generator();\n      return generator.generate(tokens);\n    }\n  });\ndefine(\"simple-html-tokenizer/generator\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var escape =  (function () {\n      var test = /[&<>\"'`]/;\n      var replace = /[&<>\"'`]/g;\n      var map = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\",\n        \"'\": \"&#x27;\",\n        \"`\": \"&#x60;\"\n      };\n      function escapeChar(char) {\n        return map[char];\n      }\n      return function escape(string) {\n        if(!test.test(string)) {\n          return string;\n        }\n        return string.replace(replace, escapeChar);\n      };\n    }());\n\n    function Generator() {\n      this.escape = escape;\n    }\n\n    Generator.prototype = {\n      generate: function (tokens) {\n        var buffer = '';\n        var token;\n        for (var i=0; i<tokens.length; i++) {\n          token = tokens[i];\n          buffer += this[token.type](token);\n        }\n        return buffer;\n      },\n\n      escape: function (text) {\n        var unsafeCharsMap = this.unsafeCharsMap;\n        return text.replace(this.unsafeChars, function (char) {\n          return unsafeCharsMap[char] || char;\n        });\n      },\n\n      StartTag: function (token) {\n        var out = \"<\";\n        out += token.tagName;\n\n        if (token.attributes.length) {\n          out += \" \" + this.Attributes(token.attributes);\n        }\n\n        out += \">\";\n\n        return out;\n      },\n\n      EndTag: function (token) {\n        return \"</\" + token.tagName + \">\";\n      },\n\n      Chars: function (token) {\n        return this.escape(token.chars);\n      },\n\n      Comment: function (token) {\n        return \"<!--\" + token.chars + \"-->\";\n      },\n\n      Attributes: function (attributes) {\n        var out = [], attribute;\n\n        for (var i=0, l=attributes.length; i<l; i++) {\n          attribute = attributes[i];\n\n          out.push(this.Attribute(attribute[0], attribute[1]));\n        }\n\n        return out.join(\" \");\n      },\n\n      Attribute: function (name, value) {\n        var attrString = name;\n\n        if (value) {\n          value = this.escape(value);\n          attrString += \"=\\\"\" + value + \"\\\"\";\n        }\n\n        return attrString;\n      }\n    };\n\n    __exports__[\"default\"] = Generator;\n  });\ndefine(\"simple-html-tokenizer/tokenize\",\n  [\"./tokenizer\",\"./entity-parser\",\"./char-refs/full\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Tokenizer = __dependency1__[\"default\"];\n    var EntityParser = __dependency2__[\"default\"];\n    var namedCodepoints = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = function tokenize(input) {\n      var tokenizer = new Tokenizer(input, new EntityParser(namedCodepoints));\n      return tokenizer.tokenize();\n    }\n  });\ndefine(\"simple-html-tokenizer/tokenizer\",\n  [\"./utils\",\"./tokens\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var preprocessInput = __dependency1__.preprocessInput;\n    var isAlpha = __dependency1__.isAlpha;\n    var isSpace = __dependency1__.isSpace;\n    var StartTag = __dependency2__.StartTag;\n    var EndTag = __dependency2__.EndTag;\n    var Chars = __dependency2__.Chars;\n    var Comment = __dependency2__.Comment;\n\n    function Tokenizer(input, entityParser) {\n      this.input = preprocessInput(input);\n      this.entityParser = entityParser;\n      this.char = 0;\n      this.line = 1;\n      this.column = 0;\n\n      this.state = 'data';\n      this.token = null;\n    }\n\n    Tokenizer.prototype = {\n      tokenize: function() {\n        var tokens = [], token;\n\n        while (true) {\n          token = this.lex();\n          if (token === 'EOF') { break; }\n          if (token) { tokens.push(token); }\n        }\n\n        if (this.token) {\n          tokens.push(this.token);\n        }\n\n        return tokens;\n      },\n\n      tokenizePart: function(string) {\n        this.input += preprocessInput(string);\n        var tokens = [], token;\n\n        while (this.char < this.input.length) {\n          token = this.lex();\n          if (token) { tokens.push(token); }\n        }\n\n        this.tokens = (this.tokens || []).concat(tokens);\n        return tokens;\n      },\n\n      tokenizeEOF: function() {\n        var token = this.token;\n        if (token) {\n          this.token = null;\n          return token;\n        }\n      },\n\n      createTag: function(Type, char) {\n        var lastToken = this.token;\n        this.token = new Type(char);\n        this.state = 'tagName';\n        return lastToken;\n      },\n\n      addToTagName: function(char) {\n        this.token.tagName += char;\n      },\n\n      selfClosing: function() {\n        this.token.selfClosing = true;\n      },\n\n      createAttribute: function(char) {\n        this._currentAttribute = [char.toLowerCase(), \"\", null];\n        this.token.attributes.push(this._currentAttribute);\n        this.state = 'attributeName';\n      },\n\n      addToAttributeName: function(char) {\n        this._currentAttribute[0] += char;\n      },\n\n      markAttributeQuoted: function(value) {\n        this._currentAttribute[2] = value;\n      },\n\n      finalizeAttributeValue: function() {\n        if (this._currentAttribute) {\n          if (this._currentAttribute[2] === null) {\n            this._currentAttribute[2] = false;\n          }\n          this._currentAttribute = undefined;\n        }\n      },\n\n      addToAttributeValue: function(char) {\n        this._currentAttribute[1] = this._currentAttribute[1] || \"\";\n        this._currentAttribute[1] += char;\n      },\n\n      createComment: function() {\n        var lastToken = this.token;\n        this.token = new Comment();\n        this.state = 'commentStart';\n        return lastToken;\n      },\n\n      addToComment: function(char) {\n        this.addChar(char);\n      },\n\n      addChar: function(char) {\n        this.token.chars += char;\n      },\n\n      finalizeToken: function() {\n        if (this.token.type === 'StartTag') {\n          this.finalizeAttributeValue();\n        }\n        return this.token;\n      },\n\n      emitData: function() {\n        this.addLocInfo(this.line, this.column - 1);\n        var lastToken = this.token;\n        this.token = null;\n        this.state = 'tagOpen';\n        return lastToken;\n      },\n\n      emitToken: function() {\n        this.addLocInfo();\n        var lastToken = this.finalizeToken();\n        this.token = null;\n        this.state = 'data';\n        return lastToken;\n      },\n\n      addData: function(char) {\n        if (this.token === null) {\n          this.token = new Chars();\n          this.markFirst();\n        }\n\n        this.addChar(char);\n      },\n\n      markFirst: function(line, column) {\n        this.firstLine = (line === 0) ? 0 : (line || this.line);\n        this.firstColumn = (column === 0) ? 0 : (column || this.column);\n      },\n\n      addLocInfo: function(line, column) {\n        if (!this.token) {\n          return;\n        }\n        this.token.firstLine = this.firstLine;\n        this.token.firstColumn = this.firstColumn;\n        this.token.lastLine = (line === 0) ? 0 : (line || this.line);\n        this.token.lastColumn = (column === 0) ? 0 : (column || this.column);\n      },\n\n      consumeCharRef: function() {\n        return this.entityParser.parse(this);\n      },\n\n      lex: function() {\n        var char = this.input.charAt(this.char++);\n\n        if (char) {\n          if (char === \"\\n\") {\n            this.line++;\n            this.column = 0;\n          } else {\n            this.column++;\n          }\n          return this.states[this.state].call(this, char);\n        } else {\n          this.addLocInfo(this.line, this.column);\n          return 'EOF';\n        }\n      },\n\n      states: {\n        data: function(char) {\n          if (char === \"<\") {\n            var chars = this.emitData();\n            this.markFirst();\n            return chars;\n          } else if (char === \"&\") {\n            this.addData(this.consumeCharRef() || \"&\");\n          } else {\n            this.addData(char);\n          }\n        },\n\n        tagOpen: function(char) {\n          if (char === \"!\") {\n            this.state = 'markupDeclaration';\n          } else if (char === \"/\") {\n            this.state = 'endTagOpen';\n          } else if (isAlpha(char)) {\n            return this.createTag(StartTag, char.toLowerCase());\n          }\n        },\n\n        markupDeclaration: function(char) {\n          if (char === \"-\" && this.input.charAt(this.char) === \"-\") {\n            this.char++;\n            this.createComment();\n          }\n        },\n\n        commentStart: function(char) {\n          if (char === \"-\") {\n            this.state = 'commentStartDash';\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.addToComment(char);\n            this.state = 'comment';\n          }\n        },\n\n        commentStartDash: function(char) {\n          if (char === \"-\") {\n            this.state = 'commentEnd';\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.addToComment(\"-\");\n            this.state = 'comment';\n          }\n        },\n\n        comment: function(char) {\n          if (char === \"-\") {\n            this.state = 'commentEndDash';\n          } else {\n            this.addToComment(char);\n          }\n        },\n\n        commentEndDash: function(char) {\n          if (char === \"-\") {\n            this.state = 'commentEnd';\n          } else {\n            this.addToComment(\"-\" + char);\n            this.state = 'comment';\n          }\n        },\n\n        commentEnd: function(char) {\n          if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.addToComment(\"--\" + char);\n            this.state = 'comment';\n          }\n        },\n\n        tagName: function(char) {\n          if (isSpace(char)) {\n            this.state = 'beforeAttributeName';\n          } else if (char === \"/\") {\n            this.state = 'selfClosingStartTag';\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.addToTagName(char);\n          }\n        },\n\n        beforeAttributeName: function(char) {\n          if (isSpace(char)) {\n            return;\n          } else if (char === \"/\") {\n            this.state = 'selfClosingStartTag';\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.createAttribute(char);\n          }\n        },\n\n        attributeName: function(char) {\n          if (isSpace(char)) {\n            this.state = 'afterAttributeName';\n          } else if (char === \"/\") {\n            this.state = 'selfClosingStartTag';\n          } else if (char === \"=\") {\n            this.state = 'beforeAttributeValue';\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.addToAttributeName(char);\n          }\n        },\n\n        afterAttributeName: function(char) {\n          if (isSpace(char)) {\n            return;\n          } else if (char === \"/\") {\n            this.state = 'selfClosingStartTag';\n          } else if (char === \"=\") {\n            this.state = 'beforeAttributeValue';\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.finalizeAttributeValue();\n            this.createAttribute(char);\n          }\n        },\n\n        beforeAttributeValue: function(char) {\n          if (isSpace(char)) {\n            return;\n          } else if (char === '\"') {\n            this.state = 'attributeValueDoubleQuoted';\n            this.markAttributeQuoted(true);\n          } else if (char === \"'\") {\n            this.state = 'attributeValueSingleQuoted';\n            this.markAttributeQuoted(true);\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.state = 'attributeValueUnquoted';\n            this.markAttributeQuoted(false);\n            this.addToAttributeValue(char);\n          }\n        },\n\n        attributeValueDoubleQuoted: function(char) {\n          if (char === '\"') {\n            this.finalizeAttributeValue();\n            this.state = 'afterAttributeValueQuoted';\n          } else if (char === \"&\") {\n            this.addToAttributeValue(this.consumeCharRef('\"') || \"&\");\n          } else {\n            this.addToAttributeValue(char);\n          }\n        },\n\n        attributeValueSingleQuoted: function(char) {\n          if (char === \"'\") {\n            this.finalizeAttributeValue();\n            this.state = 'afterAttributeValueQuoted';\n          } else if (char === \"&\") {\n            this.addToAttributeValue(this.consumeCharRef(\"'\") || \"&\");\n          } else {\n            this.addToAttributeValue(char);\n          }\n        },\n\n        attributeValueUnquoted: function(char) {\n          if (isSpace(char)) {\n            this.finalizeAttributeValue();\n            this.state = 'beforeAttributeName';\n          } else if (char === \"&\") {\n            this.addToAttributeValue(this.consumeCharRef(\">\") || \"&\");\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.addToAttributeValue(char);\n          }\n        },\n\n        afterAttributeValueQuoted: function(char) {\n          if (isSpace(char)) {\n            this.state = 'beforeAttributeName';\n          } else if (char === \"/\") {\n            this.state = 'selfClosingStartTag';\n          } else if (char === \">\") {\n            return this.emitToken();\n          } else {\n            this.char--;\n            this.state = 'beforeAttributeName';\n          }\n        },\n\n        selfClosingStartTag: function(char) {\n          if (char === \">\") {\n            this.selfClosing();\n            return this.emitToken();\n          } else {\n            this.char--;\n            this.state = 'beforeAttributeName';\n          }\n        },\n\n        endTagOpen: function(char) {\n          if (isAlpha(char)) {\n            this.createTag(EndTag, char.toLowerCase());\n          }\n        }\n      }\n    };\n\n    __exports__[\"default\"] = Tokenizer;\n  });\ndefine(\"simple-html-tokenizer/tokens\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function StartTag(tagName, attributes, selfClosing) {\n      this.type = 'StartTag';\n      this.tagName = tagName || '';\n      this.attributes = attributes || [];\n      this.selfClosing = selfClosing === true;\n    }\n\n    __exports__.StartTag = StartTag;function EndTag(tagName) {\n      this.type = 'EndTag';\n      this.tagName = tagName || '';\n    }\n\n    __exports__.EndTag = EndTag;function Chars(chars) {\n      this.type = 'Chars';\n      this.chars = chars || \"\";\n    }\n\n    __exports__.Chars = Chars;function Comment(chars) {\n      this.type = 'Comment';\n      this.chars = chars || '';\n    }\n\n    __exports__.Comment = Comment;\n  });\ndefine(\"simple-html-tokenizer/utils\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    function isSpace(char) {\n      return (/[\\t\\n\\f ]/).test(char);\n    }\n\n    __exports__.isSpace = isSpace;function isAlpha(char) {\n      return (/[A-Za-z]/).test(char);\n    }\n\n    __exports__.isAlpha = isAlpha;function preprocessInput(input) {\n      return input.replace(/\\r\\n?/g, \"\\n\");\n    }\n\n    __exports__.preprocessInput = preprocessInput;\n  });\nrequireModule(\"ember-template-compiler\");\n\n})();",";\nif (typeof exports === \"object\") {\n  module.exports = Ember.__loader.require(\"ember-template-compiler\");\n }"],"names":[],"mappingsnoSA;AACA;AACA;","file":"ember-template-compiler.js"}